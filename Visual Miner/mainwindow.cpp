#include "mainwindow.h"
#include "ui_mainwindow.h"
#include "main.cpp"
#include "graphcreator.h"
#include <QVector>  //for std::vector
#include <QString>
#include <QDebug>
#include <QDateTime>
#include "mainwindow.h"
//#include <QtDataVisualization/Q3DBars>

MainWindow::MainWindow(QWidget *parent) :
    QMainWindow(parent),
    ui(new Ui::MainWindow),

    bars (new Q3DBars),
    m_primarySeries  (new QBar3DSeries),
    m_secondarySeries (new QBar3DSeries),

    m_xRotation (0.0f),
    m_yRotation (0.0f),
    m_fontSize (30),

    m_yearAxis (new QCategory3DAxis),
    m_monthAxis (new QCategory3DAxis),
    m_hotelEntry (new QValue3DAxis),

    //newsest stuff
    monthFin(1)

{

    ui->setupUi(this);

    ui->label_3->setVisible(false);


    m_hotelFlow = new QQuickWidget(this) ;
    m_hotelFlow->rootContext()->setContextProperty("Test",this);
    m_hotelFlow->setSource(QUrl("qrc:/main.qml"));
    m_hotelFlow->setResizeMode(QQuickWidget::SizeRootObjectToView);

    ui->pushButton_4->setEnabled(false);


    int dateEnd = 0;
    for (int i = 0; i <= 12; ++i) {
//        ui->comboBox_Start_2->addItem(i);
        switch (i) {
            case 1: ui->comboBox_Start_2->addItem("January");ui->comboBox_End_2->addItem("January");dateEnd = 31;break;
            case 2: ui->comboBox_Start_2->addItem("Febuary");ui->comboBox_End_2->addItem("Febuary");dateEnd = 28;break;
            case 3: ui->comboBox_Start_2->addItem("March");ui->comboBox_End_2->addItem("March");dateEnd = 31;break;
            case 4: ui->comboBox_Start_2->addItem("April");ui->comboBox_End_2->addItem("April");dateEnd = 30;break;
            case 5: ui->comboBox_Start_2->addItem("May");ui->comboBox_End_2->addItem("May");dateEnd = 31;break;
            case 6: ui->comboBox_Start_2->addItem("June");ui->comboBox_End_2->addItem("June");dateEnd = 30;break;
            case 7: ui->comboBox_Start_2->addItem("July");ui->comboBox_End_2->addItem("July");dateEnd = 31;break;
            case 8: ui->comboBox_Start_2->addItem("August");ui->comboBox_End_2->addItem("August");dateEnd = 31;break;
            case 9: ui->comboBox_Start_2->addItem("September");ui->comboBox_End_2->addItem("September");dateEnd = 30;break;
            case 10: ui->comboBox_Start_2->addItem("October");ui->comboBox_End_2->addItem("October");dateEnd = 31;break;
            case 11: ui->comboBox_Start_2->addItem("November");ui->comboBox_End_2->addItem("November");dateEnd = 30;break;
            case 12: ui->comboBox_Start_2->addItem("December");ui->comboBox_End_2->addItem("December");dateEnd = 31;break;
            default: break;
        }
    }

    //interface setting

}

QString MainWindow::getEnPoint() {
    return endd();
}

QString MainWindow::getStarPoint() {
    return startt();
}

#define database2 {



QVector<qreal> MainWindow::getIDValues()const {
    QVector<qreal> id;
    id.append({
    6956,2215,4384,8354,8570,8256,3890,2203,2198,6431,6352,3151,6521,73,2951,6319,8158,8241,4248,3592,5473,1003,3199,2520,1508,7048,654,350,4738,2378,521,5535,3517,3476,7708,7237,2531,6630,2195,3918,7647,3463,4795,6902,3993,26,2946,8330,5375,4399,8520,3637,9820,2831,2310,1514,
    9506,9617,1690,8308,6194,623,4180,7704,713,6835,4913,8832,9349,9527,6706,2892,3318,9566,3393,6015,4128,6135,7727,9529,7745,7961,1477,9820,5713,5004,1047,7479,5668,5998,9649,7063,972,208,303,3406,8644,1192,9163,4925,3111,6854,6530,2113,8715,1079,6261,7740,1851,7658,8191,5055,
    3711,3946,6845,4603,1,4181,1467,8383,8667,7408,9346,2652,8424,7530,6025,1595,2133,2553,6796,3382,8366,1317,8625,8485,1629,9956,2924,654,175,7768,3187,3597,4677,5054,6704,6426,8650,133,8756,912,7940,8105,4012,8426,6941,4675,978,7279,5813,5801,8430,1676,7930,4609,3753,7791,
    2429,6843,4686,9822,9946,968,1018,1215,6105,4270,4816,841,5113,8387,9492,9504,8511,2377,9960,4917,3915,638,7990,8319,4942,8677,8020,3328,3715,6354,4499,8145,5699,985,8756,517,6321,2291,2390,6459,1765,6747,5762,5908,1425,8530,6957,8569,5992,8884,2595,3195,5723,2979,2968,9416,
    3317,2008,8637,3644,260,708,1528,2069,6344,7995,9757,1672,3128,936,4679,7277,1854,7427,493,930,2960,5198,6507,7037,3070,7561,3649,4308,533,8702,9529,3869,3724,4980,1936,5479,6619,3879,864,5025,5557,2913,9755,3735,203,2620,4392,5949,7635,4592,5724,6977,9894,5298,3298,2959,
    7114,1986,3307,4114,2838,695,3828,1630,419,5945,2173,4784,300,266,9575,9651,2099,2906,6153,1864,8142,5214,462,2730,1446,1126,4896,1517,6481,4724,7906,330,3621,7261,2137,7787,3466,7937,7572,5997,1886,1745,9358,3559,9457,994,2838,5940,1151,3655,6628,7198,9484,1261,8984,2747,
    5596,3290,7811,9586,4029,1009,8485,4092,1105,3324,3812,1901,8822,8929,2390,7584,8275,6439,3877,2369,9359,16,1289,8183,5624,9706,3853,6691,536,9218,3120,2681,1155,2688,3822,7619,5705,5460,6471,5811,5356,3574,9967,8047,7088,4704,33,6963,3318,6047,7191,8803,3419,9722,9326,1172,
    742,565,3486,4831,1726,1033,485,3146,8313,9180,1407,1506,6949,2242,8327,3607,8375,5727,3279,4112,4331,7937,8136,444,2528,9274,2706,1406,5823,3620,3477,1218,5503,9291,8693,1872,2025,7033,3999,1150,1809,7916,2427,499,2084,9628,9972,5349,468,8850,9427,7905,3476,1469,8981,5524,
    8777,8013,6188,7864,2039,390,3085,9638,8469,4824,5554,8519,1728,5120,4155,4451,6361,7674,4752,2239,352,6260,3991,7003,1964,2041,2435,9978,3320,929,2248,4946,8479,3142,9429,8174,9450,6695,4068,8117,7835,2305,257,495,2555,7726,4452,7386,7256,6726,6090,75,9216,6382,8391,7702,
    9854,3556,6871,3521,1896,6001,8044,9791,7507,8469,7223,7394,9736,2149,9949,631,834,3304,7257,7480,8498,4422,6639,4160,7000,8260,2240,1496,2152,5192,7561,7280,9803,2049,6573,9083,6924,912,9917,9377,8819,4709,8878,6414,1074,9859,8008,5703,9203,7868,4863,7031,5226,52,5917,6766,
    3636,3499,6086,8884,3810,6358,3568,7474,2183,4198,3072,9346,4612,6871,9469,2572,6445,6115,9716,9382,2857,8917,5233,2401,6462,7572,4080,3482,2103,9585,4406,8489,4032,499,5426,9030,7208,7498,8588,1294,6031,2066,6723,39,1261,838,5293,7113,7806,9702,2807,5808,5572,8478,5338,8665,
    6436,8614,3021,9567,5636,3004,1264,1767,9368,479,1438,6828,8348,4787,7407,7432,2748,4815,8504,4369,5509,4866,1529,1188,1922,1768,2859,1564,6590,660,3403,8883,8123,7881,3582,3606,1480,8190,9428,4313,5525,7116,2452,8611,5664,8415,4528,6571,2169,1833,6625,1929,9385,6423,6460,495,
    3356,3112,3335,325,3697,435,4435,8232,4773,6976,4490,6787,3509,3265,4457,5338,9595,196,9331,6210,2709,5234,3601,1556,8690,7527,5,2721,3288,9565,5060,5871,264,9000,9722,736,8696,532,9682,7668,8542,6745,1379,5289,4650,6633,2243,4875,3926,3764,9405,8809,957,9334,561,7235,
    6550,9936,1462,6524,9138,1303,6698,9829,380,9516,716,7107,4818,2745,9212,5610,6240,7605,2080,5174,479,4626,8460,3482,7092,5786,744,6611,2930,4171,4070,5270,5945,8456,9446,3412,2141,9121,8028,8630,3844,3216,8628,9220,9109,2731,5052,6138,7321,8124,4294,6928,4973,444,4880,1106,
    4449,558,5016,1412,270,1173,8696,5224,7717,3287,3645,2246,5350,5350,2286,1858,2558,483,7740,5092,6705,356,9509,7261,7992,3873,4950,6071,7907,9768,3257,4169,4823,2311,1783,2205,8449,1527,9984,3811,4415,5351,9717,5295,6148,560,5678,3835,1881,626,4770,9060,2400,2571,2221,1350,
    5763,2873,549,5777,8640,3036,7617,4944,6132,7439,5854,5344,8601,1863,9095,4982,1616,998,7824,6638,9395,2475,8058,3421,4970,5182,182,7384,5583,1752,6312,8232,2461,5873,5895,3369,8659,6697,8292,5005,2445,9464,6199,8136,2703,858,7120,963,9585,8721,3669,3856,4533,2295,7728,4349,
    2220,6225,4702,6039,7919,7163,2730,9886,6613,5720,6943,7079,2822,8708,6563,5841,2878,5771,4992,3725,8055,6117,9595,4945,8290,4028,7578,1271,7602,5407,7036,723,9660,9022,3543,8957,9450,3345,5110,7743,7022,9983,1222,1879,3948,786,513,6730,4091,2304,5057,9775,8706,2603,8414,9332,
    5218,1665,7716,4283,204,7391,7610,5957,1597,1211,29,2501,243,569,2274,8307,6469,4910,4654,3958,9966,5979,8758,6259,9055,890,9048,696,1178,8760,604,9074,938,2906,2492,5522,6894,1097,4128,3740,3701,1848,5274,3793,1754,8926,7176,3785,6829,7770,5288,9312,1426,6890,5258,8514,
    4987,8524,9171});
    return id;
}

QVector<qreal> MainWindow::getIDValues2()const {
    QVector<qreal> id;
    id.append({
    5312,3712,5262,7212,1836,5306,232,8951,6922,3886,9931,9549,9921,9752,2098,2855,769,700,8262,4942,72,1640,6389,8007,4730,609,7124,3514,70,1074,1247,7464,6354,4673,1920,7122,6598,763,756,6213,4666,2056,3973,1969,7041,80,3457,4072,1236,3311,3071,
    5209,3720,9411,1046,2409,1515,6364,6290,5673,7530,1800,2353,9120,8002,3072,5131,980,8289,1221,2213,3027,7960,5657,7690,4118,7326,7979,6828,3978,3811,6587,4263,7042,5253,149,69,111,1106,5923,4444,2522,475,6365,4101,7602,6050,5052,2029,3854,8805,1574,
    8821,1383,5035,8327,4710,1829,3276,7279,5802,9804,8246,9157,4191,3634,5980,5497,240,153,6072,557,1082,3658,1996,3846,3530,7453,2223,8524,7995,2450,5664,4971,4197,9002,8511,1466,1216,7341,9954,5379,7424,5954,7711,627,2220,3392,7159,7462,4070,2364,8573,
    239,7801,319,6590,7496,723,4667,8996,5815,1404,5140,2697,5152,3409,2704,7935,5216,2176,7052,7955,2687,2609,1087,8221,9769,5665,3151,4831,860,3725,3876,3874,8064,4480,4067,7941,2212,7861,7210,5747,5176,8337,7096,6370,9169,6683,2576,374,1680,7240,6822,
    9885,3156,6829,6641,6491,407,8595,1901,2944,6406,9699,9499,4812,906,9526,7580,5623,2346,3800,9927,1390,8404,3770,2595,7535,6705,9999,4970,5899,5962,5262,2969,401,3925,291,2533,6437,3472,7560,1709,9427,2380,4863,7616,349,5117,8601,8896,8954,3954,821,
    4362,6622,953,6174,6594,5797,6964,5592,7332,3862,5843,8510,4947,8162,9243,4003,6450,1548,1509,244,1100,5267,4719,1698,7426,5202,4646,3422,2486,2776,5051,9001,5218,8834,4469,6141,7337,9294,8765,1623,5371,5576,8391,7486,9445,5113,3334,1575,1343,1909,704,
    1015,4366,1448,4465,35,7174,415,2884,2549,1923,1239,6815,5009,6136,8436,5719,4659,9747,9758,7629,6220,6350,1799,7844,3330,7155,4740,7002,3874,1106,9818,4245,8704,9282,6373,3239,1100,2706,6038,8651,1083,323,8070,5244,2946,3188,4156,6239,233,2533,5541,
    3678,2096,2160,766,6290,6625,4192,2817,3546,1228,5662,6053,5760,973,4530,7307,2869,6477,7772,6887,2965,5741,4056,5490,4030,1012,8248,3488,4574,601,208,3190,1554,4989,9832,6164,2076,7017,8125,9780,6071,356,560,8591,4291,4957,4077,3429,3571,742,3254,
    2935,599,7794,2372,7765,1526,9543,6588,5090,9404,7826,7201,2683,8971,3819,4369,580,2261,488,5173,1408,1551,9549,8087,9201,3770,2946,886,4314,6401,2280,4062,5214,8817,2120,3641,6057,1751,2698,9584,8530,8667,1876,7615,3604,5879,5134,740,9049,252,6438,
    8815,5689,8562,100,5556,248,4075,9166,7123,9364,3673,2256,4493,8070,2584,6671,8736,5609,9047,889,1738,5700,4848,4740,4697,9471,4071,2808,5811,4023,4542,2057,6632,7023,6856,5923,1467,9959,8939,3202,7809,1111,8474,1893,581,1717,7630,6272,2059,3415,2071,
    9472,9240,5244,8372,1545,4620,8453,2894,1228,198,9587,425,2905,9778,8668,9040,5823,8278,2666,5092,9948,1514,3262,7703,373,996,4224,5155,8454,9932,1842,9955,8996,4581,4236,9032,966,6112,6535,3090,7108,4958,1022,8321,2250,7859,218,8031,9069,3110,2831,
    4293,125,1831,1663,335,5677,1351,308,2329,4742,1083,6794,5008,3534,1942,4548,2389,8466,3934,4705,6020,5808,4759,3534,8578,4732,8003,1904,1123,2939,1599,5389,62,3918,4674,8132,3362,8521,8700,5253,2671,9237,8784,5494,6725,8379,3037,5092,2904,5048,2380,
    2634,5435,5942,9918,7067,8479,8324,5429,172,15,4044,5093,9439,8035,2253,3485,4009,2666,5513,7705,9899,6320,8029,7949,8412,6364,6179,431,3956,7040,8586,8397,6751,2404,7308,3785,9977,8077,7688,1595,8670,9401,3116,9288,6651,8426,5080,69,2981,3476,7162,
    2661,280,3301,9274,5676,5072,4014,6354,7395,2051,5756,719,3860,2155,5191,3378,784,3622,431,7969,5089,9049,3517,9532,8922,9412,4380,3740,5315,5965,6723,7361,6244,7932,1262,7927,9764,1247,6605,377,843,8850,9614,526,9260,3435,6357,6481,589,6901,206,
    6142,6029,278,6802,3215,7631,5425,2292,9974,3236,7688,9428,7642,825,2252,4426,7442,4886,6651,8531,4465,7155,6846,9474,4699,5899,8539,1295,6647,3929,5135,8673,3639,6229,4048,215,5773,3861,1585,5981,6336,725,5391,554,926,5637,1140,6493,1063,8761,2813,
    893,9066,4949,9093,6656,4905,7719,5480,2454,3385,402,5176,6792,3837,5918,1311,116,5115,559,3064,4482,3573,8657,298,350,1509,5978,2135,8276,6397,6193,7952,4414,7949,6247,6118,7037,4415,5126,9679,1615,3978,2634,3573,8573,6485,6968,9536,3407,2520,3641,
    8174,8106,8287,3756,9476,2456,5145,557,3433,1545,9921,3377,8863,7674,3277,9743,236,3745,6299,3958,7040,4489,6458,2382,5153,8316,4738,3853,4797,3539,6834,3854,9795,984,9691,9954,2473,7828,1258,2633,3890,6851,4973,9539,6566,8150,4763,1787,3517,5388,9230,
    8107,8474,1602,9033,6030,5733,7771,3889,6152,4029,4779,214,6255,5214,704,3846,3146,5298,8766,7304,9456,7030,7052,534,6121,7955,4103,2538,9071,5752,9746,6564,2271,4323,4967,174,4451,7530,4802,868,6373,5776,8061,5671,3946,3663,3517,7456,893,9532,3381,
    4514,2348,7679,1955,5186,4696,3810,7938,9837,3127,7784,1308,3900,6608,7412});

    return id;
}

QVector<qreal> MainWindow::getIDValues3()const {
    QVector<qreal> id;
    id.append({
    337,5335,2875,5683,1511,4669,6181,8196,4978,110,5496,6392,8571,1294,6743,9854,1496,4558,2693,2727,6791,2229,6924,1909,1639,3426,4397,6560,5150,3931,2812,1127,3350,6807,3128,549,5612,6251,1566,9374,2900,7233,6235,9925,3146,1275,1627,8251,672,1688,5864,7897,2539,3534,4841,5173,
    6633,9123,2591,2882,3268,5843,7888,8385,7061,2489,5525,8006,4815,4794,1865,4328,9137,9918,6837,6670,9843,261,2670,9228,5783,3197,7589,2678,8565,9456,8110,4299,846,9689,5373,8947,5922,9875,462,2385,4837,4796,5977,6279,3466,3747,9251,6901,6501,3297,9935,9445,1350,2190,4990,3979,
    8189,2824,5025,422,9116,4212,7423,1194,5365,8112,676,9883,7321,4971,9631,6151,5224,6075,5637,5697,7505,9905,9980,5516,6081,9572,3008,9385,905,9968,9789,5121,6897,5552,8098,6759,390,3140,4495,1519,4012,5454,227,7580,8500,2228,1873,3513,4174,422,4606,5874,7534,4554,3351,4804,
    151,5541,412,8339,228,3711,5053,2372,7335,3022,205,1966,8776,3004,5503,7013,3831,1363,8003,9587,2104,6814,3783,4720,7771,94,6880,1217,7592,421,7490,9445,8658,3835,812,4793,7564,3014,5404,7289,4297,418,4078,2338,6599,7411,4341,9172,3542,6315,1981,6567,7159,953,9246,8382,
    920,5323,2924,6920,4043,7774,6767,9219,7312,8979,1075,3206,4136,3692,4549,4891,9490,1823,2385,8793,5286,7100,8874,1553,8735,8412,4024,8008,1363,34,5456,2393,2548,7109,4168,673,907,5065,9261,7000,6955,3558,494,735,1709,8958,175,6707,23,8259,2356,458,7854,1820,4711,5005,
    9466,3705,1136,5208,6170,9499,7714,6928,5450,2905,7152,8855,3255,9935,8676,5169,5859,8854,270,5906,8024,4779,9802,1065,5550,4364,9717,7060,244,1563,3800,9745,5310,2108,2784,6798,3615,4072,7317,1596,6593,9346,3019,9527,7192,4676,9175,8300,5944,1463,7622,542,6227,7862,7320,5891,
    3154,1594,3076,9051,9707,2613,8549,9634,3168,5455,779,974,3946,6126,494,1504,4447,6745,2757,5614,5187,8430,3188,9215,9320,3678,2121,8092,5587,9701,645,2438,3,830,7259,66,2505,6735,5267,7172,7862,3757,2437,7045,3442,7143,4648,3804,3939,1888,6990,965,5841,6191,7891,3310,
    2653,5410,7382,7262,514,9934,5854,3648,9081,5430,6054,4715,2789,8762,4742,6033,2990,3390,9625,5187,5657,1048,8245,4754,1558,8184,4655,1703,9068,5780,5318,851,2758,2361,707,1704,7809,6964,2668,7946,9789,4002,4765,7677,691,2290,2826,4541,9743,2142,9481,185,8183,7979,5118,2564,
    6325,3663,1871,9452,9810,9092,5913,8065,962,1900,7432,2530,8714,4556,8276,8795,8349,3594,7098,3221,3254,6374,7570,4502,860,2062,8676,6896,9465,5671,2381,4027,9813,2763,4720,7517,3119,6715,2446,8323,5988,7485,3195,2523,8913,4784,9984,295,6205,514,3585,2676,1128,9101,9228,2384,
    2714,6296,499,2544,7720,7702,100,1667,2020,4858,5984,4107,2652,8485,1725,9814,2723,7189,8889,7677,1493,5594,9582,6661,6371,670,6742,5951,9923,3007,506,5775,8234,4960,533,5654,7174,3568,4570,2172,7254,4971,2013,5574,3918,60,7830,670,1033,3210,8888,8420,4134,353,8758,236,
    4163,2152,4228,8947,1715,4476,6055,4762,3820,2702,6733,7899,3694,1462,795,3338,3905,9581,8753,2486,5615,9602,2627,540,7594,6830,4841,810,9220,5248,2239,3015,9079,5053,5020,6515,6104,4206,8465,6800,7312,3989,6020,4747,9809,396,3104,7426,8515,424,1631,2727,4558,2072,6422,2506,
    648,1706,6756,6120,9294,8438,9190,8821,5528,6193,7670,1486,9815,7479,6832,8926,5821,4555,1061,5201,2797,6997,1473,8254,2860,3697,9085,6080,2866,6130,5447,3080,4788,9785,3697,8901,9767,5088,6794,1903,2278,1427,9585,6279,5592,1661,7067,2157,8479,8384,9109,2232,7040,8494,4353,3603,
    298,9412,9440,1163,4353,6776,8418,2844,8259,497,898,1858,2279,5552,9255,668,350,8690,6497,8577,323,5792,955,7690,5340,4561,3641,9233,4133,8087,2698,1721,2991,9056,3232,9040,9430,5124,552,5904,1603,1277,1408,719,1538,1797,7983,8216,9076,7830,6190,327,2897,8183,5726,8919,
    282,8641,579,8329,2994,6465,2587,3106,2742,9763,3613,5970,8737,8709,2743,1567,6716,3898,6539,3223,8322,9409,3127,418,8459,6193,1900,3272,6802,8753,4959,8428,4289,9732,5024,3937,2932,2380,6273,3275,4733,99,8636,242,3387,219,5289,6464,8107,3722,1330,8075,78,1196,7935,2127,
    1527,3663,6540,6327,6411,3142,2560,7084,4731,242,4363,8938,7395,7122,9909,8823,5150,1970,7083,7003,9375,1153,1336,4467,7626,467,1671,4512,879,7196,4844,2641,4966,1056,7871,5526,1503,7750,576,5093,874,967,7789,9225,4665,7448,9245,1730,9299,6944,1448,945,1126,9469,9677,7687,
    548,4704,7521,2288,2044,6670,7646,1794,5069,8281,4572,7122,2574,8749,7502,8650,7783,680,2787,3223,188,7331,5240,5492,8653,3008,910,2627,9568,3460,7865,481,2394,385,539,9929,2666,7241,6944,9599,2614,8069,271,4806,8585,9983,2571,558,7473,5269,1067,2085,250,2472,6358,8564,
    752,3960,1146,4128,7795,6768,9462,6322,1536,6862,5618,5819,3446,229,6388,9808,3603,5682,5536,7672,7568,499,8653,237,6637,271,7500,7784,6097,6566,5562,9861,2079,7724,35,926,8019,4316,5553,931,7347,5167,9586,3003,442,5426,2228,1598,5589,332,8766,1639,699,2932,2546,7350,
    7908,8381,135,8834,5124,4926,8605,5948,805,5852,7884,3974,1556,1817,4561,5571,6015,4969,2041,527,1658,3836,2760,6836,6735,8634,9428,2026,4534,4040,1946,8339,8224,5803,5645,4603,5496,5632,5228,251,7100,3137,5718,6731,4900,5549,8271,4020,404,2390,2680,2653,3349,7623,7437,2648,
    2712,1564,8736,2380});
    return id;
}

QVector<qreal> MainWindow::getIDValues4()const {
    QVector<qreal> id;
    id.append({
    2351,7346,2711,3241,919,1480,1687,2235,1309,9038,4819,111,2948,577,1024,9011,1337,6867,6375,6969,2988,7792,9359,4065,7648,333,7903,727,1825,5437,5683,8829,4065,6702,8487,5814,5856,6287,5762,6230,1785,3546,3895,7533,6249,6753,3670,9162,6368,7949,3355,4542,5764,1831,9581,8994,3113,9522,
    6112,4441,2584,5368,6026,5151,7787,6480,7512,3731,2869,3767,5680,2955,2850,2897,8354,1789,41,1947,4268,890,8358,415,2817,3819,9694,8545,7431,5741,2862,7827,6632,2831,688,8092,7038,2905,1124,2345,54,5210,3959,9021,9286,4506,8800,2221,662,5183,645,9124,7145,9237,8637,6657,9203,773,
    8769,7200,5327,2492,8318,8155,5102,6371,7822,2912,9987,8938,2349,2739,9684,6940,5485,5108,2313,6928,898,1068,8266,9168,1251,1446,4758,6940,8751,8280,2570,9200,6581,5793,9147,5830,7919,2254,6815,2132,718,7511,4224,8348,2267,9362,6907,8618,50,737,8520,1842,3099,2885,5532,6524,6742,2068,
    5558,9317,8348,3911,5611,146,3810,8505,4926,2808,8046,7848,7847,822,3101,5733,7597,4706,3789,1908,7095,9970,6496,2283,8547,4815,4269,565,5593,4028,5961,9330,5196,9727,7029,6609,6787,9133,6951,2650,9653,6645,7847,4149,1170,3159,245,9394,8402,6390,6358,8305,5350,7453,1893,7612,7865,1585,
    6416,3859,2699,2598,4713,173,7762,2333,7818,7961,5822,2681,4932,4899,1703,1701,3951,2148,9200,1942,9081,3261,8822,7625,3728,787,762,7724,6380,682,563,8041,9563,5835,2483,9787,2963,3175,2039,4454,2042,5069,2486,7236,2877,5047,9795,1921,7500,7495,7399,8994,4547,414,9327,7744,2279,7050,
    3496,4349,4967,6655,1771,2041,8081,3972,8091,3105,4392,6917,7739,649,829,6531,5977,9104,9849,5292,3354,6913,808,6985,6986,9179,6003,6205,6745,6913,4581,6188,8604,8577,1707,7172,1188,6311,1619,9843,6991,1995,5030,7397,3006,955,2417,4622,4377,248,1129,3861,8060,73,5013,9422,2664,8346,
    6192,2741,809,5420,6108,6556,4566,3875,2282,3856,6961,7502,1550,2094,2060,8725,4174,7688,6366,3849,6504,1700,1520,9878,9802,4668,4731,9472,5858,8574,7726,6411,5160,6136,9358,1980,9226,1165,9627,7747,6391,7371,5846,8477,4254,6956,1155,9419,4830,9722,7354,2396,2671,7614,9410,9292,3578,3438,
    3975,4053,756,805,1140,9328,4561,7802,6882,3434,8691,7233,1820,8230,1852,27,444,7298,7353,414,5121,8145,7830,5038,2470,4819,6043,7816,3322,7046,9013,4079,4140,7536,6557,7776,9367,6276,9749,2355,7799,8021,2773,6216,672,6740,5504,2141,7736,2071,8392,5735,3760,2786,4882,2944,7,5994,
    6745,2304,5560,1470,4057,8684,6138,8935,2425,4879,6539,8029,3394,2363,2330,4525,3001,9064,8462,1824,7596,2271,700,5060,2062,9617,6740,388,6925,7748,8683,5259,6068,4294,9877,7532,7294,8471,8126,2146,7150,7583,4079,6982,4463,4396,3182,4737,495,4354,5066,3489,1460,3532,5387,4066,8475,1298,
    9711,4470,2985,5163,6445,5874,9103,5515,6794,6468,6557,7292,6307,5305,5601,205,7313,9716,8942,6826,2451,8183,6501,7744,1943,4844,3125,6858,8673,8683,7151,680,564,5528,5478,8559,2329,1561,5993,8585,5202,642,4956,3676,8628,6086,5729,7315,2198,8210,9539,123,6681,4186,2927,138,3103,2045,
    4228,3943,8195,418,4177,4350,9195,7299,2669,7869,9628,8426,3576,5364,6339,8768,9930,2320,9658,7561,5878,2121,2698,6053,209,2183,3559,1791,1371,2944,6483,1188,9979,9791,3307,7524,8060,5079,2672,5968,9342,191,6737,3732,5901,7770,2591,82,1954,3409,397,3284,2186,9184,8154,9413,8201,4032,
    4635,796,784,6958,7842,7001,2502,6908,8314,6881,1443,586,2797,7267,6670,7119,4204,6589,2929,9646,6756,9065,9885,774,9384,7996,3976,8400,4955,1601,3776,8482,1941,9063,7583,3630,8463,9169,5579,7000,480,1576,1761,7224,446,7648,3451,1683,2212,2845,7430,1406,6649,2970,7492,2056,4050,9158,
    9304,2011,9273,101,16,932,8867,6465,40,3922,9405,6741,4152,5435,2585,1540,8101,9889,8004,2139,7432,5760,163,7600,6849,7747,5696,4451,8462,7170,699,7278,7047,1401,5929,2637,7374,32,6473,9714,7795,3270,2872,2877,5688,2530,1839,508,5468,1167,5436,5817,3147,6717,8368,7709,4810,2221,
    1141,4159,8296,9870,5285,9283,2098,3326,2110,8189,7231,4081,5871,8830,662,7085,2680,7585,2452,5972,2166,1202,7083,1494,3955,7615,6114,8828,5906,9776,9547,5980,7202,2507,7596,8183,6584,194,2921,3525,6703,5879,1391,8884,5805,8014,7252,8112,3925,5132,5635,3771,2311,4447,9335,1171,1648,7360,
    7170,2289,7541,4877,1538,3264,6613,3781,7864,2058,2153,2995,4842,3762,67,4854,6152,4370,9501,1784,4310,8114,1690,8218,6823,8158,5927,1929,1875,7862,7960,6685,6684,4012,9466,8783,75,7019,3728,7373,9606,8744,6548,4212,4914,2520,4062,6591,3110,8709,3357,2512,3233,9405,6255,2061,5364,5715,
    918,7233,5110,8905,4118,1463,6089,3033,3549,3991,6061,6081,3489,5910,1355,6246,6031,8764,3286,7456,5142,2382,9881,7940,9991,6894,4807,3649,6258,9077,3987,3459,2918,10,4158,2012,4435,6624,693,1410,4508,5599,8694,205,4378,6562,8878,773,5252,9677,9269,6815,4129,8069,7501,2031,7859,9183,
    170,959,3969,8486,9812,8775,4322,4258,3973,4806,1290,1662,7909,275,6754,6301,1605,8656,5715,4889,6470,794,3200,2940,3704,3455,7633,4802,5687,7909,1550,7873,5170,6840,9627,144,7328,5384,969,6611,1228,9009,2194,7668,8478,8978,6347,9246,7925,2615,7190,9279,1059,1931,469,6594,9671,6930,
    7257,4966,1822,7481,6150,4375,2373,378,3342,8973,6100,5082,2999,4248,8952,5310,1356,6503,1716,9226,1613,7558,390,6509,6759,7023,6691,8011,8678,5276,221,4975,1674,7441,7153,5525,6001,2339,4886,4624,2135,160,5827,2576,586,6483,1387,5728,9782,5474,8787,6745,5777,2067,3315,7021,6899,8557,
    5576,3216,5805,4053,7494,713,2969,6746,7089,5654,5208});
    return id;
}

QVector<qreal> MainWindow::getIDValues5()const {
    QVector<qreal> id;
    id.append({
    8278,3495,4314,798,9984,5437,9077,3640,7309,1572,7181,8980,5400,6068,2320,9483,4272,1609,2481,3774,2158,8761,8706,3558,7830,4546,4169,5525,1160,5604,4010,8528,1207,7611,4781,3972,6962,8817,4794,3682,8196,9386,4315,2018,3316,4718,5762,9845,3893,8419,4636,2691,
    6181,1024,5188,8352,9801,7761,300,4928,8920,8293,4640,8071,1178,1914,4959,5916,4300,6892,9862,4442,7611,8524,5425,3342,3507,4293,4847,4083,3976,9716,5142,5334,9064,5151,5004,4695,6121,6097,3655,5356,2907,1246,393,7467,4663,8744,9681,9098,3271,5886,4335,3145,
    8726,2364,1431,1457,882,7882,7890,8555,5227,8395,2994,7594,5713,369,543,1444,7338,7980,6507,1966,60,5802,344,7911,9342,6284,7283,6323,8447,4589,526,6560,5625,5694,2848,9951,7991,4677,9317,6072,213,8375,1267,6290,8077,6903,9817,358,635,4777,6684,9209,
    6156,220,4412,2872,4062,6685,5477,656,5068,5563,696,9238,6649,9951,3120,9541,367,9399,7978,9019,1677,4261,5093,9108,7115,2457,743,6696,6290,106,2636,6274,8967,1911,4805,2809,3344,7699,3018,6118,3613,5310,9506,8112,8432,2508,1933,9162,7037,7837,4896,4808,
    240,5378,9447,2633,8376,6339,5445,6789,1844,8181,4051,2431,7765,3000,2216,3507,5396,3524,6586,1517,9188,5717,2480,8350,4529,1027,6956,4628,2665,9570,7319,2737,3287,5089,8661,6502,923,4965,5960,6820,8165,1091,413,2417,8823,5273,3303,2086,9686,4983,1247,9372,
    959,7157,1117,290,1206,7353,5778,285,2647,1835,9599,3444,9760,5439,2815,8315,7790,7993,7051,3554,9279,2776,1614,4894,9431,9007,2256,2456,500,6231,8712,5578,7067,1818,2990,209,1197,130,4960,2054,8409,7429,2254,6032,741,3419,3844,4236,3528,226,3532,3281,
    9394,8520,8261,5478,3021,2717,2080,174,4162,768,7041,9333,5242,8448,2900,7716,9803,9420,2743,9937,4702,4449,749,1291,8997,7717,7831,7375,2507,5004,863,1782,9049,8329,9297,1163,7548,2562,8006,4042,87,7137,5435,1536,401,2709,1038,1807,6189,546,431,6902,
    999,1955,2705,1149,2326,3071,2914,6761,6684,7143,9021,887,9989,5556,253,4262,4186,793,6140,7048,2702,6807,4979,8671,2131,2821,8027,8754,7087,5792,3002,5814,3605,5357,9855,7670,3742,3497,8666,4889,8081,3410,4210,1282,5307,9373,4979,9074,3526,3014,2021,4198,
    6901,715,8844,9826,2533,2407,9296,2012,9313,8620,4118,8784,4560,24,3223,6808,1731,936,7834,7209,3244,9139,7691,4958,3495,1902,835,1622,823,7925,7921,1388,1453,7008,1588,4367,8489,1296,1341,3926,8516,9070,872,3758,4566,1676,7765,1955,8589,3416,7485,9541,
    5939,803,3502,8728,5272,5704,3045,3096,3298,4581,9951,3851,5887,699,8060,9400,3713,7458,3479,2790,9804,4935,7851,9565,1581,7199,4425,8083,5651,4514,6875,6998,5169,6600,3914,4779,5715,4910,3853,8922,9799,4598,358,5230,5225,8830,9194,9163,1870,1276,5305,8128,
    4677,7364,9728,5636,6284,4750,3803,7851,6306,88,7824,2503,7454,6641,3314,8309,3052,6203,3906,6401,1418,3894,3086,5647,7255,6333,9285,7646,2572,5268,3965,4327,1178,1704,5552,1193,6191,3660,6057,1242,5656,4426,2737,2625,9136,9461,9731,9292,7904,1669,1967,6569,
    1846,9669,1590,4859,378,3182,3819,835,5296,9646,655,8250,6426,2584,7391,2088,2175,9767,8422,9094,506,2382,1658,2354,4706,4749,7470,4344,1291,7033,4771,821,604,4243,9430,5461,3538,2629,2276,8377,4213,1441,7092,547,8270,9825,8342,1150,850,708,2475,8466,
    5025,4552,9278,7717,3493,1177,8063,2611,4920,4673,8423,1112,9674,1932,1604,7563,4848,5296,928,3055,4309,5277,6710,5439,1377,9699,89,9559,7728,6864,8731,8335,2401,3666,5015,678,2199,4213,6792,2629,7015,4658,7927,4568,815,3984,24,6646,5894,35,337,9651,
    5135,8244,4281,8235,6751,1619,2780,3180,4845,6754,390,8949,425,1269,3155,2903,1130,2292,2366,272,2556,260,7599,7041,2473,6339,576,105,845,8698,9721,5875,7596,551,233,9831,5033,3724,3024,3992,4673,7351,6416,4257,6890,3613,6967,367,7769,9131,5685,4371,
    7002,4605,2708,2099,3102,3920,9035,8418,6306,6939,3409,509,1787,7044,9626,9225,8540,2706,2197,6583,2578,8338,2900,2847,1356,5500,5320,4041,3515,5818,3039,1389,2247,6570,5563,593,751,6273,2815,2824,704,9557,5941,5176,6294,1931,2556,5518,2625,9749,411,2536,
    7299,5794,5017,2405,392,2645,5753,3610,7885,7035,4377,7093,5901,5424,8547,4829,4069,3950,7098,9149,6429,3226,3454,9977,9151,9820,3663,7313,8806,6635,4267,6249,5521,9716,3361,3179,7895,1764,2576,3978,1452,1265,5541,5252,2304,5856,5723,9799,2448,8314,4655,5963,
    4804,3081,93,6454,9251,7947,4222,4204,8599,3391,6455,1177,6204,2571,8289,5132,80,3474,3175,7851,9447,6312,6490,2943,2038,3689,1493,9521,2711,5843,9667,3450,9887,7987,5718,5256,5376,7595,7878,2855,7792,6485,5597,2102,280,9250,8117,351,8863,8532,9242,7450,
    116,2093,650,1072,8256,4478,9359,7712,8286,8275,1322,8247,657,5970,2925,7027,720,676,2713,6655,4028,5325,8760,235,7203,8115,348,9137,1296,3052,5706,6047,9847,7837,9218,4365,3680,6416,4126,6509,6689,1759,4896,6490,9816,2000,5194,5741,9042,6345,964,3018,
    8980,6372,1683,1382,5006,5360,2938});

    return id;
}

QVector<qreal> MainWindow::getIDValues6()const {
    QVector<qreal> id;
    id.append({
    7599,7767,7017,6138,7645,2253,4326,1128,2844,9560,7943,8692,9082,4320,1824,8460,6361,1727,1681,6487,1378,9794,3281,6146,1491,8156,7093,3501,6002,2556,4177,2038,8971,1177,6681,6670,6741,2883,9013,826,7519,5095,3385,2629,4587,2441,2167,4855,9738,9553,2012,3467,8575,3487,3519,7358,
    3490,1073,5938,5381,5928,5719,3103,3924,4881,1969,7402,1590,7195,7347,6143,8967,4547,9873,3200,5343,2451,7618,4030,9316,3655,430,6286,2021,464,4045,8767,1511,4816,1051,2907,5725,7819,8891,3290,1242,100,6720,5618,504,7351,3591,6953,1325,1395,6162,8101,3027,9863,4497,9901,1578,
    4605,7662,8797,405,8094,3221,5178,8274,7342,4508,6881,3652,5690,7609,4318,7374,9069,1553,8325,829,8041,9330,8963,1230,1104,477,7568,3896,5520,6724,8368,4249,5209,8255,7755,2984,1447,9454,3156,3010,1839,3238,5265,5823,7690,626,6965,9329,6341,420,9065,5159,4038,4417,3474,368,
    5904,9120,744,3398,4097,2011,7760,3543,9221,4500,5415,7608,8484,7331,4632,6573,2955,1191,6292,4100,2405,6996,782,5137,3327,133,8447,9024,4675,956,9396,6897,5373,3887,4687,9686,7550,7059,8572,3821,5667,7144,6842,9744,3886,2126,4181,9402,8944,9768,4877,4645,9894,1305,3969,7094,
    7036,7240,9655,2155,2427,7557,4047,8123,2781,6467,162,5160,9059,4872,5177,2634,4694,9986,2844,3420,8815,385,3145,3026,1507,9854,367,9745,5875,4038,5179,9275,8271,6883,3644,4830,3087,4131,3357,7197,8341,2147,41,5041,2678,5535,4032,2983,5964,1849,4564,4103,6509,6563,3954,5282,
    8765,4286,668,7582,6834,4465,2744,34,3647,1468,4315,3180,5212,392,4759,1954,6066,7862,2091,689,8055,1766,8186,5654,8204,6624,8042,2553,273,4230,5902,5175,521,1979,5159,978,7631,2433,9586,4631,4114,8399,1378,1392,5807,9818,5598,346,7203,1845,4184,5000,4926,9531,9985,5090,
    6183,2169,961,562,5593,5546,7139,5081,3802,3079,4325,5914,6336,8357,7933,7560,5995,8822,8437,1459,8242,6265,1351,9093,8286,5707,2250,4467,2886,9848,9937,152,381,368,74,5702,8413,5769,7413,3034,2651,157,8108,5690,8181,6110,8161,3745,1519,8569,2241,6291,7516,7254,2825,4552,
    5337,8069,6353,8716,2532,3457,2883,3698,9103,9996,5611,5929,1958,5811,6406,3195,8097,1865,4198,2669,3294,3628,3963,2945,3512,6632,1956,3270,9176,7242,1613,3003,4127,7134,9893,3878,4587,3282,5964,5177,7795,2778,1195,9192,7311,2091,5413,5484,1546,366,2696,5944,8476,4913,4153,3860,
    4322,8270,9594,3612,7569,9259,6727,5019,9496,7975,6221,9317,5253,8094,2120,5765,6850,3748,5674,4609,9442,3858,3622,4371,8269,3260,4993,1050,9559,7125,4430,3825,9509,9465,2043,885,8103,3414,9794,1956,3700,9761,1812,5861,7195,303,544,5738,4517,6780,5210,3670,5651,5436,8474,284,
    6044,3925,1078,366,9385,7813,1429,935,7018,69,3550,4415,9433,7091,9564,2944,6261,204,7624,4740,763,7103,3579,5688,7952,2220,4707,8453,6961,8232,6903,5890,2258,7251,2802,7063,142,759,7781,8018,5583,5157,6339,1747,6445,5087,1062,8261,3123,7931,4963,9833,5564,3787,6040,5995,
    7145,357,2688,9235,1732,1560,4289,1234,6507,5791,7371,1810,4742,6650,8571,1084,3406,32,8999,2209,1376,2244,9074,7918,3651,3453,2666,9020,8677,3776,6707,2509,7895,2934,6539,3779,8621,9455,9567,7818,1412,4297,7587,4335,3668,8486,5589,8464,303,8901,8966,9238,4614,8816,9996,5101,
    9983,3495,4209,4067,3681,3475,9695,2857,3423,2900,4940,9901,626,4707,9129,6775,8491,30,8035,4479,3250,5547,7747,1586,7926,5954,2415,2686,7709,4991,8188,2643,3355,2608,9255,430,3926,8053,9225,3082,6596,6060,8326,4970,5053,7828,1102,4274,9154,2515,4129,95,8023,7173,7020,7535,
    5046,4414,2274,9405,3946,694,3679,4160,6720,714,5238,560,8474,2196,2384,5504,7406,4322,8190,9880,3042,4623,4745,7764,3891,2780,3199,5518,2201,590,2776,3429,9134,7560,1252,8904,8066,8619,8837,9106,1444,8608,1068,5060,4220,9372,8322,3443,1529,5957,3604,6336,9863,8574,5191,6256,
    7852,2752,9440,9140,9028,116,909,6803,379,6747,7359,9103,7150,5200,9604,13,9641,5243,6965,7245,2170,2203,8783,4580,9777,2097,3681,1474,2509,3128,4505,9983,8495,6229,7862,4178,6548,451,9049,144,6793,9075,8463,7932,7949,9615,3655,4133,7581,4088,5613,8966,5190,7536,2445,3502,
    164,6886,7166,3419,4038,6506,129,2835,9930,5952,819,6937,4589,6680,6542,7376,739,3651,2676,6880,2647,694,953,6995,435,5205,2916,1432,112,6162,4360,7720,6934,4376,5915,334,9055,7617,224,1711,949,7122,3004,7936,6481,1604,4102,2194,3605,1427,1362,5247,2212,5177,4700,4193,
    5950,1795,3651,580,8331,1950,1278,6370,1983,1817,5183,2785,3248,584,2919,5397,5862,3159,3702,5378,6902,9911,7988,8846,6337,2141,6843,3241,7993,592,7395,4988,976,206,3918,515,2977,3700,2016,8716,1092,162,4447,7191,7975,9629,7812,9720,6737,9559,1916,5076,6787,2185,9174,3133,
    7760,472,6394,4488,2548,3498,1841,8459,5227,4370,7008,4799,5077,3515,8314,4598,8199,5675,7949,125,812,9601,1329,1532,13,4492,6082,5228,3803,6372,8227,5079,7018,7806,1217,5728,1459,8232,9087,7228,8236,4465,4397,8897,3861,1809,985,6850,3806,6429,1539,9609,2940,7468,9763,8183,
    1771,1344,2909,9814,6208,945,6499,4660,3276,4034,3588,3022,6555,7711,6937,6758,2593,6400,2453,6230,3510,6997,7503,5377,4384,52,8736,4145,5197,4051,3516,3997,1918,7233,6803,1497,4042,1078,4717,1091,8757,4989,7911,4808,1034,4324,3525,4229,2119,2335,7169,1743,6467,469,9292,2080,
    1992,4050,8032,152,7824,7771,5150,2984,1416,7124,9414,2579,2493,4350,1009,1896});
    return id;
}

QVector<qreal> MainWindow::getIDValues7()const {
    QVector<qreal> id;
    id.append({
    9140,3254,4368,7028,6035,8159,7280,3319,2560,8739,3666,5427,3169,1022,1970,2988,9573,5082,519,7422,8692,3551,9289,2740,5281,7317,1314,6625,818,4033,2874,2398,2776,2206,8591,5023,618,8265,578,5159,9038,1385,3752,6754,7240,1550,2751,5057,2379,713,5726,5172,9855,
    1426,4964,333,1882,7648,8864,1576,7081,7992,1708,4127,8981,7930,2117,8732,8279,223,9605,8756,6519,6483,6140,5934,3337,7394,8338,5380,3720,6902,733,2309,8173,7130,8467,8521,1524,4089,5951,8961,6453,7292,6501,755,1950,3313,5725,9560,9418,5071,1422,6718,7387,488,
    1384,2477,6236,6370,6351,5613,2026,5681,3270,1394,5873,1666,9770,9442,421,186,1778,8075,4411,5338,9185,3833,3290,9685,3232,5254,9569,7086,2353,711,4473,882,7326,9,8660,1002,7767,1657,9646,2535,5772,9655,6658,9222,7100,175,5188,7848,8285,5786,7290,877,9990,
    5200,1254,1495,8829,1446,9546,4415,4798,3265,4463,5719,8044,2488,6925,1608,803,2381,2182,7113,1174,3241,2210,5919,1391,5234,5623,2962,8845,8409,6764,1687,7030,4592,6014,4941,3903,8202,2173,6418,1844,290,6019,6624,429,8308,9400,7034,6389,9367,3244,843,704,4991,
    1996,9972,1724,9213,8881,1017,3775,285,1007,680,194,133,4745,4117,48,3077,9914,9067,7154,6985,1227,4212,9090,30,4756,7041,8391,6118,5952,513,4271,9446,2238,5616,2310,7132,7759,3817,5027,4682,9589,8333,1655,5044,9530,2673,4026,5931,4839,4221,6952,1901,8308,
    3449,7209,5397,7793,7687,8294,7291,5948,5606,4041,7565,528,4522,5816,9617,3346,5207,4120,1682,3114,6021,8954,2751,1013,2681,4949,2970,1913,4319,9858,2326,2495,6435,1499,1861,3907,3479,3917,4673,9865,9888,191,9573,9246,2173,8853,8750,2059,9144,9216,6239,5889,6135,
    2841,4636,9288,8320,6449,9330,83,3855,2667,6198,6717,7388,8153,4021,5482,3358,1031,8712,3228,4915,6625,5104,7491,3697,53,2795,6750,1106,8573,1700,5611,4489,1542,3304,3732,5959,7296,887,4517,5706,4939,3706,6180,8021,1543,4392,6630,6340,126,9551,8922,6555,2546,
    8948,434,4240,2880,1102,3649,2744,1258,6658,2239,1138,3242,1248,4320,3324,6415,2364,7423,4067,5866,8201,7484,2541,2011,5410,6257,7884,1734,4253,2936,4682,3905,9034,6977,2575,8562,1875,9456,8360,9786,7912,867,6507,1055,256,8126,5318,2931,9389,14,3663,1869,3370,
    9027,7040,9504,3084,2822,2217,7515,8797,9082,1787,8214,5089,7538,8181,6660,9343,924,2742,2311,5675,5302,8876,3277,9361,678,1279,549,7118,7102,7220,505,2996,16,4440,1672,3956,7303,6705,7111,5645,9652,4230,6927,8170,6036,133,1182,9854,1275,1142,2425,2354,4868,
    5575,4098,9339,8854,3673,6667,4623,1384,6336,9530,2745,4561,2341,4944,4305,2662,7418,7087,6989,4158,5102,1904,5300,9159,3019,2392,2766,2438,6384,9253,7270,3022,198,8701,9879,4360,106,1483,5321,7360,4182,5730,2385,6166,9987,6607,6802,4741,5454,7469,1296,3720,1564,
    398,1428,6876,3887,7925,5726,9834,4681,7763,7870,1863,9925,3671,8299,4498,8376,8182,4630,5724,1124,8609,6254,2990,9487,5037,4954,9081,1790,4673,5447,7096,2114,9313,4614,2862,7648,5869,1080,1245,252,4207,1164,9470,1714,499,2404,4455,9399,8040,1753,3505,2233,294,
    3921,7768,1428,5119,9060,6749,2430,4097,3324,3877,7718,1021,3840,1384,4924,1526,7710,8908,5633,370,6999,341,6552,221,2236,7227,8169,3679,4713,4400,9154,7098,3145,7632,4260,7386,5966,5669,7351,3361,1663,6514,492,5772,4260,6009,4131,7793,8174,3702,9202,9943,2511,
    3953,7470,9031,880,366,3757,5750,1677,7502,5073,7923,5197,5909,1985,740,4425,5406,1957,1686,5429,1318,8934,5662,9218,7852,9402,669,4654,1378,7947,1715,4539,4442,617,5792,535,5179,7828,2274,5450,4148,3469,4910,7010,2579,607,9864,8058,7546,9750,3782,5566,3203,
    3263,710,1363,8168,8317,9970,9383,7832,8179,2307,7808,9530,6924,6098,9275,3611,5615,9091,8963,9943,4256,2039,2936,7757,2805,7865,8891,4832,95,5467,4638,5537,2841,5831,7653,3069,682,7983,6602,1258,1056,9543,2238,2876,3421,2072,680,534,212,6742,1541,7719,9039,
    8541,1753,5530,6706,7252,582,3376,5455,1429,439,604,7625,8457,3696,7775,8341,8874,895,4088,5841,2886,663,4587,3563,8541,2642,756,4277,944,4968,6769,386,1719,8873,2167,6465,1143,5502,5987,4703,9881,9048,8198,4041,3705,8387,8595,8186,3324,346,2581,3353,8584,
    5485,2049,7104,7182,9240,5830,3833,2695,7443,4123,6443,9565,8852,3651,1263,2915,8527,954,2008,1873,4099,727,3374,2704,9692,8629,5075,9998,4710,7196,1466,7516,8073,6036,8441,7152,4257,8588,2696,4908,7,8108,7549,6074,5979,5076,9566,4806,3931,2054,8527,1515,4952,
    576,5125,7462,8298,1832,3187,3116,383,5963,444,5255,989,8647,5098,6174,7050,7116,7173,5858,298,2373,4791,6437,5278,7945,8866,4850,8528,2458,9621,8348,2310,6948,8272,1776,4050,1779,2509,6227,4943,2936,3259,8435,1124,7024,7752,2748,1383,2740,2005,8360,8649,9921,
    1377,7782,397,8640,3679,6874,1025,9015,9534,4169,139,5966,6495,3919,5885,3537,2050,9756,9472,2528,5645,7528,2159,1847,3870,1261,5008,5508,476,9496,7728,2768,4559,9601,1179,9470,4440,5798,5269,1435,5586,8536,4075,4484,6629,5257,220,7325,4188,2216,8513,3909,8493,
    8118,4293});
    return id;
}

QVector<qreal> MainWindow::getIDValues8()const {
    QVector<qreal> id;
    id.append({
    3719,9590,468,928,4013,9692,4646,9609,2736,2813,1115,685,3198,6804,2551,85,9533,8990,6786,1380,9761,2963,7350,8107,5381,2826,2077,2350,3028,6000,5187,7717,2174,5407,7774,3000,6397,7068,8487,6306,3300,8858,1529,9213,7692,2494,8694,7749,1728,2313,9297,3744,
    5438,5379,8894,2363,6568,8672,4625,9037,6255,821,3423,3847,7130,6304,5871,2746,8654,6117,6892,7582,3524,1251,2125,2008,6830,6865,7169,9141,4911,7595,4441,6518,5543,768,9505,2342,7982,7834,9600,1477,3821,7592,1800,8993,1918,1205,2902,3743,7520,9498,7376,1680,
    2566,9214,4610,5167,6578,741,4394,7426,8088,2215,5457,9123,7709,2064,5272,5189,1297,1488,2639,2890,5271,7785,6850,596,843,1071,1809,7710,4176,8632,1848,1134,2161,8738,5346,2133,3633,1906,543,7311,2565,349,7773,9771,2212,9033,872,8755,4049,6820,3122,3082,
    4271,4039,20,6166,790,99,8866,3905,7276,1017,9356,671,9736,9776,7629,5606,5736,992,5866,8953,2447,7926,2569,2021,4659,1897,5506,9519,5131,1923,9629,7975,8369,4778,4365,5168,542,6686,990,2133,9885,3954,8775,3410,3692,4330,9570,2492,73,3015,7388,4900,
    2811,1456,3311,3398,7356,2973,6819,3213,4122,7891,5035,6139,4456,8380,8503,3371,2145,7126,919,4860,2485,4744,7883,4501,4468,3239,2164,2905,4673,4033,9702,5654,8514,3872,9072,3006,2950,7908,652,3022,5429,1168,538,2827,6532,7237,561,6646,642,9028,8839,2712,
    7582,1220,7574,4456,7498,376,807,4679,6846,4283,180,5881,3807,3921,7361,6603,3355,6404,3974,2689,3851,9062,4410,5637,836,9004,414,784,5268,1751,3016,9277,823,5523,9005,6571,7348,7246,9259,8284,9221,5294,4273,6586,3196,3322,1368,2984,4954,4972,2553,3,
    5386,636,9310,5523,3102,9555,5086,4595,7652,5410,6658,5827,8719,3182,7987,3959,879,3563,9380,8199,1397,7960,4894,9039,1197,9897,4462,1291,7635,3776,6242,4557,8420,2001,4807,6998,7459,8565,6311,5821,8904,1886,8102,9792,7639,4263,1266,4448,4075,1569,3,6420,
    3286,2039,6624,9238,82,5585,3116,5874,7670,3121,8305,4717,6711,4277,3495,8097,2476,438,354,2928,1253,6685,5328,5309,4111,7271,2580,6690,7471,5737,2917,2714,4437,8954,6148,6910,1034,1540,5982,8908,3932,2688,4209,5082,8588,6140,3980,9668,4750,4473,7243,7021,
    1444,2585,9249,4790,1122,3340,3595,5244,8650,9709,7044,6147,9023,3527,1024,8928,284,7897,1799,9024,2091,818,8752,6237,8777,1368,378,8406,3497,19,335,1546,6454,3269,5336,7774,6234,9203,5515,4696,3440,9443,7865,3810,5578,6395,4814,698,6048,3954,8266,6585,
    5257,8162,1304,432,5135,1690,7897,1629,2794,7583,779,5638,7421,556,8548,5167,1752,1353,6823,5183,7981,4444,8808,2222,6640,4363,3706,8825,5415,2394,9275,9333,6819,1111,391,2872,7185,1952,6140,7740,2176,3549,971,4398,7675,7987,548,1166,4177,2651,4467,8738,
    7224,8053,5883,924,5031,4968,9336,7595,2822,5817,1131,9099,96,5548,9855,2613,1405,7911,7236,815,9035,1318,4109,6627,1717,3636,6980,9348,752,2727,2667,5658,8459,8511,7240,8340,3621,3075,6170,389,4666,7263,3058,3068,3641,6588,2152,2518,1825,2545,951,8667,
    3143,7464,9652,2065,1486,8157,5917,2529,2375,6891,9935,1689,4327,4106,9876,8089,3190,2856,2954,4573,3698,6007,3696,2682,9661,7695,6983,7024,6392,9497,8165,8941,2022,2734,6826,3891,5468,3536,2342,9629,5627,8409,1989,9599,1646,4743,9799,6126,5902,7481,4178,773,
    8039,5230,1907,4576,6560,428,9212,7954,3387,8001,8082,2694,5917,1737,347,912,2047,2804,2594,1284,2363,3629,7267,5465,462,5274,5844,8914,1377,9625,3168,4379,8360,5503,5693,5270,430,5791,2662,2466,115,4030,9423,8968,9896,5120,6084,1622,2139,3323,7177,9703,
    6839,5697,1931,3465,7726,7014,73,7309,1692,7846,4519,2784,3715,554,6169,1176,2375,793,7650,886,1067,3164,4703,6769,7977,8612,1175,3499,4734,3346,9291,5348,6729,5078,8077,1536,2838,683,1154,1504,3415,7123,6036,444,6082,5281,3712,8646,7044,2122,9544,7093,
    9665,8506,5608,7634,8575,4956,5914,6497,4374,504,953,8144,8082,7180,6114,5643,1072,82,5496,7948,5624,5152,33,451,6973,4874,480,5797,9795,500,6536,2360,7477,8524,704,1874,5523,8137,7740,9380,2339,2983,6973,6039,1467,3957,2421,7218,7872,73,8137,4226,
    5195,2831,4156,876,3791,6260,4503,3493,6557,811,4022,8712,5329,1157,2473,5957,2051,4593,523,9743,6443,8379,9386,5568,2889,1566,8544,5983,6440,8910,3298,1262,5041,733,7179,6615,1908,8017,3641,8392,1110,8596,999,8579,4099,486,3949,8594,1782,7824,8940,795,
    3542,3277,2682,4762,7834,6563,9667,3353,8320,2763,8112,4020,3324,6587,6958,2440,2963,4290,1141,256,6277,7411,5534,448,5105,680,6408,7352,1581,1042,7573,2475,5530,2709,1310,2667,6410,346,9465,6299,1251,3736,4849,2074,4036,2728,3587,5698,6759,8577,6040,8246,
    4976,6459,8335,2072,9050,4564,1253,952,7677,8621,2793,7068,1425,8057,4613,6959,6073,8142,6893,9156,4317,7864,7278,3368,8425,6852,6734,4025,2087,7960,7045,1165,8264,2487,3450,7115,832,1828,3787,9028,7093,5738,3833,5752,1908,1861,9165,6573,3806,7785,766,6743,
    3126});
    return id;
}

QVector<qreal> MainWindow::getIDValues9()const {
    QVector<qreal> id;
    id.append({
    1385,1659,6198,8510,4007,7506,7421,6608,8645,1393,5572,1774,571,8439,7450,666,7115,7357,3798,9857,7005,2567,356,6861,4547,3131,6215,960,2601,336,3463,498,5273,8826,4880,5766,8887,2257,7903,1273,3374,6044,8570,6149,652,5012,7353,4880,1646,
    5728,1726,8799,7199,2773,9740,2735,6141,213,1954,6032,655,916,556,6261,9402,7958,309,355,4500,6289,3634,790,2429,3944,2941,3811,1488,7415,2115,5500,5582,5635,8028,4996,8877,791,5814,6171,4529,7344,6993,2642,8896,3326,8070,8065,339,2252,
    2285,3426,8465,9658,2807,7145,674,5312,3086,2420,3043,1684,4228,3672,385,6445,7812,1051,7559,2732,8068,4891,9693,2040,7007,6922,866,3362,4552,2925,2469,2950,3096,6288,5858,2673,7619,5393,1907,9317,3352,519,921,2785,86,8910,8279,405,9666,
    1123,7065,7205,9877,3803,3869,1414,9422,1086,6608,1940,4299,7331,2277,5377,4609,8934,1828,3940,1070,3587,4726,541,4501,8438,1682,4062,3505,4727,8937,9004,4146,338,2943,2430,7447,9629,5061,4440,430,9071,573,9033,4448,9739,4687,4728,4723,6661,
    2515,9371,1690,8664,7882,8729,2329,4,7001,7171,9136,400,7646,2585,6940,1031,4564,1841,7967,8987,8044,8071,4478,9936,2790,5164,4516,3016,2936,322,8597,8639,2952,6964,7044,8070,8387,734,1437,8838,6430,7160,6385,1850,6086,107,4103,6799,4359,
    4076,5156,8786,6550,1275,3135,8806,8689,7,9289,2844,3177,6739,6166,556,9102,3327,5955,9811,8717,5446,8448,5620,9619,5944,1895,9208,2823,1468,2510,9827,6496,4290,6574,2925,4188,2549,683,8240,7814,9618,2361,7153,2408,3483,8337,1848,3240,6895,
    8467,4990,8222,3225,984,3978,7335,6638,6175,8297,2322,9645,700,4962,9866,8787,8189,5198,168,4023,53,4845,2226,6903,1843,161,4552,2556,6776,8494,5699,1254,2370,7949,9248,9154,761,6432,5770,262,7346,4311,9790,3372,5407,6981,7465,6173,1640,
    7707,6736,4485,6136,3659,596,4951,7125,3858,2336,9028,5947,6226,9680,4045,9386,67,3588,6634,9238,8184,790,6268,539,1721,8478,9103,7077,3285,6128,3673,4670,8653,4958,2355,6822,5700,810,6862,1069,3499,5784,6278,7623,4996,4654,8963,2301,6146,
    9028,1013,5021,1445,2480,5083,2074,7718,3432,6870,5080,1699,6826,8234,3901,8689,8500,8654,9148,6930,7269,9045,7531,7405,6357,4492,5682,1143,3378,8387,6023,9633,4807,7145,5375,9005,6471,8780,2774,1931,1899,7213,2328,8314,1773,9737,2020,6121,9224,
    2798,3590,4951,55,8277,7978,3366,3042,506,8176,4746,1498,8112,5057,2977,1245,2617,922,4932,5363,9726,8359,7178,4244,1035,7937,5259,7801,9210,2888,6937,2396,3122,5596,4627,487,9751,3552,2092,1268,340,6030,3184,8965,9931,4823,8967,4066,1437,
    3759,8886,9482,4179,1591,9323,9050,3012,4447,4070,6140,5897,36,3001,3812,1616,1958,5399,8959,5573,4342,9046,8603,9362,8560,7248,1054,9001,1674,99,4261,4722,9747,8601,579,7142,9682,3668,2032,9511,2428,3733,6191,9624,6065,823,5478,8800,7045,
    9966,1489,7627,1221,2293,2663,9750,8319,3093,4649,5906,6220,8175,6048,3728,7326,1522,9121,8968,1204,3850,4230,462,6270,5922,9159,2150,7805,5581,6127,6848,3833,1209,9918,4398,3328,6511,6286,3148,4124,5811,7734,2347,1007,1351,9060,5165,5707,3182,
    5246,7661,2954,7282,6508,7780,5903,6653,6462,2221,66,9342,9911,4979,296,7171,5546,5603,3951,62,5400,2470,5025,5198,6906,9243,4297,9937,9714,1445,1540,4190,3349,7699,5491,4855,4752,4117,4398,960,8145,8342,8441,9485,8893,3323,471,1680,745,
    6859,8291,5960,2820,7622,880,6557,43,3073,6504,2543,4702,9510,2740,5526,7497,8833,3063,8872,6701,9384,6370,381,483,8302,8831,3607,9982,2860,4710,1231,4298,8470,3861,7839,8784,5792,8730,7454,5644,3646,798,5679,1660,2353,159,1821,5968,5884,
    5400,1335,744,4385,4463,7735,5019,3198,2223,525,4991,8087,496,716,9463,6713,2209,3236,4810,5462,5625,6980,9077,377,501,8869,7242,4802,210,9883,8804,6716,7861,7052,2957,2604,6183,1253,4661,4975,8472,8941,4574,8886,9466,1432,3588,8002,39,
    765,6736,8696,8800,7603,7605,8806,9625,3658,8722,9782,8911,7670,5983,1946,2051,8980,2315,5906,2014,4597,6689,2290,3901,5402,3199,751,7557,3162,7937,3545,3286,3127,1604,5188,6377,841,3388,5861,7854,9343,4128,8111,7503,2769,1247,7519,3796,6073,
    1878,4109,9480,9548,1168,8711,7335,1043,9065,8954,4970,9620,5908,760,6940,9176,8004,808,3938,4029,8550,1537,5544,6672,1793,4594,3839,7112,202,5908,7967,4982,4450,6393,1817,3930,4153,9654,8157,8046,8914,9848,7550,1294,2051,5730,3808,9511,6748,
    308,1386,51,115,7704,9732,423,8449,5494,7020,1122,1795,5044,6629,8392,1856,6612,1651,6351,2137,8615,4435,2159,2239,3862,4607,61,9896,8480,5222,6378,451,875,9973,9882,5450,867,9054,3725,9897,3236,7761,2193,7488,2745,177,1756,2038,8078,
    2449,143,34,6989,1092,7383,6381,2198,3000,5567,1108,1772,6833,8843,4632,694,4164});
    return id;
}

QVector<qreal> MainWindow::getIDValues10()const {
    QVector<qreal> id;
    id.append({
    3067,251,7380,9460,2092,4644,48,1663,7800,8713,3698,3978,1382,4563,9631,8367,7057,6370,3441,8093,4726,7668,7444,620,647,9204,9928,860,7140,1308,4290,2261,6076,8080,4736,2932,2852,2235,8057,7170,7257,5686,4205,2186,7737,6223,1696,5900,7896,6402,7595,4772,
    9716,9077,8738,8725,8298,7292,8678,6900,5553,6459,4290,5209,8590,298,6083,5413,9694,49,1443,2352,2910,4599,8386,2396,5545,7032,5725,8884,4586,9597,9675,3019,4195,8446,3791,4860,9186,8028,5166,2241,7525,4901,4140,9276,5995,8810,7633,1509,5056,5022,2871,2600,
    6970,1016,6238,9715,6830,4560,737,496,2986,6730,4199,8932,5842,3269,5916,3403,7570,4368,55,7597,3025,9963,1602,9565,8226,6105,8976,8522,9523,7158,9541,2324,8480,2101,9358,2736,7901,5903,8491,3133,5529,5360,2783,7599,6932,9216,107,4724,5053,3599,4088,6510,
    6844,47,6683,6736,3219,8278,5000,7319,4500,2139,1088,4519,690,5823,7294,7424,3947,7166,1876,2586,7765,8619,3459,6357,9510,9436,5727,7731,476,1771,6946,375,6785,1976,3830,4822,2648,5253,490,4429,7111,6401,5,5746,3456,4560,1067,9853,9822,4537,9789,7415,
    4330,4292,419,2722,4826,2133,7790,4156,5227,9036,5241,7987,4188,6605,3439,8485,2255,4377,8375,1649,8231,9601,3025,8293,6891,5301,999,8109,159,783,818,8818,5103,5011,145,5282,4247,8195,1173,8349,2635,7614,8036,5633,948,2302,724,8486,4663,4283,3271,1254,
    5115,7180,3451,8625,4651,5374,1203,2110,259,8958,3275,982,3260,4264,1623,8455,4450,386,3741,672,2297,3872,7267,1746,8458,4202,9164,509,7314,8707,1706,6061,7195,1141,7621,6853,2160,1734,4792,6550,4296,7048,1434,9884,8418,9662,4534,3420,811,2295,3085,5963,
    8123,1039,230,1711,4415,6960,8495,8579,7044,7326,6850,9828,3703,7449,1493,8482,2772,4643,4094,4713,2181,3305,3420,6339,399,6685,1442,5241,7253,7572,8141,6728,2386,7821,6508,5566,9903,141,9346,3533,5937,3133,3902,8094,669,9874,266,485,2378,7006,4538,5415,
    1342,9195,8963,652,9264,3312,1957,1168,3523,2769,9191,9693,7015,606,346,2373,3081,9245,4633,8789,2600,6192,2993,4076,5369,9376,6420,2535,1778,232,1188,1924,2410,7534,4808,8469,2095,7753,1495,170,2766,7645,5449,7991,4566,2016,7469,7995,9362,63,3414,9466,
    353,4526,6358,3764,2573,7202,6657,2029,6404,9540,2503,4655,2230,2304,3528,7725,1943,3619,6599,4646,6903,488,4528,5296,8012,7946,9437,3152,2921,3140,8640,9130,3975,2670,2898,9337,3590,3756,596,7947,4728,6843,9639,1706,298,7309,344,1580,59,2575,6014,7795,
    2632,3904,2388,9241,4794,8854,8404,338,1794,1427,7085,1025,6977,5367,9781,4408,88,8714,5079,9003,3239,5705,3130,3218,37,5170,5770,1010,3424,6587,3306,8713,7779,3955,5944,731,9029,6468,2980,8528,7424,4262,8267,8433,8527,7697,5197,1745,4628,9679,7033,1085,
    7887,8789,3292,8468,274,6281,2498,6612,8442,6249,1346,1847,5442,8342,692,8378,8456,7997,2584,7282,7470,803,8692,8125,7141,9669,2654,7626,3430,2442,3014,1804,1101,2653,4713,2237,3196,5912,590,3193,4523,1059,2968,6244,9196,7539,4805,3984,4315,6967,7980,5022,
    1855,5762,1624,2703,8027,8867,3189,1673,4554,14,6925,4244,2003,3583,4911,2182,1869,8530,2639,7059,4178,1838,3817,642,4426,7144,7992,6466,6352,4246,3259,5512,2839,1711,3254,2395,4874,9211,3196,6887,8086,9346,4373,4265,313,2967,6348,9121,7411,1171,1205,8779,
    4623,3417,9065,2928,5269,4392,5271,1843,2893,1299,9533,3573,2601,4604,6529,5267,6436,7923,4287,9261,1793,8559,4584,151,1621,1376,8495,4581,7859,7879,8747,6033,1797,5670,9760,4191,8831,6942,2415,6574,6578,5762,1466,2028,8244,6528,616,9813,3881,5895,3558,3726,
    7188,3091,4970,3730,9344,4946,4633,5381,122,1846,5383,8533,7855,2451,6017,743,9594,5642,1635,5638,4050,5378,4007,6565,3267,4857,4027,1985,5110,344,3084,1691,7851,9677,8030,6582,1536,1895,4861,8168,2280,2378,5132,1445,1143,8258,1736,88,6133,1381,2397,8400,
    1951,9227,6553,9371,8120,1817,6813,5190,5860,8155,5595,7168,3708,162,3747,3945,7879,232,7939,7899,5556,7653,2749,6951,2520,5798,4116,5520,5478,4246,9883,9834,5541,6244,3403,4329,7671,9263,1136,597,6361,271,1626,7213,7812,8618,5015,810,3849,3977,1217,2701,
    3451,4785,1636,186,6300,3607,1349,9962,3245,800,3928,996,5501,8736,813,5913,5896,3651,9095,202,3449,2373,1454,2514,59,7074,6665,4356,2300,2737,8161,3655,4582,8872,2066,2595,1658,8233,3460,5405,4955,3322,6406,8230,3462,7191,6598,8471,5312,6569,6461,8580,
    8620,6131,9358,2608,7821,3281,2554,2050,168,3283,7313,4731,2307,7407,7941,4228,7229,3880,583,8170,2328,2105,4722,6666,170,1652,2221,2387,2735,5882,1284,6046,5236,2522,6323,9115,7708,1733,4046,5992,6805,3962,2683,1565,5940,4641,7360,7235,3252,1904,2310,8731,
    7981,6398,9355,5025,8943,7701,9307,3197,4518,1343,1899,5099,2841,1639,31,8298,7210,5520,3117,9405,7834,4320,620,3596,2110,4428,4577,6455,8610,7800,4880,400,2202,1357,3017,1796,3134,5464,5346,8981,3081,9293,3545,636,7413,4069,3895,2384,3813,5433,7978,5514,
    7508});
    return id;
}

QVector<qreal> MainWindow::getIDValues11()const {
    QVector<qreal> id;
    id.append({
    4111,1037,7626,619,9589,8232,1681,7529,1737,8873,463,1782,8789,8663,6726,3538,303,9134,9040,50,5961,3097,9496,5017,6801,4648,4483,7266,2525,5261,878,4157,1784,3181,6366,1539,2510,9743,6722,9149,4905,2267,177,2151,4229,
    4708,2088,8404,8423,5717,8064,446,4018,2331,7200,3620,4582,2479,2639,5923,8247,8764,8217,1992,9402,1951,3828,9968,2165,4596,5771,7520,9801,452,1034,1237,2421,9667,5859,2434,6034,5794,2352,2462,6424,7158,5162,3408,3512,2176,
    2805,8454,196,4773,6434,906,7795,3978,5352,7720,4643,7223,3783,6766,920,9843,3599,6978,9632,6839,7024,6595,6260,3918,7252,3924,1124,8372,6706,2832,5239,9482,8453,4435,8582,4118,7862,7092,4044,8135,510,2168,4050,133,8283,
    6512,2366,1015,5545,1613,9544,5958,5799,8072,7208,1346,6952,8230,589,8730,8477,5024,7781,3435,7547,9330,4489,5790,1680,5275,4689,5981,8654,7845,4077,9567,192,4427,8121,4984,8613,7553,7199,9370,9298,9660,7510,3699,4340,6679,
    9530,1184,7997,8925,4,6011,9142,9365,4694,629,3862,6587,808,1055,4481,3178,74,8885,1164,3854,2211,2367,6611,8711,2844,7691,4925,362,6012,1519,8738,8787,6655,2433,4295,998,5825,6815,7674,4059,5179,3389,276,5228,5052,
    4038,9990,8696,5165,3723,3103,7630,6477,9318,4574,3405,996,5955,265,3213,3439,1166,3072,5861,4099,2162,688,8527,3057,5246,9062,8861,6353,5848,1387,6929,4919,6954,8963,4083,5205,6870,1209,1720,1122,6583,5379,4744,7573,3249,
    1259,4953,346,7066,1959,1556,9077,9819,6559,7944,2104,6994,6040,608,798,8056,2600,6745,9246,8635,7064,2307,24,1983,8653,809,9656,8288,385,1857,2202,8338,9312,5402,7998,1886,8182,3044,6640,8769,9359,4828,5635,391,9872,
    1495,8761,1422,3359,6067,8027,4696,9264,8125,2862,4643,7253,1322,7724,6361,1829,5707,1422,8385,1823,3916,5733,880,2500,5597,9669,1225,2262,1830,3400,3161,267,2465,2101,488,6731,6364,1626,2666,5075,4964,2522,6727,8288,6331,
    8510,8662,7348,9041,5122,8699,4693,9512,9260,6654,2247,2789,1806,8491,1630,6596,6622,1198,7728,2509,4135,8091,5352,2551,3598,1550,1093,2346,7242,2131,4485,7925,9531,9924,8091,8058,9338,4884,3544,5702,1604,4551,7407,6589,2750,
    4105,2676,6368,5574,1016,2860,5671,2102,750,818,4511,6933,1464,4713,7295,6273,6186,2772,8617,8211,1968,8179,7091,2901,2336,4697,6255,5812,4080,8407,424,2575,3497,6418,5856,3657,3841,9233,4910,7582,7686,6446,6347,8941,8111,
    3644,3265,4725,4522,8728,5731,6385,4080,4155,9486,8474,9214,4316,7190,4729,7747,9497,2295,5319,9306,3482,323,6198,9140,1680,1821,3387,7977,9451,2496,3946,5347,423,7104,9711,4995,7345,9414,2546,8747,2287,3604,1667,6652,7790,
    3095,6137,9562,4668,9230,7077,8807,4249,6382,1648,7104,7217,5942,7106,9978,5371,9065,1891,4152,6767,7982,4898,4776,8372,5390,7700,9430,3566,2383,2964,2683,4727,5680,9108,5105,7036,2317,2958,6452,6616,5953,3082,9188,4736,164,
    6923,3732,8418,9732,7000,4143,225,1339,601,6989,9006,1851,772,9018,1150,9797,8101,7472,2838,6376,2576,5726,8940,7900,6589,1876,9739,6177,3629,1414,7840,2275,8164,1819,5604,195,8611,5999,2069,7849,7101,5120,5117,2901,129,
    177,863,6559,563,4923,4090,7069,4690,882,2756,2393,3902,4665,6072,399,9462,4337,800,2141,7390,6162,9978,3665,6633,1353,8064,2956,2263,376,8854,1154,3292,6280,3984,9232,4749,8182,9647,7925,1706,1270,3366,5400,3112,8126,
    9380,8664,6985,7578,9508,4543,7550,7752,5338,2581,712,5545,5212,6970,5085,25,8535,2142,4371,7842,3225,5793,9994,9584,6651,1292,7463,8863,8227,7780,7881,496,3875,4465,159,9225,7504,6464,3070,6776,539,2162,2020,2774,7067,
    5205,9874,2572,7768,280,2312,2295,2586,4120,6203,2628,3882,5538,1495,4702,4828,6585,2315,6377,2595,2759,1859,6336,1268,6415,180,7972,7075,5137,8973,6945,6277,9785,6809,8881,5020,5104,5927,8023,5623,2047,6924,5976,1518,5993,
    7943,9118,7426,1587,1919,9923,5576,1035,5708,9299,1409,3291,9263,2275,7848,7918,4117,3106,3118,5234,3303,5667,1914,7323,2896,1182,2975,6236,5598,711,9274,7072,2821,1442,3130,5188,5817,1333,3510,5010,3470,6116,2359,3222,2025,
    9215,984,6558,6771,9147,9545,1109,6413,7179,3630,4878,836,1293,9824,5712,4443,7663,3786,4525,4914,9151,3507,4817,3087,2461,6799,5325,3595,6828,6412,7647,6484,6155,6018,8390,5758,4100,8538,4269,9955,4502,6079,1441,7200,852,
    8235,7678,3611,3826,8917,7306,2803,5755,4720,96,4157,8449,7717,9162,7109,1183});

    return id;
}

QVector<qreal> MainWindow::getIDValues12()const {
    QVector<qreal> id;
    id.append({
    4161,9040,8789,7373,3580,8868,6583,7098,9439,5843,1485,8113,7187,8604,9292,5154,5424,4906,1200,9650,2800,1529,5197,8736,2422,4187,531,3865,5243,2177,6674,7219,2747,7768,9364,6379,8678,5348,7779,8199,768,3704,5241,8340,6659,476,3454,7882,7631,9497,5461,3187,9032,
    4298,3848,3746,6121,6389,945,1417,9634,1198,2443,4876,3488,8286,1927,8928,9251,2325,6746,7639,4026,1704,8429,285,8872,8519,5759,4185,8049,6887,2900,7136,6755,1341,760,1095,3848,4716,9104,9992,6143,4186,2123,1642,299,2346,9229,7174,6461,3090,496,7162,1828,5779,
    9939,7391,2338,9723,8218,9621,3214,975,5461,887,3071,9309,9583,8445,1725,7728,914,3152,1936,4384,8566,8209,8814,8329,7748,7274,1417,8469,6177,6194,6394,9594,8999,7344,6660,9197,1855,7714,9315,6212,8185,488,2335,7672,3046,870,6785,6655,3602,4577,221,4470,5971,
    7143,9132,639,3221,7461,9928,5719,6700,8761,9196,7563,4930,9604,7939,7258,8957,3628,1054,1555,7019,4970,707,630,3173,1867,759,276,6022,548,264,2620,195,8050,7359,3556,3753,5053,6434,5733,6314,5704,5006,3728,5457,8763,5207,8666,9996,8109,8154,9472,5455,2407,
    440,1342,2017,4974,1584,9431,9455,3493,8179,4575,684,6529,4164,8680,8924,6568,3063,5547,1803,6463,9617,9564,9245,3460,4349,6809,2914,704,3983,8897,125,136,6106,7820,7618,8406,2505,8265,3732,2951,56,5077,9516,2243,1789,3862,5104,6245,1737,1046,8513,14,3297,
    398,1286,3671,8748,4401,490,5862,918,5571,308,6812,4375,9928,9154,1873,9498,2257,8883,2207,8633,113,3304,7388,4587,1193,4278,6595,8870,6506,16,1630,78,5805,7161,5767,6731,1062,4927,445,5033,3553,9891,9702,512,716,6698,7303,7608,526,6367,7525,993,1307,
    4900,2294,2558,81,4361,2726,3240,2413,1445,9633,2252,209,1477,554,5772,1584,8725,8503,6461,4324,5895,4586,8933,3887,9488,120,119,6144,4272,4471,4026,6981,7267,5889,5433,9068,2741,7125,4150,2265,1289,8751,3263,2312,7786,5113,3289,6272,5154,4257,3998,5000,8867,
    1112,8247,2572,4479,9024,7969,5268,6563,190,2454,2399,9326,4017,5225,9265,7192,8394,878,8935,6916,8925,4254,7685,4736,9702,140,8628,5399,4154,5022,2328,2786,7769,1669,8757,3994,298,1879,7689,4181,8647,5332,9602,3661,3911,9578,9633,6597,8447,688,6942,9336,4526,
    2862,763,910,9431,2518,5509,9419,8436,2970,5578,7494,3154,6204,7270,6339,2530,7710,856,6656,3036,9473,4059,1375,645,547,4369,5910,5162,6038,199,2260,7943,2590,1367,6075,7601,8097,3545,465,4017,5594,9748,3709,6345,2126,5839,8080,7953,7326,8481,1545,5863,4398,
    386,1332,1357,747,8091,6168,2640,7129,4802,8921,1327,7590,1535,7031,3678,8663,4822,753,7796,1188,2971,7762,8975,8849,4040,4244,3892,4734,9318,8226,5552,3815,5722,2220,686,7263,2925,8661,4880,4962,6472,8565,2536,4869,8897,6252,7820,1267,4097,3790,3758,5048,6412,
    2510,6635,9929,5930,633,6734,7673,1677,5284,3409,9648,4689,8954,5155,1248,7216,241,8657,2065,7658,3935,9739,6532,5844,3313,4035,1039,966,1734,3871,6043,3112,9179,9017,7192,1436,8951,6578,6852,2875,644,1634,4793,1967,1041,4794,2280,5785,4452,5251,409,4246,3336,
    7985,7560,4963,972,9298,3115,9625,6026,5615,2625,3924,3372,9899,6630,916,6780,3741,9060,2612,9129,2491,6080,7808,8798,1567,1152,1948,6971,630,8972,3428,804,2755,2713,1247,5538,4105,7150,9922,4577,135,4130,1881,399,5395,4112,5178,7499,5447,1692,323,3385,1118,
    7559,5271,5361,6244,9051,969,5828,5100,5404,3606,9085,4541,8355,5490,5944,9912,1181,1087,4678,4404,2549,6439,5678,7399,3445,8096,5193,9934,417,7111,2614,5915,527,3064,8191,9665,98,1814,3200,214,4879,9537,682,9375,844,6176,5738,1025,9774,6662,1815,2992,1420,
    398,5354,6700,3255,9516,2604,2378,3567,1702,8849,4831,7877,9724,2768,385,6804,1811,3476,8971,620,2616,730,1683,2855,7689,9455,1705,1314,7138,7668,1270,2541,9406,7243,4730,6576,410,160,9981,1784,9157,4537,8114,3103,2359,8928,3582,7661,2747,9990,6645,7589,3839,
    1242,6371,7370,5069,5549,6457,3290,2497,6069,4682,7775,2561,5541,9034,9161,9268,1439,6158,7788,3909,4461,9437,7658,2559,9873,792,3635,4364,6459,7076,5388,7423,2585,3528,9559,4994,8660,3180,2406,2936,5489,2574,7601,2158,1567,8820,9112,7927,4407,7597,6778,7419,6606,
    2948,2312,807,376,802,2741,5102,9107,7162,2073,729,3405,6413,3513,5216,761,329,3504,6995,9158,9746,7913,6057,8122,3408,7240,913,8329,5021,5537,5054,4516,633,8172,6878,9088,806,4466,5583,8014,9423,2690,3810,9237,47,6265,1138,5476,6865,9605,3280,7276,3967,
    372,5003,2840,338,5089,6607,3429,8697,3807,9354,3620,7844,5964,5049,8855,2342,4662,3858,2110,5328,2285,6976,8269,53,7119,6826,3994,9775,4060,5002,523,8058,8314,7066,66,3623,6841,1820,9053,3083,6731,885,3159,2183,2919,9515,3080,8642,4130,9995,6252,4436,4375,
    9622,823,2489,7462,4825,1348,498,6953,345,4402,3960,5752,933,9299,1269,587,8498,7367,2508,2046,9816,662,9775,9341,4341,6509,1108,5089,277,7576,4522,9803,2155,4587,5347,5707,2889,6321,2879,4473,428,1829,8766,9718,2364,5440,5136,7000,5922,2074,6872,9359,3351,
    4036,9464,2055,499,9945,5121,3677,3772,1845,1173});
    return id;
}

QVector<qreal> MainWindow::getEndValues() const {
    QVector<qreal> to;
    to.append({
    4,6,7,10,10,9,2,8,2,8,6,9,9,9,8,8,4,4,8,7,0,8,0,3,5,9,0,1,8,1,6,6,3,5,5,11,7,2,10,4,2,5,9,11,10,8,3,3,4,8,7,1,10,10,1,4,10,10,8,11,2,11,7,6,4,2,4,3,11,11,9,4,1,6,2,2,11,10,7,8,1,5,10,8,9,3,8,5,2,7,11,7,11,11,8,8,1,8,2,6,10,1,3,7,9,9,6,10,11,5,10,8,1,6,7,2,4,2,6,0,1,8,7,0,5,10,
    9,10,8,0,6,0,5,7,8,4,10,4,11,10,1,8,5,1,10,4,5,3,3,11,9,5,10,1,8,8,4,6,5,8,0,2,9,1,3,6,7,4,5,9,10,6,1,11,10,2,0,9,1,8,10,3,4,4,11,1,4,11,2,11,3,10,4,11,10,0,6,1,2,2,11,1,4,11,6,1,8,10,5,2,3,3,1,0,5,5,1,4,5,0,9,11,4,2,8,3,0,4,1,0,1,7,9,1,1,3,2,5,6,10,4,4,2,3,9,10,8,7,3,7,5,2,
    3,3,8,6,4,3,2,0,10,10,7,11,2,0,2,0,8,6,10,11,4,1,11,7,9,7,11,6,1,8,9,9,7,5,5,6,3,3,8,3,9,0,10,5,5,10,0,9,11,7,6,6,2,0,6,6,3,2,5,1,11,2,6,3,3,4,6,6,10,5,8,5,7,6,6,5,3,4,9,9,6,11,1,7,10,0,7,11,2,7,4,2,9,11,5,10,3,11,4,11,11,4,10,2,10,4,7,10,9,7,3,11,4,7,6,7,9,0,10,11,0,10,3,4,10,3,
    7,2,9,2,4,5,1,8,9,11,0,6,2,3,9,9,1,1,10,11,3,2,7,11,0,11,7,8,1,3,11,2,2,10,0,5,2,0,4,2,10,6,8,2,6,10,4,8,4,9,2,1,5,3,0,3,6,0,0,4,2,5,0,10,11,1,5,9,7,3,0,4,6,2,5,3,6,4,0,4,6,1,1,9,2,11,7,10,1,5,2,2,5,5,8,6,7,2,0,1,2,2,6,3,0,10,10,2,2,6,4,7,4,3,6,11,11,2,0,2,4,10,4,9,7,6,
    2,1,2,3,1,1,0,5,10,5,11,7,6,3,9,7,8,1,3,11,6,7,3,8,2,5,1,1,11,6,8,9,6,11,8,6,10,0,10,0,9,4,2,8,5,1,10,4,3,8,4,5,11,3,5,4,9,5,6,4,3,6,7,4,9,11,5,1,1,9,2,2,8,7,0,2,5,1,6,0,6,2,5,10,3,8,0,7,11,8,2,4,8,0,9,10,1,8,3,11,7,1,6,5,6,5,0,11,7,4,3,8,7,1,10,1,11,9,4,6,4,10,2,4,9,2,
    10,7,9,7,5,2,7,4,9,4,6,5,5,2,6,2,11,5,10,11,6,0,9,3,0,11,8,10,8,7,5,4,5,4,2,4,3,8,6,9,4,2,5,1,4,7,3,10,7,5,5,10,0,1,7,8,10,4,5,10,8,6,1,0,10,8,7,1,7,2,6,3,1,9,3,5,8,2,11,7,3,6,9,0,10,5,8,8,7,9,5,1,11,3,9,4,11,6,1,9,10,4,1,2,4,9,4,5,9,10,9,5,7,9,6,10,3,11,5,2,4,5,5,11,10,5,
    4,9,9,9,7,7,10,3,11,7,11,4,10,7,4,8,0,10,3,5,7,2,9,1,9,11,8,11,11,10,5,10,4,10,7,6,8,6,1,1,5,6,7,1,10,10,10,4,7,10,0,6,8,5,8,7,3,5,3,4,1,5,9,4,7,2,0,11,2,4,1,0,6,2,8,0,1,0,8,2,5,7,6,0,6,5,11,0,3,2,6,11,0,5,10,6,2,11,3,2,8,9,4,10,0,5,7,5,7,4,0,4,5,4,4,8,3,4,10,8,0,0,0,1,8,1,
    8,5,2,11,8,0,5,1,10,11,2,4,6,6,9,4,2,10,1,9,9,3,2,11,2,6,0,4,7,3,8,10,1,11,3,8,6,4,9,8,0,3,8,7,4,9,1,3,3,1,2,0,8,10,7,10,0,10,6,5,4,1,5,10,7,11,5,7,1,1,9,0,10,1,8,6,2,2,9,10,4,1,3,7,4,7,4,5,4,2,2,8,9,4,5,4,8,2,3,0,9,10,5,9,8,0,6,8,5,11,4,5,8,6,0,7,4,1,6,1,9,6,5,2,11,4,
    8,8,4});
    return to;
}

QVector<qreal> MainWindow::getEndValues2() const {
    QVector<qreal> to;
    to.append({
    7,2,2,3,3,8,4,11,3,1,6,10,3,11,6,6,7,5,5,7,5,7,3,11,7,1,3,2,7,3,8,6,6,1,4,11,5,2,2,9,4,5,4,10,3,5,10,9,6,8,6,9,8,6,4,6,11,1,2,4,9,7,9,0,3,2,5,10,7,11,1,9,2,9,5,11,6,7,5,9,9,11,10,5,9,5,8,9,10,6,7,0,11,8,1,4,1,10,6,5,2,0,1,4,11,8,9,2,4,11,2,8,1,2,3,3,
    5,1,0,9,3,10,1,8,11,11,3,5,6,6,11,8,8,11,5,6,6,2,0,9,0,7,0,6,6,6,1,0,7,2,8,5,9,9,3,3,2,10,8,9,7,3,11,11,11,1,9,10,8,9,0,1,10,4,0,9,9,10,6,4,5,3,8,5,7,7,7,5,9,2,10,5,6,11,2,1,4,9,0,0,10,8,8,1,4,2,8,6,8,3,5,6,11,3,2,2,10,5,3,0,7,4,5,9,5,3,10,3,10,8,3,4,
    9,0,5,5,8,5,3,0,3,3,9,10,10,9,3,0,6,2,3,3,7,11,9,7,0,7,1,2,6,11,5,3,10,4,7,5,2,11,6,5,11,7,10,7,1,3,11,3,7,0,11,7,7,11,3,6,6,4,0,8,5,8,6,7,8,11,4,7,6,9,2,6,10,6,2,11,2,3,0,4,2,11,5,6,6,4,11,8,2,0,5,4,2,5,3,10,11,3,4,11,4,3,7,4,6,6,0,11,1,6,2,7,9,8,11,11,
    0,5,1,5,0,5,9,9,10,3,8,7,1,5,4,4,10,5,2,1,0,6,4,7,9,3,3,1,7,1,9,0,3,9,6,3,9,6,0,2,7,3,4,10,7,1,3,5,2,2,2,6,3,9,11,7,6,4,4,3,0,8,1,0,10,9,11,8,5,6,1,2,7,8,7,9,9,0,7,8,3,0,3,9,9,10,2,6,11,11,9,3,0,11,5,9,10,4,1,8,1,7,6,9,6,5,3,9,1,5,2,2,9,6,8,7,
    3,11,11,8,10,5,6,9,11,10,11,4,6,0,10,6,5,8,4,11,11,6,1,0,8,2,8,1,9,2,0,1,3,6,1,10,9,3,11,3,2,8,1,9,1,5,2,9,6,6,8,6,0,5,5,2,7,0,8,4,3,9,4,5,8,8,7,5,10,10,11,2,9,6,10,11,8,7,8,10,0,7,7,5,8,9,4,5,3,2,11,10,2,6,11,1,2,9,2,11,5,9,4,2,2,6,11,7,4,1,8,5,1,11,2,5,
    4,3,6,2,10,9,10,11,2,3,4,10,3,7,3,11,5,8,4,10,1,9,4,11,9,11,2,5,11,8,6,3,5,11,7,0,1,5,9,8,1,0,10,11,3,7,7,3,3,10,1,4,4,8,5,11,10,1,5,11,6,0,7,11,7,8,10,6,6,4,9,7,9,0,0,8,8,1,9,10,1,7,9,0,6,4,7,3,10,4,7,1,5,3,10,9,3,1,1,0,1,2,11,3,6,6,11,11,6,8,2,4,5,0,4,6,
    4,8,1,5,5,7,1,2,6,9,8,8,0,7,7,8,9,5,7,0,5,5,8,1,4,0,10,11,0,9,4,8,8,7,5,11,8,6,5,9,0,3,5,10,3,3,1,9,6,0,2,11,2,8,11,0,6,4,8,5,9,8,11,5,7,2,6,6,8,9,7,10,7,10,11,7,1,11,9,5,2,4,2,6,10,7,11,3,3,5,6,0,9,8,11,0,7,11,11,9,7,1,10,8,1,2,4,0,0,3,0,4,0,2,6,5,
    6,1,9,6,3,5,4,4,1,0,1,8,0,10,7,3,0,5,11,10,5,0,6,8,11,11,5,2,8,7,1,0,4,11,11,5,3,5,6,6,4,5,4,9,10,4,5,11,3,2,1,5,9,4,1,11,5,8,10,9,5,11,4,11,1,4,11,10,6,7,2,9,5,11,6,10,9,9,3,2,3,0,3,2,5,2,4,2,8,2,10,2,1,1,11,5,9,3,8,1,6,1,7,3,7,9,5,8,8,0,5,11,2,8,5,6,
    4,7,4,9,3});
    return to;
}

QVector<qreal> MainWindow::getEndValues3() const {
    QVector<qreal> to;
    to.append({
    3,2,6,2,7,2,1,9,11,2,4,9,3,5,10,4,10,8,1,7,6,0,1,4,10,5,9,2,6,4,1,4,10,8,8,8,3,4,4,1,5,3,9,7,1,2,11,4,8,1,3,9,6,1,4,1,0,7,8,6,0,1,1,3,2,2,7,11,7,7,4,3,8,5,11,3,5,3,5,2,4,2,4,11,2,8,4,11,7,9,1,10,10,8,1,5,0,1,6,1,0,11,9,7,0,6,9,3,4,3,11,6,4,10,7,4,0,0,7,2,9,1,8,3,8,4,
    8,4,8,9,2,6,7,11,6,4,2,3,9,11,10,8,10,11,8,3,8,7,3,9,7,11,11,7,9,8,0,2,4,6,7,10,4,8,11,10,8,9,8,11,8,2,4,4,4,7,6,10,10,7,6,6,0,3,5,5,7,3,5,2,5,9,9,5,6,11,3,2,10,5,5,3,2,7,1,1,4,10,1,11,6,6,8,3,9,11,10,11,6,0,11,3,8,7,6,6,0,5,6,6,3,8,6,1,7,7,4,9,9,1,5,5,8,10,11,7,4,11,1,5,7,2,
    4,3,11,11,6,1,3,6,10,4,9,3,5,10,1,1,0,10,10,10,0,1,5,5,1,6,2,4,11,3,4,10,1,8,9,7,4,9,11,4,8,5,10,9,2,9,3,10,8,7,2,5,11,4,1,2,3,2,11,4,9,3,9,5,7,6,11,11,4,10,9,11,3,5,6,6,6,8,4,10,11,5,10,4,5,7,4,8,3,2,8,8,10,10,10,4,10,4,4,11,0,10,5,6,10,11,3,11,2,10,10,2,8,9,7,9,5,2,7,7,0,3,8,4,10,11,
    10,2,5,6,0,2,11,8,11,5,10,6,0,1,1,10,8,3,1,11,10,1,10,9,8,10,4,7,4,6,9,9,6,11,10,9,8,2,9,8,11,0,6,6,2,10,3,3,1,4,9,7,9,5,5,6,8,9,5,1,11,5,3,7,3,11,3,4,9,11,2,0,11,11,5,11,8,3,3,1,3,5,2,9,10,5,4,7,6,1,4,6,9,10,5,10,4,10,1,9,10,7,7,7,11,7,4,11,0,5,7,3,11,1,11,3,3,10,10,5,6,7,0,4,5,11,
    6,10,9,11,4,2,4,7,8,10,10,4,6,4,5,6,8,7,8,0,6,0,9,4,8,7,2,0,6,8,0,4,8,7,3,3,3,7,8,7,2,9,10,9,1,4,5,6,7,6,4,10,7,1,0,0,3,9,2,2,11,0,8,2,8,2,0,4,11,11,1,10,0,8,9,2,7,7,10,5,9,10,11,3,6,1,10,6,9,11,11,9,2,3,0,1,11,11,1,2,0,0,3,2,3,2,5,4,11,0,3,5,0,0,0,10,6,10,10,0,4,2,4,3,3,2,
    6,11,2,10,2,2,6,7,2,1,4,2,3,11,2,7,6,4,7,11,2,3,2,7,6,0,6,4,3,2,0,2,6,11,9,5,6,0,7,1,9,1,11,3,4,6,3,6,0,11,8,4,10,10,2,4,10,3,2,2,3,7,8,8,8,4,7,5,1,3,10,5,3,8,0,1,6,5,8,7,8,1,7,11,10,11,6,0,6,8,4,3,1,6,5,0,10,11,9,11,10,5,11,9,9,9,2,2,1,0,2,0,7,4,1,11,10,11,9,1,9,3,2,11,4,1,
    4,0,5,10,11,3,2,4,2,6,0,1,11,10,0,5,11,1,2,1,5,7,0,3,8,8,10,6,1,7,2,11,6,4,10,7,5,2,8,7,11,8,6,10,3,2,10,4,10,11,2,6,5,5,11,1,10,9,7,2,6,2,2,9,2,4,10,0,3,5,7,3,11,11,0,2,1,11,1,6,10,3,10,7,7,0,2,11,4,3,10,5,10,2,10,6,7,11,4,1,11,4,9,5,3,8,11,3,7,0,3,3,4,8,3,6,1,4,7,11,6,5,6,6,0,1,
    1,0,5,8,9,5,6,5,8,6,7,3,9,6,10,1,9,0,10,3,0,1,1,9,2,1,1,7,5,7,8,2,1,10,2,9,2,10,3,7,10,0,3,9,9,1,1,8,1,1,8,2,4,3,5,7,11,4,8,7,8,2,3,4,7,9,2,4,0,5,9,5,1,1,1,6,10,7,0,1,8,9,10,1,7,0,2,4,5,7,11,3,7,7,10,6,6,8,1,0,8,10,2,8,1,0,8,10,3,9,0,2,1,11,11,3,4,8,10,10,9,6,11,8,6,11,
    8,5,11,10});
    return to;
}

QVector<qreal> MainWindow::getEndValues4() const {
    QVector<qreal> to;
    to.append({
    9,3,0,4,5,4,10,1,11,1,3,9,3,6,4,2,6,11,5,1,2,6,7,0,1,10,6,6,8,2,9,6,9,11,6,5,5,3,7,11,10,8,10,3,4,3,3,4,3,6,9,9,9,0,4,10,9,11,9,6,8,3,3,0,1,8,8,6,2,3,4,3,2,0,9,2,6,8,7,11,10,5,0,6,9,0,0,4,10,10,5,2,9,5,11,10,11,10,5,10,0,8,10,3,5,11,0,5,3,1,3,1,8,3,5,7,11,0,9,7,0,1,8,7,8,11,5,1,6,10,8,
    3,6,0,10,0,11,2,10,9,2,9,9,6,8,0,3,5,3,6,5,10,3,3,11,0,8,5,2,8,0,4,11,11,10,3,11,8,6,3,9,4,9,10,5,5,9,8,11,9,4,2,5,6,8,3,4,5,9,8,5,5,4,3,7,10,11,0,2,2,8,11,1,9,1,4,7,3,11,10,4,8,8,4,1,8,3,10,7,1,6,1,9,10,1,7,10,7,7,11,7,7,5,3,2,2,9,6,5,0,7,6,3,2,2,6,5,1,8,6,4,2,4,4,6,8,8,10,5,7,6,11,
    6,9,10,0,1,5,8,6,6,2,8,4,5,0,10,11,2,8,1,7,9,0,9,1,9,10,11,10,8,0,5,8,10,0,3,4,10,2,6,4,6,2,6,8,7,0,8,1,2,8,5,4,10,5,5,5,11,11,0,4,1,10,7,2,10,3,2,2,9,10,3,1,2,11,3,8,4,4,4,1,3,6,2,10,7,2,0,5,11,1,4,6,5,1,9,6,4,3,1,0,0,4,10,10,5,6,1,7,8,1,6,5,4,6,5,2,6,7,10,4,4,0,4,5,4,2,2,11,4,9,10,
    6,7,10,1,9,8,11,7,0,1,0,7,3,2,4,8,5,5,0,4,7,6,10,10,11,0,1,0,4,2,0,9,2,1,11,6,4,2,8,2,6,0,6,6,11,11,6,4,2,4,10,0,0,8,8,10,9,0,1,4,11,2,1,9,11,5,4,2,11,4,11,1,0,9,0,3,3,1,2,1,4,1,0,11,10,4,8,10,2,3,7,5,11,8,5,4,11,5,10,3,9,3,8,0,5,8,9,3,7,7,3,4,8,3,7,9,1,5,0,6,3,0,10,8,0,5,9,10,2,6,6,
    6,9,6,7,9,11,8,0,4,8,7,1,8,1,8,1,11,6,1,8,5,8,11,4,11,5,2,6,7,11,0,9,0,6,6,9,8,4,7,5,1,2,8,4,10,0,8,0,9,9,0,4,11,9,6,2,0,4,1,4,9,0,8,0,10,5,5,8,4,0,2,7,6,1,9,3,1,8,4,5,3,0,8,6,0,5,8,0,4,1,8,4,3,6,8,9,5,10,10,3,9,2,1,1,3,2,8,9,5,5,4,2,2,7,1,1,6,9,3,9,7,3,11,0,1,4,10,2,10,9,0,
    10,7,4,5,0,4,7,11,5,8,3,9,0,8,6,0,0,7,6,7,5,7,5,11,9,11,4,7,5,9,4,10,1,1,11,5,3,7,4,10,1,8,6,9,1,10,3,2,7,0,2,10,7,1,8,5,5,9,9,6,0,6,4,11,4,3,10,2,3,10,2,11,2,4,1,6,11,1,7,0,11,1,7,8,4,1,4,2,2,8,2,1,1,11,2,4,7,1,6,5,5,2,1,6,4,3,3,10,10,5,3,1,4,5,0,2,3,6,0,7,1,3,7,5,2,11,1,0,10,11,10,
    1,10,11,6,0,2,0,4,0,11,0,11,6,11,5,0,2,0,2,1,5,9,7,10,3,0,8,3,10,6,1,0,5,5,11,5,5,3,0,11,2,0,10,2,2,11,10,6,2,7,10,9,5,1,6,9,8,4,9,4,1,8,5,0,2,6,2,4,3,3,5,0,8,10,5,8,2,1,0,4,1,11,11,11,10,1,6,6,6,0,0,0,10,0,2,5,6,5,1,7,11,1,11,7,9,4,7,9,5,0,9,4,9,2,6,2,10,2,6,4,7,0,10,9,9,1,11,11,7,5,2,
    7,11,5,5,1,8,3,11,0,11,3,3,8,7,7,8,7,4,2,10,7,4,1,3,2,11,1,5,7,8,2,8,1,2,11,0,5,11,4,11,8,2,9,6,3,9,4,11,6,7,2,0,4,11,11,8,0,11,3,9,9,1,8,0,2,6,11,8,10,9,1,1,4,11,10,3,10,10,2,10,8,9,2,6,1,8,5,11,0,9,2,5,4,11,6,0,9,3,3,11,4,3,10,11,11,8,5,11,10,7,10,11,5,3,5,3,3,6,1,6,8,2,7,3,4,0,6,5,1,2,7,
    10,8,4,8,8,10,3});
    return to;
}

QVector<qreal> MainWindow::getEndValues5() const {
    QVector<qreal> to;
    to.append({
    3,6,2,6,8,0,8,10,5,9,0,9,8,9,0,1,9,4,5,10,5,4,2,5,11,11,2,8,2,6,9,7,8,9,4,9,6,5,1,11,0,5,10,2,5,6,10,8,11,4,9,3,2,10,1,2,0,3,3,5,8,8,4,10,10,1,8,4,3,11,2,1,0,9,2,9,7,7,10,8,10,10,10,8,6,9,4,10,6,9,7,1,9,7,1,5,4,1,6,10,2,9,7,2,7,7,5,4,0,4,3,11,7,9,0,1,8,
    10,3,1,7,6,10,9,4,9,8,1,1,2,5,6,6,0,1,10,9,0,1,6,6,9,0,2,4,9,1,8,8,4,5,1,7,1,11,11,9,9,4,1,10,1,6,4,9,4,10,11,3,6,3,4,4,7,11,1,1,3,4,2,3,6,5,2,1,3,9,7,6,9,8,5,3,0,4,6,7,4,9,2,5,9,8,3,7,6,7,6,9,7,9,1,0,9,8,6,2,0,2,0,9,5,4,10,8,6,6,0,8,1,10,3,0,1,
    1,3,6,3,5,0,7,7,2,8,6,7,6,0,3,5,6,1,5,11,10,2,7,4,9,1,2,6,1,2,7,11,3,9,4,6,8,6,10,10,6,3,4,2,6,7,1,0,4,6,8,4,4,0,9,0,2,2,4,1,11,11,1,0,4,3,2,4,10,11,8,3,10,5,2,8,8,10,7,7,2,1,5,5,5,8,4,10,3,0,7,0,4,0,9,7,3,6,9,2,2,2,10,2,1,5,0,3,5,6,0,2,2,5,4,6,1,
    7,10,10,9,3,8,9,0,9,5,11,2,11,3,4,10,9,0,8,0,11,2,9,1,6,6,1,5,5,2,0,1,3,0,8,7,5,8,11,4,2,2,5,11,9,0,3,2,2,2,2,5,1,2,9,7,0,10,7,9,10,3,4,6,2,4,2,2,4,0,8,11,1,10,0,4,8,2,1,11,4,11,8,9,9,3,5,3,8,1,9,8,0,6,10,10,8,10,5,0,3,10,4,2,8,2,7,1,0,3,4,8,5,2,8,7,6,
    8,6,8,8,4,8,0,2,8,11,6,4,0,7,7,9,9,5,7,6,8,0,9,4,9,8,4,5,11,1,10,4,9,9,2,4,0,6,8,1,7,3,3,2,9,3,7,1,8,10,4,8,9,1,4,10,8,11,5,10,0,11,9,6,0,11,6,9,11,3,7,0,3,1,7,3,8,7,3,8,3,4,1,1,8,11,9,4,7,0,5,9,4,3,11,8,2,0,3,2,3,1,11,9,8,6,0,11,6,7,1,10,11,0,2,2,0,
    4,1,8,2,2,9,6,5,6,0,3,3,10,5,3,10,9,2,7,7,0,10,0,11,3,9,1,11,3,8,7,6,8,10,6,8,2,11,0,3,0,10,2,11,4,4,10,0,0,0,4,0,8,6,2,4,6,0,3,4,8,11,2,11,11,5,7,8,10,0,2,7,11,6,3,1,5,9,4,5,3,11,3,8,2,2,10,10,3,11,9,10,11,5,0,10,8,1,0,2,0,1,3,11,10,10,2,9,2,7,6,1,11,7,2,5,10,
    11,3,9,3,11,5,6,0,9,1,3,2,9,9,10,7,1,2,10,10,1,7,5,8,1,3,9,9,6,3,3,6,3,3,11,7,6,1,0,7,9,4,11,6,3,10,8,6,1,1,10,6,1,8,5,0,2,1,10,4,2,5,9,11,11,10,1,9,8,6,7,0,9,0,9,6,5,3,7,1,2,8,7,5,3,1,8,2,8,5,11,9,11,4,2,0,11,10,7,6,11,10,2,8,6,9,1,1,8,7,5,2,2,2,11,10,9,
    3,6,10,10,4,9,1,10,0,6,4,5,0,10,11,6,6,9,0,6,9,11,7,11,2,0,0,6,5,11,11,1,6,6,6,0,6,8,3,10,6,9,9,2,8,1,8,9,11,6,3,10,0,0,0,4,4,9,6,9,0,0,6,5,7,0,7,8,8,5,6,11,0,1,2,3,0,11,8,0,1,7,11,2,2,3,6,4,2,3,1,2,1,2,1,4,7,3,9,5,10,7,9,2,2,3,5,6,9,3,3,3,10,1,0,1,9,
    9,1,6,0,8,0,5});
    return to;
}

QVector<qreal> MainWindow::getEndValues6() const {
    QVector<qreal> to;
    to.append({
    11,4,6,11,4,10,6,0,5,8,8,0,1,10,1,10,2,6,11,3,7,11,7,11,9,10,7,3,6,9,3,0,11,5,7,2,5,3,4,2,6,1,7,1,8,11,6,7,1,0,0,5,7,4,7,4,8,2,2,6,4,1,10,1,9,8,1,11,7,2,1,11,10,5,5,8,1,7,0,11,6,2,4,0,0,2,3,7,7,5,11,4,0,9,10,2,0,2,10,9,1,5,9,6,0,7,7,11,2,3,3,6,8,2,2,7,4,7,4,11,8,4,5,1,11,7,6,0,
    6,11,7,1,9,6,6,0,8,0,7,0,9,0,11,0,4,11,6,1,6,4,8,4,8,3,5,1,9,11,11,10,1,3,3,9,8,7,9,8,8,10,10,6,9,9,4,2,9,8,0,6,11,6,1,2,2,3,7,2,0,7,9,10,10,11,2,1,9,4,1,5,7,11,7,4,11,0,7,11,5,4,2,8,11,3,5,11,5,5,0,0,5,9,5,3,9,4,4,2,9,3,1,0,3,4,6,11,4,4,11,5,11,0,6,1,2,9,0,2,6,2,5,0,2,4,2,8,
    10,5,7,3,1,2,11,6,9,7,8,2,0,6,4,10,6,9,4,3,1,7,3,4,5,5,6,9,9,7,5,0,11,8,11,7,7,3,11,1,6,3,10,4,8,11,6,2,4,11,7,1,1,11,6,4,7,4,6,4,1,8,0,0,8,9,7,0,3,2,8,6,6,7,0,10,2,8,9,7,2,9,4,5,3,0,4,11,0,8,9,10,3,8,4,11,8,4,0,3,3,4,1,6,8,9,10,10,6,8,1,3,2,0,0,8,4,8,3,3,5,3,1,5,8,4,9,0,
    11,2,8,0,7,6,7,1,2,7,8,9,9,6,0,2,7,6,4,1,5,11,9,3,5,1,6,4,4,2,3,4,9,4,10,2,6,11,11,10,1,1,3,6,5,1,7,2,7,10,1,0,3,9,8,7,8,6,3,0,0,4,2,4,7,10,5,11,0,5,1,3,5,2,9,11,5,10,1,8,11,8,0,0,3,6,11,5,2,3,9,1,6,4,9,4,7,11,10,11,6,11,0,9,7,4,1,4,1,8,9,6,6,6,4,0,1,9,11,8,1,5,8,7,2,2,7,6,
    6,6,1,2,2,2,2,0,6,11,7,11,5,4,8,1,8,7,3,8,11,11,10,4,0,2,10,8,6,2,3,1,3,11,2,9,10,7,1,5,7,4,5,2,9,10,5,6,0,7,6,8,3,0,10,7,11,9,5,8,10,1,3,11,0,7,7,1,3,4,3,6,9,8,1,9,1,10,10,7,2,8,5,11,2,0,3,5,11,7,5,1,3,1,9,0,0,5,10,10,1,10,4,6,4,9,6,3,1,6,11,5,10,11,1,3,8,7,5,1,7,4,2,6,7,7,2,2,
    11,3,9,7,4,10,4,0,4,8,0,7,7,5,11,9,8,6,10,4,2,0,10,10,3,10,11,1,2,5,9,1,5,9,0,9,8,6,10,1,7,0,0,4,10,11,1,8,6,8,2,10,5,0,7,2,3,6,7,6,0,7,2,1,1,2,2,7,3,10,10,11,6,4,2,0,4,3,7,5,2,10,4,7,5,6,1,8,5,7,4,8,1,5,10,3,2,4,10,9,1,1,8,10,3,0,6,5,3,0,6,1,3,2,2,11,11,5,3,5,10,9,2,0,10,9,4,4,
    11,4,8,10,1,3,1,4,11,4,11,7,8,9,7,4,3,1,2,9,4,9,5,8,9,5,1,5,10,4,0,9,9,2,8,6,7,4,11,4,10,7,9,4,2,2,11,2,5,2,10,3,6,3,11,1,9,5,11,6,8,4,6,6,1,7,8,5,3,9,8,11,6,5,0,1,8,11,1,1,10,9,6,5,0,1,1,4,8,10,10,1,5,0,6,9,6,0,1,4,0,3,10,8,3,2,11,11,8,7,5,10,0,2,3,3,3,6,10,11,9,6,10,3,10,4,1,4,
    11,10,1,1,0,3,0,0,0,9,9,6,5,1,5,2,8,7,10,3,5,3,5,4,10,2,9,10,1,11,2,5,5,8,7,3,5,6,5,11,10,11,9,3,9,1,5,8,8,10,0,3,3,1,10,0,5,8,10,9,6,9,4,10,7,5,9,4,6,8,5,9,0,4,0,7,9,6,9,0,6,5,11,5,0,10,11,8,11,0,10,8,3,4,2,0,5,7,6,4,5,4,6,8,10,7,5,10,8,4,1,6,9,7,11,1,6,8,5,0,3,2,2,3,10,8,3,10});
    return to;
}

QVector<qreal> MainWindow::getEndValues7() const {
    QVector<qreal> to;
    to.append({
    11,10,5,11,2,9,7,3,3,11,8,9,1,4,7,0,4,2,9,10,5,4,0,10,3,7,2,8,3,3,11,1,10,7,3,9,2,7,11,5,7,1,9,11,0,10,7,3,9,9,6,3,5,10,9,3,9,5,8,4,6,1,6,5,6,7,0,4,1,6,7,0,2,11,4,0,1,4,4,4,2,11,10,4,4,7,8,9,5,9,2,4,7,2,10,0,3,7,1,5,3,1,3,1,3,7,2,9,1,7,5,0,9,9,7,4,1,2,5,
    2,7,3,1,4,0,11,11,0,5,7,9,4,2,7,11,4,11,4,2,3,7,8,3,0,4,7,8,3,5,3,7,3,11,10,10,3,7,11,10,7,10,9,6,9,9,6,2,3,0,11,2,3,5,7,10,7,6,6,1,8,5,5,10,8,11,11,3,0,10,10,9,9,2,10,0,2,2,11,3,9,10,8,2,3,8,7,1,2,0,2,6,4,2,0,9,4,4,7,7,11,7,7,0,0,5,10,6,4,11,6,1,6,6,3,4,7,10,8,
    1,4,11,3,8,4,2,1,10,3,11,10,0,4,5,0,2,2,1,10,4,8,10,6,10,7,10,3,4,10,7,7,3,10,9,11,8,8,8,2,6,6,4,6,7,6,9,8,1,4,9,2,0,4,5,11,11,11,4,11,10,11,0,1,10,6,4,5,0,9,8,7,8,2,11,7,9,6,10,6,7,3,5,9,3,2,11,0,4,11,11,6,3,11,6,10,9,1,8,10,8,3,0,1,9,6,4,10,3,5,9,5,10,11,3,6,9,11,2,
    0,11,10,3,4,6,11,6,11,11,10,1,9,6,6,5,1,6,8,3,7,11,7,3,4,6,9,1,1,11,2,1,2,4,7,0,6,1,7,7,6,11,11,7,1,3,1,1,4,0,10,1,6,2,3,3,5,7,3,2,0,5,6,5,11,9,6,6,10,7,10,1,10,9,1,2,10,0,1,11,3,1,4,0,1,6,2,9,1,9,1,10,8,5,0,3,8,11,9,5,6,6,4,4,8,4,9,10,1,6,0,8,0,4,10,10,3,6,7,
    6,9,1,1,11,0,3,3,2,2,3,1,3,1,1,5,6,4,2,1,1,3,5,4,11,1,10,11,10,5,8,1,9,5,8,9,4,11,2,2,4,1,8,7,0,11,8,5,9,0,2,9,4,6,7,4,3,8,4,11,0,6,4,4,4,4,10,4,3,7,8,11,4,2,11,3,3,9,6,4,6,3,3,4,10,11,8,8,2,9,1,1,4,8,10,3,2,4,11,3,9,0,5,4,3,2,9,7,7,11,0,2,7,4,1,5,3,8,10,
    0,3,7,3,9,11,11,1,0,4,6,10,1,6,9,5,3,5,5,2,8,11,7,11,2,1,11,4,0,5,8,7,1,2,1,6,0,7,3,10,3,8,0,9,9,10,0,4,2,8,7,0,8,7,5,9,9,6,6,8,8,0,2,11,6,9,10,4,1,3,8,8,6,4,7,10,10,11,2,9,11,1,0,5,1,6,8,11,4,8,4,0,2,10,11,3,0,9,6,5,0,7,8,7,11,4,9,1,7,5,5,2,2,11,2,5,0,4,7,
    7,2,5,8,0,9,6,10,8,0,8,11,8,11,8,10,2,9,7,7,11,0,10,7,5,0,7,3,6,3,4,7,10,3,9,0,6,0,6,9,8,4,6,7,3,10,11,10,0,1,5,5,3,2,10,11,3,8,7,5,8,1,2,10,7,9,0,6,11,11,1,5,1,7,9,1,3,7,9,0,9,4,6,0,10,3,7,9,1,3,0,9,1,11,5,5,8,4,7,5,8,11,4,9,11,10,4,0,4,2,8,6,4,1,4,3,8,0,10,
    7,2,11,3,0,2,6,4,0,4,0,1,1,10,0,7,2,9,3,5,0,4,7,1,2,6,2,9,2,9,11,11,2,1,0,4,2,9,1,11,1,7,0,0,8,2,7,6,10,5,4,1,2,6,9,11,5,8,2,5,3,5,6,11,3,7,1,10,2,0,4,1,9,5,7,4,6,5,2,3,8,0,5,10,10,6,0,8,4,5,8,7,0,5,8,7,10,7,1,4,8,8,5,6,1,0,2,10,0,5,11,8,8,3,8,1,4,11,7,
    5,3,7,7});
    return to;
}

QVector<qreal> MainWindow::getEndValues8() const {
    QVector<qreal> to;
    to.append({
    3,9,4,5,6,3,3,9,3,0,5,10,8,0,8,1,7,2,5,7,5,1,11,4,10,3,2,5,0,3,5,9,7,4,1,9,6,0,2,5,6,6,0,6,4,4,10,10,9,5,1,3,0,6,0,9,7,2,1,2,5,8,11,9,0,3,9,6,11,10,4,6,8,9,6,2,3,8,5,0,3,0,1,2,11,7,5,6,11,6,8,2,4,9,5,10,11,6,9,8,9,11,11,11,6,7,2,5,4,4,10,6,11,4,4,7,1,
    5,10,3,3,5,3,9,9,6,6,5,0,2,1,8,4,8,10,9,10,11,5,1,7,9,5,7,9,3,0,5,5,10,10,4,4,2,7,9,11,4,10,6,9,0,10,11,10,2,4,3,4,3,0,0,6,10,6,7,0,3,8,3,11,1,4,11,0,7,3,7,8,1,4,2,8,6,9,3,7,4,10,3,0,1,8,3,6,9,11,0,5,7,5,11,10,0,5,1,7,1,6,5,5,11,11,2,2,3,6,9,9,1,4,9,0,3,
    5,4,2,11,0,10,8,5,6,8,3,4,8,10,4,1,8,9,1,9,11,5,0,7,11,7,5,4,6,2,6,1,0,3,10,3,2,11,5,4,8,3,8,7,7,0,5,7,9,1,3,10,3,1,2,11,8,0,10,2,5,6,11,11,10,7,11,2,2,9,5,1,4,2,9,5,10,0,3,2,7,10,11,2,4,10,5,5,3,2,7,0,5,1,3,7,9,1,2,5,9,11,10,6,8,3,0,4,9,4,11,8,0,2,8,1,5,
    10,4,11,3,3,7,10,8,5,0,11,10,2,2,7,9,1,11,11,3,4,1,4,11,7,11,4,7,0,3,2,8,10,8,4,10,10,7,6,10,2,0,8,11,3,3,7,4,2,6,5,5,10,1,3,4,4,1,7,4,4,11,8,5,2,2,2,0,8,6,2,6,6,2,6,4,5,9,4,5,2,5,6,7,6,2,9,2,6,3,10,7,7,6,7,2,0,8,11,1,10,3,5,9,4,4,4,2,11,2,4,1,10,8,8,3,2,
    0,5,7,1,3,8,9,4,9,11,1,4,0,7,10,1,1,5,9,1,10,6,3,2,2,8,9,2,0,8,8,0,8,5,10,11,9,8,10,1,11,6,9,0,6,3,0,5,11,5,8,6,1,0,10,4,5,9,0,7,7,0,9,4,8,1,10,6,2,1,7,1,7,11,7,5,7,10,0,4,9,1,10,4,7,10,4,5,7,1,9,4,5,6,11,2,4,11,9,3,6,5,5,9,7,3,11,2,1,1,4,8,4,10,9,0,7,
    6,3,11,5,11,6,5,1,5,10,7,8,10,4,4,7,1,7,8,11,0,7,0,11,6,9,7,8,7,0,5,9,5,5,3,7,10,0,11,6,1,1,1,4,0,6,0,11,8,5,10,10,2,2,0,4,6,10,0,10,6,4,7,2,4,8,11,9,6,11,4,5,6,6,7,0,11,2,1,4,2,7,2,4,2,1,1,5,5,9,2,10,9,1,10,1,4,10,9,11,8,0,6,3,2,7,8,10,3,6,9,11,4,9,6,10,3,
    10,7,10,8,5,8,2,5,0,5,0,9,4,10,7,6,9,0,4,6,0,0,5,0,4,0,3,2,5,11,11,9,1,5,7,10,9,3,6,2,11,0,1,0,2,1,3,9,9,1,4,1,5,6,1,7,1,11,5,1,9,6,4,5,3,10,7,7,5,0,3,6,5,4,7,9,1,5,7,5,1,2,4,11,0,8,4,8,10,11,3,1,11,10,0,6,6,11,4,6,2,7,8,10,4,2,3,8,3,5,6,4,8,3,10,0,1,
    11,6,2,5,3,9,5,2,9,1,5,4,4,2,4,1,9,1,4,4,2,7,10,11,5,4,7,3,8,2,11,7,9,5,8,9,7,8,0,2,10,6,4,11,11,6,1,10,10,6,10,3,5,0,2,10,7,4,8,5,7,10,9,3,0,5,1,1,7,5,0,11,8,9,5,4,3,1,7,0,10,8,4,4,1,6,3,7,1,2,1,8,2,4,6,11,5,7,11,1,9,9,0,8,7,3,7,7,7,5,9,10,11,7,6,2,9,
    5});
    return to;
}

QVector<qreal> MainWindow::getEndValues9() const {
    QVector<qreal> to;
    to.append({
    4,6,9,6,2,2,3,0,2,0,9,6,8,2,9,10,3,8,11,10,9,11,3,1,0,5,8,8,1,6,0,4,2,1,3,0,5,8,3,1,8,0,5,6,10,0,2,8,1,1,2,11,4,0,4,1,0,3,6,11,3,5,5,1,4,8,1,3,1,8,9,11,2,5,3,8,6,8,8,6,4,0,2,11,1,5,5,6,7,7,9,3,4,4,1,8,3,0,8,6,3,10,10,3,8,1,8,8,4,3,9,1,
    0,10,1,7,10,9,4,7,8,7,5,9,4,6,10,4,0,7,4,4,1,11,3,11,6,10,9,10,8,11,1,4,9,9,1,3,11,2,5,0,5,2,2,9,6,8,10,7,11,7,11,11,3,9,0,8,4,5,8,11,10,7,6,11,0,6,1,4,6,2,11,2,2,9,11,3,0,1,1,3,11,1,11,11,1,4,10,9,9,11,11,7,2,5,2,9,9,5,7,5,7,3,10,10,6,3,2,11,2,3,6,1,
    2,5,7,11,6,7,11,0,10,6,8,5,6,8,4,11,4,5,2,2,6,5,4,1,8,10,4,7,6,4,7,0,0,9,1,1,8,11,8,10,11,2,10,6,11,7,4,10,10,2,10,7,11,9,11,10,11,0,1,4,1,8,0,4,10,2,0,8,7,4,0,10,1,10,5,8,4,0,9,2,2,1,4,8,0,1,4,5,10,1,3,10,8,2,3,7,3,2,6,7,0,4,1,8,2,8,1,5,11,11,9,1,
    4,2,7,7,1,6,8,9,1,7,0,1,2,7,6,10,2,8,6,11,0,7,7,4,4,4,2,5,7,3,0,11,4,5,10,11,9,11,7,3,3,2,6,7,7,11,0,11,10,9,2,0,2,6,10,11,9,10,7,11,8,7,11,10,5,6,1,6,4,7,0,10,5,1,2,10,11,9,3,3,7,3,8,0,10,6,1,1,6,3,11,6,7,10,8,10,5,0,2,2,4,10,2,10,3,8,3,11,9,8,2,7,
    1,8,5,6,11,5,11,5,3,2,2,4,2,11,2,10,4,0,10,3,5,2,5,0,4,9,3,1,1,0,4,1,11,3,11,3,8,2,4,0,10,9,3,9,6,7,2,2,8,1,9,8,2,11,0,0,8,7,3,7,1,2,8,1,9,10,1,5,3,3,2,2,5,0,7,5,11,0,11,8,5,6,1,11,4,1,0,8,10,2,5,3,9,9,3,6,1,1,2,3,2,3,6,0,11,8,1,1,5,10,7,1,
    11,0,9,0,6,8,11,7,1,2,1,11,3,11,11,5,2,5,11,1,7,9,0,4,5,11,11,3,8,6,2,11,6,4,6,9,11,0,3,11,8,10,1,11,1,3,6,5,0,3,1,11,1,0,2,7,9,8,10,11,7,8,6,11,3,9,9,2,3,8,0,4,3,0,0,5,6,9,8,2,2,5,4,9,9,6,5,4,10,0,0,3,0,10,7,9,7,7,1,4,3,10,1,3,0,8,0,4,1,4,9,9,
    5,4,5,10,0,6,6,10,3,8,10,0,9,2,0,8,10,4,3,1,8,7,6,6,8,6,7,5,7,10,4,8,7,7,8,1,7,8,11,2,10,4,1,1,4,6,5,6,5,3,9,10,11,2,2,6,0,1,11,10,11,0,4,1,8,11,9,6,2,0,3,1,9,1,11,4,1,4,6,0,2,7,9,2,1,4,10,10,8,4,6,4,10,10,11,3,5,6,1,9,8,8,1,2,11,5,10,7,8,0,0,2,
    3,10,9,10,2,0,7,3,7,10,2,2,2,1,3,3,2,8,9,4,0,1,3,10,4,4,10,6,6,0,4,4,10,6,9,6,3,1,2,8,9,11,8,7,2,1,8,8,6,9,4,1,0,7,4,9,11,10,0,3,7,4,3,9,6,5,2,10,11,5,0,10,0,0,3,0,11,11,1,3,11,5,1,0,3,9,0,9,2,7,8,1,4,8,9,1,1,4,3,6,8,7,5,9,0,2,6,7,6,2,11,6,
    5,0,11});
    return to;
}

QVector<qreal> MainWindow::getEndValues10() const {
    QVector<qreal> to;
    to.append({
    10,5,8,1,0,8,3,9,7,11,9,11,5,3,3,3,6,6,5,7,9,9,10,2,4,0,7,4,0,6,2,3,4,2,7,7,9,7,2,4,9,10,4,1,9,6,6,5,11,9,8,2,7,8,5,4,7,2,5,4,4,10,5,0,4,2,3,7,2,1,9,11,4,4,2,9,10,7,8,1,1,8,5,4,9,11,5,4,3,0,2,4,1,0,2,8,7,5,11,9,5,2,1,9,7,6,1,1,2,7,0,4,9,8,9,3,3,
    10,0,3,3,6,0,2,8,6,1,7,4,9,11,11,8,11,7,7,8,10,8,6,1,2,2,2,7,6,2,8,9,1,2,11,4,6,11,4,7,6,1,8,2,4,5,3,5,9,9,8,2,11,0,11,0,10,5,10,0,11,4,10,10,1,3,0,0,11,7,10,2,9,10,5,7,0,8,7,2,4,6,1,6,6,3,11,3,6,4,11,5,3,0,7,2,11,11,10,8,10,11,10,8,4,11,11,7,1,0,9,7,10,7,7,9,10,
    6,10,5,3,1,9,3,4,8,10,4,1,5,11,4,2,3,5,4,2,3,5,3,10,6,8,3,5,11,11,1,7,3,6,6,2,10,4,2,0,10,6,2,6,0,9,9,10,8,1,3,3,4,9,10,4,6,0,6,0,8,2,6,9,11,5,1,4,2,0,11,7,3,6,4,6,1,5,8,1,10,8,11,5,3,9,0,10,3,9,3,2,3,3,9,4,5,2,3,0,2,11,1,2,0,6,7,2,1,9,11,5,9,5,1,4,11,
    8,5,1,6,6,2,0,7,1,0,4,8,8,4,7,9,4,8,3,11,11,10,0,6,9,4,8,6,5,3,6,7,11,4,10,3,11,0,10,8,11,1,6,6,10,5,8,3,3,4,0,1,2,7,10,1,1,1,1,11,10,11,3,0,3,6,2,7,7,6,8,10,10,11,0,3,6,6,2,11,0,8,8,6,8,1,1,0,7,7,4,7,9,5,2,7,7,10,6,5,3,1,11,0,4,2,7,4,9,8,4,8,5,11,1,5,4,
    10,9,3,8,3,11,8,5,4,2,9,1,4,3,7,1,0,6,2,4,4,4,5,8,11,10,1,5,4,11,3,3,0,10,3,6,3,10,4,6,5,3,5,6,0,9,4,6,5,3,4,9,8,4,8,2,10,8,5,3,1,8,1,0,10,3,1,11,10,5,3,10,5,2,2,8,7,7,1,4,6,5,7,1,5,4,8,9,6,5,4,2,5,5,7,10,4,8,9,7,7,0,6,11,1,8,7,6,7,11,10,8,1,6,4,3,7,
    3,3,5,11,5,7,10,11,10,1,9,7,7,6,8,8,4,6,1,4,7,3,10,2,1,0,4,0,3,9,11,0,4,4,6,2,7,2,9,5,11,11,5,0,3,8,6,0,11,9,3,0,1,9,11,7,9,4,9,1,3,1,5,5,9,6,0,1,5,0,5,8,7,3,9,4,0,10,10,6,1,7,0,7,2,9,0,3,5,10,3,5,1,5,9,8,3,3,8,3,0,9,0,9,9,8,2,8,0,0,10,10,7,1,0,7,5,
    3,2,5,3,7,11,9,7,4,7,7,2,2,8,11,6,2,9,5,0,1,10,4,7,8,3,3,6,9,6,6,1,2,11,3,4,1,2,11,8,10,10,3,6,5,2,10,3,11,5,4,0,3,2,9,9,9,11,2,2,8,6,11,8,1,4,2,5,10,11,0,6,1,3,6,5,0,6,3,3,5,4,0,0,7,3,11,7,10,1,0,9,6,4,0,2,3,3,3,10,3,2,2,9,3,0,10,1,3,2,7,0,1,8,8,3,9,
    10,10,5,10,0,6,10,6,8,7,0,3,10,11,7,3,4,1,5,5,2,2,6,4,10,7,4,1,10,3,9,8,8,10,4,2,9,6,6,11,1,6,4,6,7,5,10,6,11,4,6,6,1,4,9,8,2,4,10,9,0,11,7,2,2,10,0,6,6,1,1,1,7,1,6,9,6,8,8,0,5,0,4,10,4,5,9,5,1,9,1,0,11,10,6,10,6,8,1,1,0,9,4,0,8,1,5,6,5,8,3,3,7,10,10,10,8,
    10});
    return to;
}

QVector<qreal> MainWindow::getEndValues11() const {
    QVector<qreal> to;
    to.append({
    6,1,0,1,6,1,8,1,8,7,9,8,3,10,5,0,0,10,5,2,11,1,8,4,3,5,9,7,5,5,9,6,1,8,2,2,7,8,8,10,0,8,4,4,3,10,5,7,9,9,6,2,1,6,7,9,4,7,8,2,6,4,8,5,9,7,0,9,3,0,9,8,10,10,10,10,11,8,7,0,2,8,7,3,8,2,10,2,6,10,1,4,3,5,5,2,10,8,2,7,0,0,0,
    0,5,0,0,10,8,7,1,4,2,1,4,8,6,4,8,5,0,3,2,8,6,4,4,3,11,5,6,4,7,9,11,0,2,8,11,7,4,2,10,8,10,5,8,1,0,3,9,1,3,8,6,3,2,6,6,8,6,10,9,7,3,3,4,0,2,1,1,11,6,1,1,10,2,11,9,4,1,2,1,10,3,5,4,0,6,10,4,3,10,1,11,0,2,0,4,4,5,1,3,10,3,6,
    9,7,6,0,1,6,11,0,6,5,1,10,0,0,0,8,8,2,7,2,8,1,11,3,1,4,8,11,7,6,4,4,6,6,3,10,0,11,6,3,0,10,2,10,1,3,10,10,5,11,1,2,3,11,6,7,0,3,3,1,0,1,7,9,4,9,5,0,3,11,3,3,7,7,1,0,11,4,6,4,3,1,5,6,0,0,10,6,5,10,3,10,4,10,3,0,4,4,10,2,9,7,5,
    2,4,8,3,4,5,5,1,8,1,11,9,4,10,10,4,3,8,7,0,4,5,2,8,9,10,7,0,7,10,2,8,2,10,4,9,7,8,9,5,5,10,8,3,9,11,7,0,6,10,2,6,5,2,8,1,2,4,2,10,10,10,9,1,8,1,5,0,5,11,2,4,9,8,2,6,6,5,8,6,6,1,4,11,7,9,5,10,5,9,6,10,4,11,9,1,9,7,7,3,8,10,9,
    0,3,4,4,7,4,0,8,4,11,3,10,5,3,4,3,6,10,4,1,11,10,5,1,9,4,2,5,6,2,0,11,4,10,6,7,2,4,0,7,4,10,5,6,7,6,5,4,7,6,10,9,8,9,6,1,4,2,3,7,8,8,6,0,11,8,6,0,6,7,11,2,1,7,11,11,11,7,5,10,11,0,2,10,4,0,10,9,3,4,6,7,0,9,11,6,1,9,3,10,10,0,0,
    8,4,9,1,5,0,7,9,0,3,0,6,2,4,0,9,6,3,8,6,3,5,3,9,9,5,9,6,1,7,4,8,10,9,11,9,6,8,5,9,5,10,6,9,3,1,0,7,3,5,4,7,0,7,2,2,8,11,10,4,4,2,0,7,9,6,8,5,0,8,6,4,8,5,6,7,4,8,2,2,10,4,6,1,5,1,6,5,6,4,3,8,3,11,7,3,0,0,9,0,0,6,3,
    6,10,6,9,1,10,8,0,1,0,8,11,5,1,2,0,3,0,6,8,8,11,6,3,10,5,8,0,8,5,9,5,11,10,6,6,2,4,4,5,4,3,5,10,3,4,3,4,2,11,6,3,0,10,1,8,9,6,6,8,8,8,3,4,1,7,0,9,9,3,7,8,10,6,2,7,6,2,11,7,4,1,10,4,0,1,8,9,6,10,1,9,3,0,0,10,8,3,11,10,11,10,0,
    6,10,1,8,10,5,10,6,9,7,4,3,0,4,9,7,7,5,1,11,4,0,8,1,1,11,10,6,1,5,5,11,2,7,6,1,8,2,1,2,1,2,9,8,1,8,8,7,4,2,5,10,9,3,10,10,11,7,3,8,1,4,0,1,3,2,2,11,4,7,6,8,1,11,4,2,10,2,8,6,0,5,11,3,2,11,2,10,7,7,6,6,2,10,10,6,1,0,5,8,6,9,5,
    5,8});
    return to;
}

QVector<qreal> MainWindow::getEndValues12() const {
    QVector<qreal> to;
    to.append({
    10,9,6,8,11,3,4,11,5,0,11,5,1,3,8,2,10,2,3,10,5,3,3,2,8,2,10,3,3,9,4,3,6,11,1,2,0,10,10,11,1,7,7,5,11,8,1,0,1,1,4,8,9,8,11,7,8,4,9,5,9,1,4,8,4,0,7,3,7,10,3,0,0,9,4,9,7,11,5,4,11,1,2,3,8,10,5,7,11,1,2,0,0,10,6,1,4,1,0,8,0,8,1,9,2,6,0,10,1,11,6,2,10,7,9,5,7,11,9,6,
    6,10,4,7,6,4,1,9,9,7,7,11,9,0,2,4,10,5,9,6,0,10,5,7,0,6,6,2,2,3,8,2,9,3,10,1,0,0,5,1,4,4,1,7,8,9,9,0,4,6,0,10,8,11,5,6,2,11,0,9,8,3,3,5,1,4,8,11,2,2,8,0,5,8,10,1,4,9,10,11,4,2,5,0,11,9,8,6,0,3,8,10,8,0,9,10,5,8,10,3,0,8,9,11,9,0,10,5,9,4,3,9,7,9,8,2,9,3,5,3,
    5,9,6,10,7,6,6,7,11,9,11,4,11,8,3,4,10,2,3,8,1,3,10,6,3,9,10,3,2,3,5,7,11,2,6,11,6,9,6,5,2,3,5,5,9,7,3,11,7,2,1,0,9,11,10,10,7,0,4,10,6,5,9,11,7,1,2,8,8,4,0,4,3,1,7,3,6,0,8,0,4,5,1,5,5,8,1,2,2,7,5,8,7,6,7,9,6,9,4,11,0,0,1,4,3,7,5,4,10,10,11,4,9,5,1,1,2,10,1,1,
    3,11,4,1,0,2,6,2,0,3,1,8,5,11,6,3,4,5,11,11,10,10,3,2,1,7,7,11,5,10,8,2,3,9,8,10,6,2,5,9,7,7,3,3,11,7,3,0,3,8,5,4,7,5,7,8,9,10,9,2,1,2,3,0,11,6,7,5,0,10,7,6,9,7,4,6,11,8,5,11,3,1,3,6,3,7,7,10,3,9,3,6,3,11,9,10,4,10,7,9,7,3,10,4,10,0,2,1,8,11,3,1,10,4,5,9,5,6,9,2,
    5,6,1,10,5,1,0,1,1,5,2,7,6,4,2,0,3,6,11,9,4,8,0,1,1,7,5,2,2,3,7,3,3,5,8,8,7,0,1,3,2,8,6,1,6,10,2,2,9,7,8,10,4,6,10,9,9,8,9,4,5,2,3,0,0,10,6,0,4,8,0,9,2,11,8,10,3,8,9,0,7,3,4,0,7,4,7,0,11,11,9,11,1,5,2,6,8,10,10,1,5,0,0,8,1,2,9,5,3,10,0,9,4,3,2,1,4,11,6,9,
    11,10,11,11,5,11,11,5,8,11,9,4,7,9,8,4,7,6,2,3,5,9,10,10,9,3,4,2,11,7,4,7,3,5,2,9,6,10,10,5,9,11,2,5,10,4,8,3,11,8,4,0,8,2,4,4,0,6,3,1,7,9,7,2,1,9,1,9,10,0,5,1,7,11,10,10,11,10,9,3,7,2,9,9,1,9,2,7,4,5,5,8,9,11,5,9,11,3,11,5,2,10,2,7,10,3,10,0,8,2,7,5,6,9,3,10,10,1,8,4,
    3,6,11,5,4,8,8,6,0,10,5,3,9,5,4,2,7,1,6,6,9,10,8,9,9,6,8,9,8,3,0,11,11,6,2,4,10,5,2,3,1,4,5,5,10,5,6,0,0,7,5,3,9,8,4,0,11,2,2,5,0,8,11,2,8,0,3,0,11,6,3,1,6,1,4,7,7,6,11,9,10,7,6,5,11,9,9,2,9,2,9,7,1,5,6,9,3,0,10,8,10,11,6,4,6,7,11,4,7,7,5,4,2,2,5,4,6,11,5,8,
    2,1,10,7,0,10,2,10,7,10,1,0,7,8,10,1,1,5,5,11,1,9,11,10,5,2,11,1,10,8,0,2,2,1,10,11,6,6,1,8,0,5,6,10,3,3,5,7,4,3,2,1,3,11,0,7,10,7,7,6,0,7,3,8,3,0,8,8,3,5,0,2,6,8,2,4,4,11,5,2,10,0,2,5,4,10,4,10,9,4,2,0,4,11,5,0,6,11,8,2,1,9,10,11,2,2,4,7,6,0,9,0,8,3,11,9,11,1,1,5,
    8,4,7,2});
    return to;
}

QVector<qreal> MainWindow:: getStartValues() const{
    QVector<qreal> from;
    from.append({
    3,2,1,5,5,2,4,1,10,3,3,5,11,4,7,3,9,3,2,5,1,7,2,7,1,11,9,2,0,5,3,1,6,0,6,3,3,5,8,1,0,3,7,10,0,1,7,8,10,3,4,7,0,8,10,6,7,1,11,7,9,0,0,5,0,0,3,11,5,8,0,10,4,7,6,6,4,3,1,3,10,11,6,1,4,9,7,3,7,8,1,5,1,2,7,1,0,7,8,2,1,3,4,5,1,11,11,7,10,10,4,10,8,11,4,4,3,1,5,11,10,3,3,8,10,1,
    2,7,11,9,11,8,4,8,4,7,7,2,6,0,11,11,0,2,6,1,11,11,5,7,2,4,0,4,3,2,10,9,3,0,1,11,2,5,8,11,6,8,7,1,2,1,7,4,4,6,10,11,7,1,11,8,8,2,6,11,8,2,9,8,9,4,6,9,11,8,5,6,9,9,3,6,9,0,5,5,7,11,0,11,0,7,11,7,7,11,2,11,8,6,1,6,9,5,7,2,11,5,3,7,7,4,11,3,10,4,6,10,10,3,2,2,7,1,11,2,11,5,1,3,3,8,
    9,0,3,3,7,4,0,7,1,5,0,4,8,11,1,6,9,10,7,0,5,4,7,6,2,4,6,9,3,10,4,3,11,6,1,8,9,7,9,8,8,1,3,7,1,9,1,1,4,1,1,4,4,1,5,7,8,4,2,10,2,5,4,1,2,10,5,5,7,1,1,2,3,11,8,3,9,8,10,8,10,4,7,8,8,11,1,7,4,8,2,4,4,5,8,2,7,6,11,3,6,6,7,1,9,2,11,0,1,6,9,8,11,5,10,4,8,1,8,7,6,3,7,7,6,6,
    6,0,6,9,10,8,11,11,5,1,11,10,6,1,6,11,8,8,1,8,11,11,11,10,4,2,3,6,5,6,9,1,11,6,1,9,7,11,9,8,11,1,1,11,11,8,11,5,7,11,9,7,10,5,8,5,8,5,1,9,9,9,8,9,8,0,7,10,10,9,4,8,10,11,3,0,5,3,2,6,2,5,10,3,11,9,8,1,0,3,10,9,11,8,6,8,5,0,9,0,0,6,1,5,1,1,1,11,6,8,6,3,7,7,0,10,9,5,10,7,0,7,10,0,6,4,
    0,3,8,7,10,4,3,4,9,3,3,0,0,5,11,6,10,10,8,1,2,4,5,2,6,6,5,2,9,10,1,11,7,9,2,10,11,7,1,7,3,0,8,2,6,11,2,5,7,5,9,10,5,7,8,9,1,3,3,8,4,7,2,3,4,5,4,10,6,2,7,4,1,4,8,5,1,11,2,11,10,4,9,0,7,3,11,8,6,10,6,10,6,3,11,4,9,7,2,0,1,3,10,8,1,7,3,0,4,10,11,6,3,4,9,5,3,0,0,3,2,11,5,0,0,5,
    1,3,0,4,11,10,2,0,10,6,5,1,7,4,1,7,6,10,8,10,11,1,4,9,5,5,6,11,2,0,6,11,10,0,4,8,11,10,10,7,3,1,4,10,11,2,7,1,2,11,7,4,1,10,0,1,2,5,8,9,1,0,8,8,3,11,0,0,6,1,1,10,0,0,1,8,6,1,0,1,5,9,6,6,7,9,1,9,8,7,6,5,8,8,0,1,3,2,5,6,11,11,2,1,2,5,5,1,11,5,1,9,2,3,1,3,1,6,10,11,0,2,8,4,7,2,
    3,8,5,4,1,9,4,0,5,6,7,6,2,1,3,11,4,11,7,6,11,4,5,4,10,7,3,8,3,1,2,3,8,3,5,1,11,3,2,8,6,3,3,4,3,4,2,6,1,11,1,3,7,7,11,0,5,11,5,11,5,7,4,2,11,8,6,10,5,2,10,1,0,7,2,5,4,5,10,4,6,4,4,11,5,0,8,3,11,10,11,7,1,6,2,3,11,7,4,7,3,11,10,4,9,2,0,6,9,9,11,9,10,2,5,6,5,0,6,5,3,5,4,5,3,0,
    3,7,10,10,10,7,1,8,2,7,5,8,4,5,4,7,10,5,9,5,5,6,3,5,7,0,11,1,10,6,2,2,6,0,5,11,11,11,3,5,1,5,3,4,5,2,4,5,10,4,4,5,4,6,1,4,1,8,11,3,9,5,9,2,1,7,0,8,5,2,6,1,8,3,1,1,6,8,4,7,7,5,11,11,11,10,10,7,5,9,6,7,0,5,9,0,10,7,8,8,7,3,6,5,10,8,3,9,6,8,10,6,1,5,5,4,9,8,8,2,8,3,1,5,5,1,
    4,5,6});
    return from;
}

QVector<qreal> MainWindow:: getStartValues2() const{
    QVector<qreal> from;
    from.append({
    10,10,11,0,2,3,8,3,7,7,11,9,10,3,4,7,8,11,9,4,8,0,8,10,11,0,6,10,5,5,5,8,1,3,11,9,6,9,3,5,3,9,8,2,8,3,11,1,10,1,8,2,5,9,1,10,5,3,0,7,10,10,4,9,10,5,3,3,2,3,7,3,9,11,3,0,4,8,4,1,11,7,1,1,2,10,7,4,11,2,4,4,9,10,9,8,2,3,2,0,1,7,4,11,4,1,3,6,0,8,10,10,4,4,4,11,
    1,2,1,1,5,4,8,9,0,8,4,1,2,8,1,3,5,6,3,11,11,3,11,7,9,4,4,11,8,4,9,3,8,0,9,10,6,1,0,8,6,6,9,7,2,1,7,4,10,2,11,8,7,2,1,10,7,5,4,7,11,1,8,9,1,10,11,10,4,9,4,2,1,6,0,4,11,2,4,3,10,7,8,1,1,1,0,9,5,11,6,8,5,1,11,10,9,0,7,10,11,1,9,4,10,7,8,5,2,6,5,5,5,7,5,7,
    2,11,0,3,0,10,5,11,10,4,1,7,11,5,4,1,4,6,2,10,11,10,5,3,7,3,0,9,11,1,11,9,5,3,8,2,9,0,0,8,2,2,9,4,0,9,5,9,2,7,2,11,9,4,5,9,8,7,7,9,1,4,2,9,6,7,9,11,10,1,0,1,7,1,8,4,7,11,9,8,0,1,10,8,0,8,9,4,0,1,4,9,7,2,4,0,3,7,9,5,6,6,9,11,10,2,10,8,4,10,4,10,3,11,2,0,
    1,3,3,0,8,9,0,10,1,10,11,3,2,9,3,7,3,8,6,4,7,10,0,8,5,11,7,8,6,2,10,6,5,7,2,2,11,4,10,11,5,11,2,1,9,2,11,8,0,7,10,2,10,3,5,5,0,11,9,8,2,9,8,3,9,1,8,4,7,9,5,7,9,6,3,2,6,9,10,11,5,4,0,5,7,9,3,0,10,2,11,1,7,10,9,2,2,11,10,4,0,1,11,8,4,6,6,2,11,7,11,8,10,10,2,4,
    4,0,6,11,4,10,1,0,2,5,1,3,3,5,4,0,6,4,6,2,0,2,6,4,3,3,11,7,7,8,11,6,4,11,3,0,6,0,9,7,6,6,6,11,0,6,3,1,8,5,4,3,6,9,8,9,9,1,1,0,10,4,8,11,9,4,8,4,5,9,4,9,0,2,6,4,7,8,2,4,11,4,2,0,9,8,5,6,0,5,0,7,7,10,1,3,10,3,9,7,8,6,5,10,4,3,9,1,2,8,2,4,6,4,10,3,
    9,4,11,7,11,5,1,1,3,2,11,6,11,4,4,6,2,3,1,5,11,11,2,4,6,1,6,6,4,2,1,2,6,6,4,2,2,6,0,9,8,2,9,1,10,11,9,4,0,7,3,5,0,6,2,8,1,10,0,8,2,10,10,5,10,0,9,1,0,11,10,10,2,10,6,4,0,8,2,7,9,5,2,9,2,8,2,8,2,2,1,8,8,0,0,5,6,6,8,8,8,10,5,0,11,3,5,6,9,3,11,3,8,3,1,2,
    1,4,7,3,3,11,10,1,10,2,4,5,2,2,3,6,3,4,4,7,8,10,2,9,2,11,9,1,5,0,5,2,1,9,6,0,1,8,9,0,5,5,6,1,5,9,0,10,7,2,6,3,7,11,7,5,9,0,1,2,1,11,2,11,2,8,11,9,3,7,11,3,10,3,10,4,11,4,2,2,5,2,5,11,2,10,5,7,10,11,2,8,8,1,0,7,1,1,2,6,11,9,5,0,6,7,2,6,10,10,9,10,3,1,9,9,
    5,7,3,1,10,3,6,9,0,8,11,2,3,9,11,8,11,10,1,0,10,4,7,2,4,3,4,7,10,4,8,3,3,8,9,6,11,4,0,11,5,6,7,6,2,7,9,6,4,3,10,8,3,2,0,4,11,3,5,2,0,2,9,1,2,11,7,9,7,2,0,2,7,10,3,0,6,1,9,3,9,10,2,7,11,10,5,3,5,11,1,11,10,3,2,6,11,5,6,6,7,3,4,1,9,2,2,2,3,1,3,8,3,2,6,5,
    8,0,0,10,0});
    return from;
}

QVector<qreal> MainWindow:: getStartValues3() const{
    QVector<qreal> from;
    from.append({
    11,7,2,11,11,5,10,10,1,7,10,0,0,4,7,7,6,9,3,9,3,9,3,10,8,1,6,3,0,10,7,11,11,0,1,3,9,0,11,9,6,5,6,2,9,9,5,6,9,9,5,1,8,8,3,8,4,8,3,4,3,4,6,9,10,8,0,2,9,2,6,2,1,0,4,8,8,9,2,6,10,1,11,4,10,10,10,2,9,10,3,5,0,9,4,9,8,5,2,8,8,0,5,9,8,5,1,7,11,8,3,5,2,9,6,6,8,9,11,10,7,2,3,10,4,11,
    2,0,2,3,5,5,11,7,1,0,10,6,0,4,11,2,6,5,6,6,7,11,1,6,5,1,3,11,10,0,4,1,9,7,11,9,3,3,6,1,0,2,4,10,4,11,10,8,0,0,8,3,9,6,10,8,9,7,0,7,11,7,7,4,10,5,11,7,1,10,11,10,6,7,11,6,5,2,11,11,1,7,0,10,2,4,11,11,6,6,1,4,4,4,7,7,2,1,9,4,8,11,4,10,11,6,1,8,1,3,11,8,2,3,1,7,5,0,0,3,8,6,11,10,4,8,
    5,9,4,2,7,6,8,8,1,7,7,11,1,8,4,5,10,8,8,0,2,0,0,0,8,7,0,8,6,9,8,1,9,2,5,4,10,8,10,11,11,8,7,4,9,11,2,11,7,4,10,8,6,1,9,3,10,3,5,3,3,4,3,4,10,9,7,7,6,6,4,9,7,6,8,2,2,5,7,3,9,8,1,5,4,5,9,2,2,0,11,3,2,6,3,2,1,10,9,1,9,3,11,7,6,9,5,2,0,3,5,11,9,7,11,3,8,4,1,3,1,6,1,11,7,8,
    5,1,2,10,2,10,6,2,3,8,5,9,6,3,5,0,11,10,9,5,3,11,11,1,10,2,8,8,11,4,4,6,7,7,9,0,11,3,6,2,1,9,3,10,1,7,11,6,5,8,10,11,4,1,11,8,7,3,8,5,0,1,10,6,6,7,2,7,11,7,1,6,3,0,2,2,4,2,1,8,11,10,9,1,11,4,0,1,10,7,3,10,7,2,3,6,1,4,6,8,7,2,0,3,4,4,2,8,1,0,3,6,7,4,1,9,0,1,2,7,1,6,5,0,1,5,
    10,11,0,2,6,0,8,6,11,9,8,1,1,6,8,8,7,5,7,6,9,2,0,9,3,8,3,5,8,11,3,3,5,9,2,7,4,5,5,0,8,11,1,6,3,2,1,0,6,7,1,3,4,5,9,5,1,7,8,7,8,7,1,6,6,4,5,9,4,6,4,11,4,5,2,7,6,1,11,4,0,0,4,4,5,5,0,5,4,6,7,10,7,11,1,7,5,2,3,1,2,9,2,3,11,8,0,7,9,10,2,1,2,9,6,2,5,4,5,1,1,9,6,10,7,7,
    2,4,10,2,4,8,11,11,11,8,6,6,0,7,3,5,7,0,8,7,9,4,8,10,4,7,1,10,6,8,5,5,1,0,5,6,2,8,0,11,7,4,9,6,11,10,5,11,3,6,5,6,2,11,1,11,1,0,8,0,7,1,11,3,1,5,8,0,9,6,7,9,1,6,3,3,8,9,7,8,1,6,0,9,3,10,4,6,11,6,6,11,0,7,4,7,5,2,1,6,6,3,4,5,4,3,7,8,6,10,3,2,0,8,6,4,5,0,5,11,6,9,8,9,11,10,
    5,9,9,7,0,2,4,7,1,9,7,3,1,4,10,9,3,6,9,11,11,6,7,6,11,10,8,10,9,6,8,2,1,2,7,8,0,5,1,0,1,11,11,2,2,10,8,3,2,9,10,7,0,7,5,10,0,2,3,0,9,10,9,3,9,10,1,11,9,0,11,0,6,4,11,1,2,9,2,0,7,7,6,8,10,2,0,4,0,5,3,4,8,7,1,11,9,8,11,7,6,10,0,1,8,5,4,5,5,3,1,5,5,6,4,11,3,1,9,4,8,11,11,8,8,7,
    8,1,7,10,11,8,0,3,11,8,10,4,11,4,6,11,0,11,5,0,6,8,11,2,5,5,3,1,2,4,4,4,3,5,3,5,10,2,8,6,8,4,10,3,8,6,3,11,0,11,5,9,6,0,1,10,7,2,11,10,2,6,7,7,11,8,11,2,2,3,8,0,11,6,4,11,0,6,7,2,5,7,5,6,9,7,1,2,8,3,9,1,1,9,0,1,9,7,9,1,0,7,1,5,7,5,3,1,5,11,11,11,5,8,6,7,8,2,11,1,5,9,3,5,11,2,
    9,11,4,9});
    return from;
}

QVector<qreal> MainWindow:: getStartValues4() const{
    QVector<qreal> from;
    from.append({
    10,5,6,5,11,9,6,2,6,0,5,6,1,1,11,7,10,6,2,4,11,5,8,9,7,7,2,1,1,0,2,10,6,9,10,9,0,10,5,6,2,4,5,9,10,6,11,8,7,3,10,1,2,4,8,2,10,0,11,2,2,5,8,2,5,11,7,7,9,5,2,9,1,5,2,7,1,4,2,4,5,1,2,7,6,8,7,2,1,4,6,3,7,2,5,9,4,9,1,8,1,11,1,6,6,10,9,10,7,0,7,6,7,2,9,9,7,1,8,10,6,8,1,8,10,3,1,7,10,5,3,
    11,8,9,9,7,10,4,3,6,1,6,4,4,7,9,4,1,9,1,9,6,11,6,1,5,1,9,6,10,7,10,4,2,1,7,1,2,10,0,3,2,2,8,10,9,11,7,6,3,0,5,6,5,7,9,9,9,4,4,8,2,8,10,3,9,1,8,7,7,2,3,2,7,9,6,1,7,5,7,8,10,6,5,6,2,1,5,0,5,5,5,11,4,9,9,9,3,10,3,3,3,1,7,9,1,0,4,6,9,10,5,6,4,0,11,0,10,10,5,11,3,10,11,3,0,0,8,1,8,11,10,
    2,0,8,9,6,3,9,0,10,10,9,10,2,7,4,3,10,3,10,11,7,6,0,7,3,8,2,2,7,3,6,1,0,5,6,5,8,3,5,1,1,11,7,9,6,6,6,2,0,9,0,9,2,1,7,10,10,6,5,10,5,7,1,4,0,1,8,5,2,5,10,8,9,8,1,5,5,9,3,7,9,10,5,7,2,5,5,10,4,9,9,10,3,9,0,5,0,4,7,11,4,1,7,4,10,9,2,3,10,4,2,0,5,0,2,11,4,6,1,0,8,8,8,0,7,5,9,3,2,2,6,
    3,6,2,9,8,2,6,9,11,7,8,6,7,5,0,4,0,7,5,5,9,2,4,5,3,6,10,4,7,8,4,10,3,11,8,5,1,3,7,3,9,9,7,0,8,9,1,6,6,9,11,9,2,0,0,3,5,8,3,0,9,9,4,11,8,4,8,1,3,0,2,10,9,4,7,8,0,0,0,5,7,10,11,6,9,5,7,9,5,0,3,1,1,2,9,10,7,6,3,7,3,10,5,11,4,4,6,10,10,9,4,10,1,10,2,5,8,6,10,9,9,5,1,3,7,2,6,5,8,4,4,
    3,3,2,8,10,6,6,8,2,3,4,2,7,10,3,11,7,1,6,3,0,9,2,7,6,10,9,1,4,4,8,4,1,3,7,5,1,5,9,7,2,5,6,0,4,3,6,4,8,4,3,2,5,1,10,11,2,7,5,11,3,5,11,7,4,1,6,3,6,6,5,11,1,7,4,9,8,10,3,8,6,9,3,7,6,8,4,4,6,10,5,0,5,3,11,8,1,5,6,9,5,9,8,8,2,9,5,0,2,11,7,10,0,10,8,7,1,5,5,5,10,2,0,10,6,9,6,5,3,0,10,
    7,11,2,0,5,6,11,0,4,10,1,1,10,7,10,1,5,10,11,8,2,3,3,3,3,7,2,5,7,10,3,2,6,8,1,9,6,10,5,9,3,1,1,3,6,6,6,9,9,4,11,3,0,0,7,10,2,1,5,8,5,3,7,4,8,4,1,1,11,4,9,2,6,0,10,2,5,4,5,7,10,10,2,6,9,5,5,8,4,10,8,9,9,4,9,3,6,2,11,0,11,9,9,5,10,8,9,1,4,11,11,4,2,11,9,9,7,5,5,9,4,10,1,4,4,0,5,10,4,1,5,
    6,6,7,3,8,11,5,7,8,10,6,10,4,1,9,1,0,2,8,6,9,0,10,4,4,10,6,8,11,3,6,8,0,4,10,10,7,10,9,1,4,11,2,5,1,8,2,10,10,9,8,0,7,2,4,5,0,6,7,11,11,3,9,11,8,2,3,3,11,0,2,10,1,6,7,0,6,6,10,2,0,7,1,2,3,3,0,11,11,8,7,5,8,6,9,2,3,7,11,0,8,2,0,1,5,6,11,1,9,3,2,5,5,0,4,7,0,8,10,11,0,4,2,1,7,5,5,10,9,8,1,
    1,10,10,7,0,7,1,1,3,5,0,5,7,8,11,6,2,8,1,5,0,7,2,4,5,0,3,9,8,3,8,1,5,3,7,9,3,2,0,10,5,10,4,11,0,10,10,5,3,1,11,5,3,0,6,5,1,10,8,6,0,3,5,9,10,4,2,11,4,2,6,8,10,7,6,11,5,3,4,3,10,6,4,2,9,4,9,7,11,5,11,3,7,7,11,9,2,9,1,1,3,5,7,4,7,0,8,2,3,9,3,1,8,9,0,11,7,0,2,5,10,4,11,7,7,4,11,0,2,9,5,
    8,2,7,1,2,3,10});
    return from;
}

QVector<qreal> MainWindow:: getStartValues5() const{
    QVector<qreal> from;
    from.append({
    6,8,5,5,2,2,2,11,3,0,6,11,4,0,1,4,8,0,10,6,10,7,3,3,6,3,7,11,9,5,3,0,1,4,6,4,3,6,5,9,8,1,9,1,3,11,7,3,9,9,11,4,1,4,2,11,6,1,0,6,7,3,1,6,1,0,9,11,4,5,0,4,1,5,7,10,10,5,6,6,8,1,9,6,2,0,6,4,2,3,2,5,2,4,0,6,6,4,11,1,7,3,4,0,1,4,1,0,2,7,6,8,6,4,10,11,10,
    11,10,10,11,5,3,2,6,8,7,5,5,7,0,5,4,5,9,0,5,4,2,4,2,0,5,11,7,2,8,4,7,8,10,9,3,11,9,3,4,4,3,8,8,4,4,11,6,9,4,7,5,2,9,7,2,1,0,3,8,6,0,9,10,0,11,10,6,1,10,1,2,10,10,9,0,4,1,8,10,1,2,0,8,10,9,4,1,8,6,10,6,8,11,4,1,2,1,7,6,10,10,11,4,3,10,6,9,10,5,4,5,6,4,10,10,2,
    6,10,8,9,11,6,5,11,5,0,1,11,11,4,1,11,1,3,10,10,8,6,8,6,0,2,8,2,11,10,10,9,11,6,7,7,10,2,2,2,4,7,3,10,3,5,8,4,5,0,11,2,6,1,2,3,6,11,11,9,8,3,9,10,0,8,10,10,3,6,11,11,11,11,1,7,0,3,1,11,4,0,10,8,10,5,8,4,1,1,8,11,2,7,2,9,2,11,7,5,11,6,8,4,0,2,10,1,10,11,5,4,1,10,8,0,9,
    9,4,2,8,5,4,2,10,10,7,5,1,6,8,8,3,2,6,2,4,4,9,0,8,5,7,11,1,1,4,7,7,11,2,4,1,10,1,4,7,7,9,1,0,5,8,5,1,3,7,0,3,2,3,6,0,6,1,0,2,9,1,8,0,0,10,6,6,1,5,1,6,4,11,4,6,10,8,7,7,1,7,10,5,0,9,3,5,1,7,4,1,11,2,9,6,11,11,9,8,11,5,3,7,10,6,3,10,4,5,2,11,1,11,1,4,2,
    9,3,4,3,1,0,5,6,3,0,2,9,8,11,3,5,7,2,11,3,3,11,7,3,7,4,2,4,9,6,2,0,1,3,7,3,11,1,2,2,0,4,11,6,8,4,11,5,6,8,1,10,6,8,0,6,10,0,7,8,7,6,8,8,8,1,4,6,1,1,5,8,8,2,0,9,6,4,4,3,4,5,9,4,11,3,11,5,10,10,8,1,11,9,4,2,9,1,8,0,10,10,6,10,2,8,11,9,10,5,6,0,8,4,7,10,4,
    8,11,9,10,10,10,2,2,4,7,5,5,0,6,9,3,0,6,0,11,3,4,11,10,6,8,11,3,2,11,8,1,6,6,2,6,4,9,6,5,1,3,7,7,0,7,7,1,11,10,0,3,4,3,9,9,3,4,7,11,0,9,1,1,5,2,8,3,6,7,8,9,0,5,10,5,1,1,9,7,7,8,11,0,11,8,4,6,2,9,0,0,0,6,9,9,2,10,4,9,11,5,9,2,5,6,6,0,6,9,9,3,3,6,5,1,2,
    8,8,2,6,0,3,5,7,3,10,6,4,7,5,2,0,5,7,6,7,7,4,10,0,0,0,8,2,9,11,9,11,0,4,0,2,2,3,3,8,0,9,7,8,9,11,0,1,9,4,8,1,10,1,8,11,1,3,9,8,5,10,4,9,0,5,6,10,0,0,6,2,5,7,0,0,8,7,0,7,10,3,3,10,9,5,1,1,4,4,9,0,2,11,11,1,9,0,9,1,3,3,0,7,8,8,8,4,3,4,4,1,9,7,1,8,5,
    0,8,11,6,11,0,5,7,8,7,11,8,8,8,2,0,5,11,6,2,0,4,1,8,11,2,7,11,0,9,9,6,11,9,11,5,0,7,8,5,3,0,11,3,7,4,10,1,7,3,8,2,4,6,5,10,2,0,1,6,2,6,9,10,5,8,0,9,7,1,2,7,11,7,9,4,9,10,3,11,5,9,1,4,8,9,10,7,1,2,0,10,10,4,7,2,8,11,7,6,8,4,5,3,4,7,8,3,3,5,6,5,4,3,4,10,5,
    1,8,4,3,3,9,9});
    return from;
}

QVector<qreal> MainWindow:: getStartValues6() const{
    QVector<qreal> from;
    from.append({
    7,10,8,6,1,5,2,2,6,10,2,8,9,11,2,3,11,10,2,0,5,5,10,10,7,0,5,0,1,1,5,8,1,4,10,3,7,7,1,9,5,7,3,3,5,9,2,3,7,3,1,7,2,2,6,8,7,4,11,5,6,11,3,8,8,7,7,0,6,10,9,6,3,4,7,9,3,5,1,0,7,9,2,6,9,5,11,1,8,9,9,7,11,8,2,9,5,10,6,10,7,6,11,9,8,1,5,1,0,9,8,1,9,6,8,9,9,5,0,5,4,9,8,2,2,2,10,7,
    9,1,9,7,2,2,7,1,9,7,2,11,2,2,10,5,2,3,8,5,11,3,3,0,2,5,7,7,2,9,1,1,2,8,6,3,6,11,11,9,5,4,4,9,2,6,7,10,11,11,3,0,0,5,3,4,6,1,6,7,8,11,10,2,4,0,6,0,3,5,8,10,0,2,6,7,8,5,11,8,9,11,5,6,3,5,8,10,1,10,10,3,4,2,4,5,11,3,0,1,3,4,4,7,2,0,0,3,10,10,4,7,2,5,8,11,9,0,2,3,3,0,4,8,5,11,5,5,
    2,11,11,5,5,9,8,3,8,1,10,7,9,7,0,1,7,3,9,5,2,11,7,1,4,10,7,2,4,11,6,8,1,9,10,0,8,7,8,7,4,10,6,10,5,5,0,6,10,2,8,8,3,2,1,3,1,9,8,0,2,7,7,1,9,11,10,2,11,3,10,10,3,4,8,5,6,6,5,5,4,5,7,6,7,8,3,2,8,11,11,11,7,11,10,8,11,9,3,7,11,2,10,8,1,11,2,1,3,9,6,0,8,2,8,6,0,6,2,5,3,5,8,3,0,0,10,8,
    7,1,0,8,11,9,0,0,5,8,3,0,8,1,4,11,11,7,10,11,1,8,10,10,1,5,2,2,8,10,11,10,8,11,3,8,3,7,9,6,9,0,10,4,11,10,0,3,9,11,9,6,5,1,10,6,11,4,2,9,5,1,11,2,3,6,11,8,10,4,6,8,11,6,2,0,9,7,3,4,1,5,10,8,11,4,9,3,6,1,8,9,7,3,4,1,6,1,9,6,0,9,6,3,2,0,7,5,5,0,2,3,5,9,8,3,11,8,3,7,4,10,2,11,4,10,10,10,
    2,11,8,5,7,11,10,8,10,3,10,0,7,1,1,10,10,0,2,2,1,5,4,8,10,0,5,10,0,8,11,11,2,10,9,4,11,3,5,2,9,0,7,3,2,3,6,9,6,8,0,2,4,1,8,3,10,3,0,7,9,9,7,1,9,9,6,4,9,7,10,5,11,3,5,3,7,2,5,3,11,4,1,1,7,2,8,0,3,2,4,7,5,9,4,2,7,2,5,11,7,0,11,10,1,6,9,0,3,2,5,11,3,4,10,7,7,2,1,0,1,1,6,1,4,6,3,7,
    4,11,1,0,0,4,3,9,7,7,8,10,8,7,4,4,7,11,11,6,8,7,1,2,9,7,2,0,11,8,5,8,6,5,6,6,10,1,7,10,3,11,7,7,7,4,10,10,0,10,6,7,2,6,6,7,2,1,9,0,4,6,0,5,10,6,1,0,11,5,0,8,1,5,3,6,9,1,5,4,5,6,7,9,4,2,3,11,2,6,5,4,4,0,1,5,10,2,0,10,6,9,4,1,6,2,0,2,4,6,9,0,11,6,4,5,10,9,7,8,6,11,6,7,2,10,0,5,
    6,1,9,8,0,0,7,8,6,2,9,11,1,7,3,8,8,10,1,3,7,6,8,7,7,10,7,3,0,3,9,11,2,0,6,9,4,0,6,3,4,6,2,11,5,4,10,4,4,11,4,0,9,5,3,11,3,11,1,11,4,6,1,3,0,10,1,10,11,4,0,1,8,10,9,9,3,4,8,9,5,11,11,7,11,8,7,5,3,0,5,7,11,10,3,2,4,4,0,10,2,2,3,2,1,11,9,0,4,4,2,5,5,11,1,10,11,9,6,9,2,7,3,11,11,11,3,9,
    3,0,9,0,6,8,2,5,7,4,5,3,7,5,4,3,5,10,6,10,4,11,1,0,0,4,8,6,5,1,1,6,6,5,10,5,7,0,10,1,6,8,11,9,2,7,8,10,6,7,1,9,10,6,8,10,6,4,11,2,7,1,7,11,3,0,10,11,3,11,8,0,6,3,8,9,3,0,0,10,9,3,8,2,5,2,8,4,5,5,9,5,7,11,0,5,8,2,1,6,8,8,7,10,6,2,4,3,9,7,2,5,4,11,1,11,9,5,0,9,11,1,0,5,11,0,11,11});

    return from;
}

QVector<qreal> MainWindow:: getStartValues7() const{
    QVector<qreal> from;
    from.append({
    8,3,3,0,5,1,10,5,11,1,5,8,10,11,0,1,5,10,6,1,0,10,9,1,10,3,10,5,11,7,7,8,2,11,8,4,4,3,3,9,3,0,11,6,4,7,3,10,4,10,1,1,2,8,5,2,10,0,10,11,10,6,0,1,1,3,9,0,6,1,11,2,4,5,9,9,0,6,5,6,11,5,3,6,0,4,3,1,0,3,1,11,5,7,8,6,11,5,4,8,0,11,2,11,11,6,7,7,7,1,4,11,2,11,2,7,3,10,11,
    3,3,10,0,9,9,2,7,10,10,8,8,1,10,8,4,8,1,1,1,7,9,5,4,10,8,2,10,4,7,0,10,7,5,1,7,0,6,3,9,1,5,1,10,3,0,2,5,5,4,1,8,8,4,2,3,10,7,10,4,4,11,6,4,9,6,8,5,2,4,11,3,10,3,9,10,9,8,4,2,1,5,11,5,5,10,2,9,0,5,5,10,10,1,4,2,11,5,8,5,7,0,10,9,11,7,8,8,5,3,0,9,10,10,0,9,4,3,2,
    7,1,5,9,9,3,7,3,9,0,9,5,6,11,2,10,4,0,8,4,2,5,4,0,3,9,0,1,6,4,9,9,6,2,10,0,6,1,10,1,5,5,7,10,0,9,5,0,10,5,5,3,9,7,1,2,7,0,7,0,7,0,9,10,0,3,10,11,3,11,7,2,6,4,2,6,7,4,3,3,6,2,0,5,11,6,1,5,9,7,7,3,6,0,0,9,3,11,6,1,5,4,2,7,8,2,2,6,11,7,4,9,11,7,1,9,0,3,6,
    4,8,5,2,5,3,7,10,3,2,2,9,6,8,9,10,0,2,10,8,5,4,10,9,11,4,7,10,3,0,0,7,3,3,8,11,7,9,10,8,2,5,8,3,0,6,7,10,8,8,3,6,3,9,8,11,11,6,9,4,11,0,10,10,2,3,11,5,4,5,1,2,6,10,2,1,7,8,4,5,8,4,3,11,8,2,7,7,5,5,8,8,4,4,4,4,4,2,6,4,11,4,2,0,7,2,11,2,11,5,1,7,11,8,2,6,1,7,4,
    10,2,6,3,8,6,8,0,5,3,1,4,5,8,3,11,9,8,11,4,2,6,4,8,3,10,1,4,8,8,10,2,4,2,1,4,11,3,1,7,0,11,10,6,6,8,10,9,5,2,7,10,0,11,2,2,9,11,9,0,7,11,7,11,1,10,9,2,7,11,4,10,3,5,10,11,6,8,3,0,7,4,5,9,5,3,9,1,9,0,7,0,7,3,8,0,4,11,0,8,3,5,10,5,4,0,8,0,11,0,1,4,2,10,9,8,0,4,2,
    3,1,9,7,6,3,1,9,4,10,4,5,11,11,2,10,6,0,3,5,0,5,5,1,11,8,1,0,3,6,6,10,4,8,2,5,10,10,1,11,11,11,9,11,4,6,5,7,11,5,11,1,0,9,11,7,3,3,9,4,9,10,0,0,4,5,11,3,6,7,2,7,10,10,4,1,5,2,0,0,0,3,5,3,6,3,1,5,11,2,6,9,11,9,4,6,1,10,4,9,3,3,1,6,10,5,11,11,8,0,2,5,6,2,8,11,6,0,10,
    1,9,9,1,9,2,0,6,6,3,5,9,1,6,5,5,3,7,8,11,1,4,7,3,4,3,10,6,10,2,2,9,8,5,1,10,7,1,1,11,4,8,0,9,2,3,4,3,6,0,8,0,8,4,7,9,2,6,10,0,1,10,6,1,9,0,9,3,6,9,11,11,0,2,2,6,6,6,2,8,2,11,3,3,8,6,5,7,4,6,8,0,0,10,9,2,3,3,10,9,7,1,7,4,3,1,7,10,5,5,3,9,7,6,6,11,10,9,6,
    3,7,1,1,9,4,2,3,6,8,1,7,8,3,1,5,9,0,7,7,4,5,3,5,9,3,6,0,8,7,5,10,5,3,3,7,7,1,6,9,2,10,1,8,6,8,9,8,6,7,7,8,7,2,7,8,10,5,1,10,2,2,4,4,1,1,9,8,7,9,8,9,10,7,9,0,2,3,8,7,4,4,2,5,8,8,8,5,3,0,11,11,2,8,3,0,9,5,8,1,10,3,8,11,10,8,11,4,7,1,6,5,6,8,1,6,1,0,0,
    1,1,6,6});
    return from;
}

QVector<qreal> MainWindow:: getStartValues8() const{
    QVector<qreal> from;
    from.append({
    1,4,1,8,3,10,8,4,8,6,9,3,2,3,9,2,6,0,4,11,4,7,1,9,9,2,6,0,11,0,6,5,8,0,4,0,8,1,6,3,4,3,3,4,7,3,0,7,1,8,0,9,4,1,7,4,6,0,3,8,4,2,10,6,7,7,8,7,9,2,0,5,6,6,10,5,2,7,4,5,0,11,8,8,6,1,4,7,2,7,1,10,10,2,0,6,0,1,3,11,6,3,0,8,3,6,1,9,10,10,6,3,0,9,6,2,2,
    4,2,6,5,3,9,2,8,1,3,8,2,8,8,9,8,9,8,6,11,7,9,9,0,7,0,11,11,8,7,11,10,0,6,1,0,1,4,3,8,8,11,0,1,11,1,3,11,7,7,6,7,10,3,11,9,7,4,8,1,0,11,2,0,0,0,9,4,5,5,6,0,8,8,4,9,0,7,4,6,3,11,0,1,6,0,9,11,3,6,9,0,2,9,3,2,8,10,0,6,5,0,8,10,2,8,11,6,4,3,6,1,10,8,4,2,6,
    8,11,6,3,7,8,0,8,7,2,2,6,5,9,8,4,10,8,2,0,9,4,2,8,1,5,0,0,9,5,0,6,2,2,11,6,9,6,1,7,9,11,3,11,5,4,7,3,8,7,6,11,9,5,5,1,6,11,0,9,10,8,3,4,11,4,8,11,1,3,0,3,1,9,4,4,2,7,5,1,2,0,5,1,3,3,9,7,5,7,4,10,10,0,2,5,10,0,9,10,6,3,5,3,0,1,6,8,5,2,2,2,9,8,5,4,7,
    11,8,10,2,11,6,3,9,7,11,1,5,1,11,5,8,7,7,8,4,2,0,3,7,3,7,11,5,7,0,1,2,2,2,10,5,9,6,5,5,3,10,0,3,5,2,1,5,7,3,7,4,11,8,0,5,2,10,4,3,6,4,11,11,8,10,11,2,0,0,5,4,9,3,9,10,2,5,9,3,10,2,7,3,9,5,3,6,1,6,11,9,0,9,1,11,11,10,6,8,5,5,6,5,8,1,11,7,1,4,10,10,5,7,10,9,6,
    3,9,0,4,9,0,5,6,5,8,10,5,3,2,1,5,2,7,4,6,2,7,4,8,0,9,10,11,5,7,7,8,1,10,3,5,5,2,4,10,3,7,5,4,1,9,7,6,3,4,0,0,3,7,2,0,0,8,3,6,1,6,8,9,2,9,5,5,9,4,2,11,6,0,5,11,0,2,3,8,1,4,4,10,2,5,0,3,3,3,8,11,8,9,9,6,8,5,4,6,5,9,9,5,0,8,10,10,9,2,11,3,3,5,0,10,0,
    8,0,4,7,10,10,0,9,8,4,3,11,9,5,5,9,4,10,0,8,3,10,2,2,0,7,4,6,0,6,3,7,10,8,0,10,1,5,6,11,4,2,8,1,8,2,1,6,5,4,1,6,0,4,6,10,8,4,6,8,9,10,0,6,2,3,4,2,10,1,7,6,11,9,1,1,10,6,0,6,8,10,10,3,1,6,2,10,6,4,9,0,2,0,4,10,10,2,10,7,4,5,5,1,10,2,3,9,1,5,11,1,0,6,7,3,10,
    7,1,9,4,4,9,6,3,1,1,6,10,6,8,9,0,8,2,7,3,1,11,1,9,1,3,9,4,6,1,7,5,2,3,10,3,7,0,9,0,0,4,5,2,8,6,9,0,1,11,8,7,4,8,7,8,8,4,0,5,6,9,6,1,8,1,6,11,7,7,5,0,8,6,6,1,6,8,2,2,6,3,8,7,3,11,2,0,0,1,1,5,9,0,4,5,4,9,9,11,1,4,4,7,9,10,4,5,9,8,5,10,11,8,6,9,11,
    8,3,10,3,1,11,9,0,7,0,10,9,11,9,9,7,7,10,9,6,0,9,1,7,0,1,3,8,9,6,5,1,3,3,4,7,2,3,7,9,2,11,3,3,10,4,4,0,4,9,7,8,6,4,11,5,6,1,4,11,11,4,5,2,5,0,6,5,11,0,11,7,11,10,4,6,7,4,3,6,2,11,0,2,7,8,11,4,2,0,10,9,5,2,2,5,10,8,8,6,5,0,8,6,8,4,5,0,3,10,11,9,2,5,0,8,0,
    10});
    return from;
}

QVector<qreal> MainWindow:: getStartValues9() const{
    QVector<qreal> from;
    from.append({
    2,7,8,10,0,8,0,10,10,3,3,3,1,10,2,4,9,10,1,3,1,9,10,11,5,1,7,5,9,5,7,0,3,7,7,9,4,7,8,5,7,3,3,7,8,9,5,2,9,4,4,3,0,8,11,5,8,6,3,10,8,8,7,5,2,9,3,2,6,3,0,9,6,6,1,11,5,6,7,3,5,7,11,2,7,9,4,8,5,9,0,6,11,8,8,4,0,11,4,2,0,8,8,10,11,8,6,7,3,1,11,4,
    1,7,10,11,3,4,5,0,0,6,3,1,7,8,8,2,4,3,7,5,2,8,9,8,1,6,11,6,0,7,11,8,10,8,11,7,0,8,0,7,8,6,7,6,3,7,5,8,5,8,9,8,0,5,11,5,1,2,9,6,6,11,10,4,11,10,9,5,5,4,1,3,4,11,0,1,6,10,5,11,6,9,3,8,9,0,8,0,7,4,4,10,0,4,3,11,5,2,3,1,0,11,7,7,3,6,0,3,10,2,0,8,
    9,8,2,1,4,8,4,7,11,7,0,3,11,9,10,5,0,4,0,0,9,1,9,2,4,11,0,8,10,10,2,5,5,11,6,7,0,5,4,7,2,8,6,9,7,2,6,9,3,10,0,8,4,11,0,1,6,1,9,5,8,11,1,2,0,7,6,10,1,7,2,1,3,9,3,7,1,4,11,3,7,8,5,4,3,4,7,2,0,10,4,6,7,7,7,2,10,4,9,8,7,10,0,6,0,6,11,0,5,3,7,7,
    6,4,4,8,9,4,9,8,10,5,9,6,5,5,5,0,7,7,5,9,10,2,2,8,5,10,1,9,9,4,8,5,3,9,3,1,4,8,0,0,5,11,3,0,11,2,11,7,6,5,7,8,6,8,3,10,7,11,6,10,5,9,7,1,0,9,2,4,7,11,9,8,1,11,4,0,9,5,6,0,8,9,7,5,4,10,10,9,0,10,6,5,6,0,9,1,1,11,8,8,6,5,1,5,8,7,8,2,5,9,8,6,
    6,9,6,9,4,11,4,1,11,8,5,8,8,7,9,3,6,1,6,11,8,6,7,2,10,7,6,11,8,4,7,10,1,11,10,1,1,8,6,9,8,3,6,2,3,8,3,10,5,3,5,1,7,3,6,7,9,2,10,10,4,11,9,5,0,2,10,10,4,4,6,0,1,6,0,6,2,2,10,2,10,1,0,3,3,8,11,10,4,11,11,2,5,6,0,10,8,7,4,10,3,0,2,8,8,3,6,5,10,2,0,10,
    5,2,6,11,7,4,1,8,11,8,7,4,5,0,10,3,0,7,10,4,0,2,10,7,7,9,6,0,2,7,6,8,7,3,2,4,1,9,2,4,2,9,3,2,8,10,8,6,11,8,10,3,5,7,4,10,11,5,5,8,1,0,10,9,11,0,0,5,8,11,4,9,0,5,2,11,5,8,2,9,3,8,3,4,2,1,4,7,1,10,10,2,3,2,5,4,6,1,8,6,8,6,8,5,10,4,1,1,4,2,7,6,
    8,0,7,0,7,0,7,2,9,6,4,9,11,8,9,4,5,1,5,7,0,8,0,0,9,1,6,1,5,8,7,1,2,9,2,0,0,9,8,5,3,7,0,11,7,11,11,5,2,0,10,8,7,4,11,8,1,2,7,3,2,7,5,5,11,4,4,11,1,7,6,0,1,8,2,1,2,10,0,11,11,9,0,11,3,10,7,9,6,0,3,1,2,4,2,11,11,3,4,2,2,6,4,6,7,11,3,11,1,11,10,8,
    2,7,1,1,1,4,9,0,6,7,1,8,3,4,10,2,3,11,1,10,6,3,2,0,1,8,5,1,8,7,10,1,8,2,8,7,4,3,1,5,11,1,10,3,0,9,5,3,3,3,2,0,4,9,10,1,2,4,4,6,10,8,11,11,0,2,6,6,6,10,9,2,9,11,10,9,4,7,0,5,1,7,3,5,11,8,11,0,6,6,0,8,7,5,3,10,3,6,9,8,1,10,1,1,6,8,9,1,10,10,4,4,
    4,6,10});
    return from;
}

QVector<qreal> MainWindow:: getStartValues10() const{
    QVector<qreal> from;
    from.append({
    1,2,3,4,1,3,9,7,4,7,3,8,0,9,9,5,8,1,0,0,4,7,4,5,8,10,1,8,1,7,9,5,7,8,6,0,8,11,9,8,3,9,10,11,6,11,2,10,0,5,1,0,1,7,7,7,5,6,6,2,10,5,9,1,11,3,11,10,9,4,4,0,8,1,1,4,5,2,6,10,10,9,0,6,2,3,10,3,6,2,8,5,8,9,9,3,5,9,3,4,4,3,10,8,0,5,10,2,9,9,1,7,6,4,0,6,2,
    8,2,1,7,9,9,4,9,2,2,10,0,0,9,1,10,8,5,11,11,8,1,3,0,6,6,11,2,0,4,10,1,0,5,3,8,0,10,9,2,0,8,1,3,7,9,6,1,7,4,7,7,7,1,6,4,2,1,1,9,9,3,7,0,0,8,9,11,4,11,1,9,1,4,1,5,8,3,5,9,7,0,7,7,7,0,8,0,11,7,8,6,8,3,9,11,9,8,5,5,9,1,8,11,9,6,8,2,10,9,5,0,6,4,2,8,11,
    7,2,10,6,4,8,1,11,9,8,10,2,3,9,11,8,1,0,0,1,11,8,9,2,8,4,9,11,10,0,6,8,6,7,1,11,1,8,4,3,4,0,10,7,1,8,5,3,6,8,6,11,1,2,0,10,0,2,4,4,11,8,5,2,0,8,10,7,7,11,10,11,4,10,1,9,4,8,1,9,0,9,3,10,10,8,11,1,11,4,2,6,4,6,5,11,6,5,7,7,4,1,2,1,8,5,3,0,11,0,8,4,6,2,8,9,8,
    5,10,4,10,11,9,6,10,11,2,2,1,0,5,4,6,10,5,7,7,2,9,7,10,8,6,6,8,11,2,5,3,0,9,1,5,5,1,3,10,6,0,10,5,1,8,2,2,1,11,6,10,11,9,8,11,7,2,4,10,7,10,8,4,11,3,11,6,6,5,1,6,1,8,1,6,2,10,10,9,11,7,6,9,11,2,4,7,1,9,7,5,7,6,5,5,8,1,2,11,11,3,2,2,11,1,2,3,5,0,2,2,4,9,5,3,0,
    3,3,0,5,7,10,11,4,5,0,0,8,10,5,6,5,8,2,6,0,8,7,10,5,1,0,11,6,9,6,8,7,10,8,7,0,7,4,7,10,4,0,9,4,4,0,8,5,6,2,11,2,7,0,0,5,7,9,0,5,4,3,6,1,11,8,0,4,9,0,4,11,6,7,1,4,9,9,4,10,3,0,5,4,6,0,10,1,5,3,0,1,7,9,1,4,7,0,2,2,3,11,7,1,10,4,0,9,4,6,3,11,7,3,3,4,10,
    2,0,10,10,8,9,8,8,9,9,7,8,8,2,9,11,3,0,11,11,10,2,9,3,11,11,11,6,5,0,4,6,8,5,5,3,10,1,2,6,10,7,6,11,10,0,3,9,4,7,9,1,10,6,7,2,7,2,11,4,6,7,10,6,0,3,7,6,10,1,0,9,2,4,0,1,7,3,11,1,11,3,7,4,4,0,6,4,2,3,10,3,4,2,2,9,1,4,3,2,5,5,4,10,0,11,9,7,9,2,0,2,0,2,4,0,2,
    9,11,1,11,9,7,11,10,0,2,0,4,6,3,10,0,10,11,0,11,3,4,7,9,4,9,2,8,0,4,2,9,8,4,10,0,8,7,4,4,8,7,8,5,0,8,0,9,3,2,8,3,4,9,10,6,1,1,9,6,3,0,8,10,9,7,4,2,2,0,1,2,2,7,5,9,5,9,2,6,3,9,11,3,9,8,2,10,9,4,9,3,5,3,8,11,10,6,11,4,7,5,7,4,11,11,4,6,9,11,9,9,3,3,0,11,2,
    1,7,1,2,3,3,0,8,4,1,7,8,2,0,0,8,9,3,7,10,1,10,0,6,8,2,11,5,9,4,1,1,7,2,7,0,2,4,4,0,10,1,5,7,1,1,1,10,6,8,3,4,2,6,0,4,1,5,11,3,10,3,9,3,5,3,9,10,1,3,6,6,10,7,9,5,8,0,0,6,7,3,9,4,6,10,11,0,5,11,10,6,7,0,0,3,9,6,6,8,9,10,3,9,4,7,4,10,8,5,10,9,8,11,9,2,1,
    9});
    return from;
}

QVector<qreal> MainWindow:: getStartValues11() const{
    QVector<qreal> from;
    from.append({
    0,0,4,6,8,6,11,4,4,6,10,10,11,11,7,7,8,4,4,4,2,10,2,5,6,10,6,4,8,2,1,1,5,11,11,6,4,5,1,7,10,3,0,5,0,3,4,8,10,3,11,11,5,9,3,2,7,10,7,5,4,9,5,9,10,3,6,2,8,1,8,5,5,11,6,9,1,3,5,4,9,9,11,5,5,11,6,1,5,6,4,2,11,1,2,6,4,11,0,8,4,3,6,
    10,10,10,6,11,4,3,0,3,4,10,1,4,0,5,9,0,2,4,7,7,8,8,6,6,9,11,4,11,10,3,2,7,0,5,10,11,0,9,7,9,7,1,5,0,2,10,0,2,4,9,8,7,7,4,9,9,9,8,1,4,2,10,2,5,0,3,6,1,4,3,2,0,0,8,7,11,7,1,5,2,5,4,9,8,9,4,1,11,9,0,0,2,1,2,3,2,3,9,1,6,10,11,
    0,10,8,3,5,2,5,1,4,3,5,9,4,8,10,0,11,11,4,0,4,2,10,4,10,8,10,3,3,10,1,1,9,10,11,5,8,3,9,10,9,0,6,9,2,9,6,9,0,7,10,9,9,2,11,0,7,1,1,10,8,6,0,11,6,11,6,3,8,7,8,0,1,10,9,10,2,5,3,8,9,3,2,4,3,7,2,1,1,8,4,2,3,3,8,11,10,2,3,6,8,4,2,
    11,1,5,11,10,0,1,0,0,8,5,7,6,8,8,11,4,7,6,7,2,10,7,1,8,8,11,7,11,0,9,7,8,8,11,2,0,3,0,10,1,8,5,10,8,6,0,10,7,8,3,0,6,6,3,6,9,10,3,2,7,3,6,6,2,0,4,5,4,9,5,2,7,0,10,7,10,10,2,2,5,3,10,5,4,2,9,4,11,7,3,4,2,4,11,6,6,3,10,6,6,5,1,
    8,10,1,1,1,3,2,4,0,4,9,7,0,5,1,2,10,1,5,2,1,1,9,9,1,2,10,9,5,11,2,6,5,1,5,3,11,5,10,4,5,8,3,8,11,2,4,11,1,7,1,4,1,4,11,6,2,10,10,11,0,11,2,3,3,6,0,7,7,11,0,6,8,11,5,8,2,0,4,4,8,4,11,2,3,6,3,4,2,9,1,0,3,0,0,11,7,1,4,11,7,6,5,
    0,2,3,2,9,6,4,1,7,0,8,0,3,10,6,8,8,7,7,7,6,10,6,7,10,6,3,11,7,1,6,0,1,1,2,1,3,6,10,0,2,6,8,1,9,10,10,4,10,6,5,1,6,4,1,5,5,3,9,7,6,5,7,8,11,10,5,0,2,2,4,2,1,9,3,10,11,10,7,0,4,6,10,11,1,4,8,7,2,5,5,11,7,2,4,9,5,3,5,11,7,8,8,
    7,1,3,3,8,6,6,3,6,6,1,2,8,10,1,8,1,6,7,3,3,4,8,10,6,7,7,11,0,0,0,1,0,8,10,4,3,10,10,7,5,0,8,4,8,10,5,8,5,10,10,0,9,11,6,4,7,5,0,3,1,7,0,6,10,5,2,11,10,8,1,4,11,5,9,6,8,6,9,2,9,7,6,8,5,11,3,11,10,4,7,11,5,10,1,2,2,7,2,8,6,4,8,
    8,4,10,6,8,9,3,9,3,8,5,8,4,5,3,9,8,7,9,2,10,9,2,2,11,6,2,8,8,11,0,4,0,5,0,11,7,3,11,4,3,5,2,0,3,6,3,9,5,7,7,4,2,0,3,4,8,8,0,9,8,5,6,7,0,9,5,7,5,6,7,3,11,8,11,10,1,10,3,9,7,0,7,5,9,0,10,8,11,4,4,1,4,7,3,7,3,5,8,10,1,0,6,
    9,6});
    return from;
}

QVector<qreal> MainWindow:: getStartValues12() const{
    QVector<qreal> from;
    from.append({
    3,5,3,0,0,6,1,6,0,5,9,6,9,10,3,3,5,3,11,2,2,7,8,10,5,4,6,4,4,6,5,0,11,8,11,5,7,3,3,7,0,8,6,8,4,3,0,8,11,6,8,1,5,11,1,0,6,5,6,11,5,5,1,4,7,5,3,1,8,2,0,6,9,6,2,1,1,5,10,9,3,6,6,8,5,7,9,0,3,4,8,4,3,8,5,8,9,8,3,7,9,7,10,0,7,3,9,2,10,5,9,1,3,0,7,6,11,10,5,9,
    9,11,7,9,5,8,2,1,4,0,5,8,3,6,0,7,7,1,5,8,3,1,3,3,7,10,3,5,0,11,5,10,4,11,0,8,9,11,8,2,5,3,9,3,7,4,0,1,11,2,6,1,6,3,4,4,8,6,5,2,4,8,8,7,7,8,7,8,9,11,4,6,9,11,5,10,5,0,2,6,5,10,1,8,2,0,4,4,5,4,5,8,11,4,6,9,2,2,4,4,4,5,4,9,2,1,5,4,11,9,10,1,1,0,4,4,8,1,3,9,
    2,2,5,4,10,2,1,9,1,10,9,6,4,1,0,7,1,4,0,5,8,4,6,7,9,0,4,5,1,5,9,1,2,5,0,2,7,0,3,10,11,8,8,8,1,0,7,9,4,0,8,4,2,0,11,1,9,2,11,5,10,1,1,5,2,5,4,10,4,10,5,3,4,6,3,1,0,2,0,10,8,8,8,4,4,10,6,7,6,6,7,2,9,5,9,7,5,5,2,6,7,7,9,10,4,11,0,5,9,5,1,0,2,11,10,3,6,0,7,8,
    10,3,1,9,1,11,1,8,8,9,11,1,6,8,3,8,5,3,5,2,1,3,6,1,6,9,3,3,9,2,10,10,7,0,9,6,9,8,0,10,6,6,7,6,7,4,6,2,0,4,8,1,0,1,2,1,0,9,1,4,0,7,2,11,4,2,0,1,1,0,4,10,8,9,7,9,8,11,9,0,6,8,2,0,5,0,10,4,4,4,9,10,7,4,2,0,6,3,1,10,3,6,11,5,0,6,0,7,9,8,10,4,1,6,10,8,11,8,6,1,
    3,9,2,2,11,7,2,11,5,8,6,9,10,1,7,4,5,5,5,5,2,9,10,11,10,11,11,9,10,6,4,4,10,9,0,6,10,4,2,6,10,9,4,6,0,4,3,8,8,11,7,0,5,11,11,0,0,2,3,7,7,6,2,2,2,11,0,11,9,11,8,7,4,1,3,6,11,9,4,5,1,8,11,4,6,1,1,4,5,2,2,8,6,10,10,0,5,2,2,2,7,10,5,4,0,10,8,1,4,6,8,0,7,8,3,11,8,2,2,1,
    5,1,7,4,3,9,1,3,5,4,7,10,0,1,2,10,10,11,3,9,10,8,9,8,5,4,5,5,4,8,7,2,0,7,8,2,5,7,4,4,3,1,10,9,0,8,7,11,4,2,10,2,5,9,6,7,5,3,10,4,1,11,1,7,5,10,10,8,5,5,8,8,2,7,2,1,3,3,5,10,8,11,1,5,11,5,4,0,0,2,0,10,1,4,7,10,7,7,3,6,1,8,3,4,1,11,0,4,10,10,0,10,8,8,4,11,2,8,7,0,
    7,9,0,9,8,9,9,4,1,2,3,4,1,2,1,0,11,11,8,2,3,0,2,11,3,0,5,2,5,8,7,1,1,4,5,7,5,4,4,5,11,1,7,2,7,1,0,5,9,6,11,5,6,7,3,7,7,6,0,0,6,6,7,11,10,8,8,4,1,3,4,7,11,2,2,9,3,8,9,1,7,3,4,9,9,5,6,10,1,7,0,9,10,8,5,2,10,11,3,2,6,3,11,11,5,8,0,11,8,10,4,8,8,6,6,8,8,8,9,2,
    1,8,7,0,4,7,4,5,9,4,8,2,3,3,11,9,6,0,9,5,7,5,7,6,3,4,10,5,2,1,2,10,4,11,11,8,7,5,10,5,6,0,5,1,7,9,3,11,10,4,7,11,7,2,4,8,3,10,3,10,6,5,7,1,4,7,5,9,5,0,2,10,1,6,9,1,9,6,6,10,2,3,4,10,1,9,10,1,8,6,8,10,11,8,1,7,2,3,7,8,11,1,5,6,7,9,11,1,7,3,4,2,4,9,5,5,1,2,11,0,
    9,1,9,7});
    return from;
}

QVector<qreal> MainWindow::getYearValues() const{
    QVector<qreal> year;
    year.append({120,124,113,132,120,153,149,100});

    return year;
}

QVector<qreal> MainWindow::getYearValues2() const{
    QVector<qreal> year;
    year.append({141,96,116,140,136,108,125,71});
    return year;
}

QVector<qreal> MainWindow::getYearValues3() const{
    QVector<qreal> year;
    year.append({108,108,110,133,121,135,166,131});
    return year;
}

QVector<qreal> MainWindow::getYearValues4() const{
    QVector<qreal> year;
    year.append({147,99,125,121,140,136,173,114});
    return year;
}

QVector<qreal> MainWindow::getYearValues5() const{
    QVector<qreal> year;
    year.append({133,110,93,84,102,136,163,122});
    return year;
}

QVector<qreal> MainWindow::getYearValues6() const{
    QVector<qreal> year;
    year.append({133,124,122,107,127,133,170,108});
    return year;
}

QVector<qreal> MainWindow::getYearValues7() const{
    QVector<qreal> year;
    year.append({85,123,108,117,130,119,162,112});
    return year;
}

QVector<qreal> MainWindow::getYearValues8() const{
    QVector<qreal> year;
    year.append({124,105,116,114,130,117,94,137});
    return year;
}

QVector<qreal> MainWindow::getYearValues9() const{
    QVector<qreal> year;
    year.append({79,92,111,131,132,122,136,96});
    return year;
}

QVector<qreal> MainWindow::getYearValues10() const{
    QVector<qreal> year;
    year.append({112,125,135,88,124,127,96,130});
    return year;
}

QVector<qreal> MainWindow::getYearValues11() const{
    QVector<qreal> year;
    year.append({101,88,106,134,118,80,104,95});
    return year;
}

QVector<qreal> MainWindow::getYearValues12() const{
    QVector<qreal> year;
    year.append({129,104,135,109,156,104,127,100});
    return year;
}

#define databas2 }
MainWindow::~MainWindow()
{


    delete ui;
}


#define Interface {


bool d = false;
bool deal = false;

void MainWindow::on_pushButton_clicked()
{
d = true;
bool intensity = ui->radioButton_Intensity_2->isChecked();
bool flow = ui->radioButton_Flow_2->isChecked();

endd();
startt();
m_hotelFlow->rootContext()->setContextProperty("Test2",this);

if (intensity || flow) {

ui->pushButton_4->setEnabled(true);

}

m_minval = ui->comboBox_Start_3->currentIndex();
m_maxval = ui->comboBox_End_3->currentIndex();

}

void MainWindow::on_pushButton_4_clicked()
{
    if(ui->radioButton_Intensity_2->isChecked()){
        openWindow();
        ui->yearBox->setCurrentIndex(0);
        ui->graphWidget->setCurrentIndex(1);
        ui->label_3->setVisible(true);

        deal = true;
    }
    if(ui->radioButton_Flow_2->isChecked()){
        if(deal){
            ui->horizontalLayout_3->removeWidget(m_hotelFlow);
        }
        ui->horizontalLayout_3->addWidget(m_hotelFlow, 1, nullptr);

        ui->graphWidget->setCurrentIndex(2);
    }


}

void MainWindow::on_radioButton_Flow_2_clicked()
{
    if(d){
        ui->pushButton_4->setEnabled(true);
    }

}

void MainWindow::on_radioButton_Intensity_2_clicked()
{
    if(d){
        ui->pushButton_4->setEnabled(true);
    }

}

void MainWindow::on_radioButton_Tracking_2_clicked()
{
    if(d){
        ui->pushButton_4->setEnabled(true);
    }

}



#define InterfaceEnd }

#define Timer {
void delay()
{
    QTime dieTime= QTime::currentTime().addSecs(2);
    while (QTime::currentTime() < dieTime)
        QCoreApplication::processEvents(QEventLoop::AllEvents, 100);
}
#define TimerEnd }

QString MainWindow::endd(){
    monLimE = ui->comboBox_End_2->currentIndex()+1;
     qDebug() << monLimE;
     QString s = QString::number(monLimE);
    return s;
}

QString MainWindow::startt(){

    monLimS = ui->comboBox_Start_2->currentIndex()+1;
    QString s = QString::number(monLimS);
   return s;
}

#define BarGraph {
void MainWindow::openWindow(){
    //setting up basic values


    m_hotelEntry->setTitle("Total People");
    m_hotelEntry->setLabelAutoRotation(30.0f);
    m_hotelEntry->setRange(0.0f,20.0f);
    m_hotelEntry->setTitleVisible(true);

    m_yearAxis->setTitle("Year");
    m_yearAxis->setLabelAutoRotation(30.0f);
    m_yearAxis->setTitleVisible(true);

    m_monthAxis->setTitle("Hotel");
    m_monthAxis->setLabelAutoRotation(30.0f);
    m_monthAxis->setTitleVisible(true);

   // bars->setHeight(100);
    //bars->setWidth(100);
    bars->setValueAxis(m_hotelEntry);
    bars->setRowAxis(m_yearAxis);
    bars->setColumnAxis(m_monthAxis);

    m_primarySeries->setItemLabelFormat(QStringLiteral(" @colLabel @rowLabel: @valueLabel"));
    m_primarySeries->setMesh(QAbstract3DSeries::MeshBevelBar);
    m_primarySeries->setMeshSmooth(false);

    monLimE = ui->comboBox_End_2->currentIndex()+1;
    monLimS = ui->comboBox_Start_2->currentIndex()+1;
    monthFin = monLimS;

    //m_hotels << "Burj Al Arab" << "J.W. Marriott" << "Atlantis The Palm" << "Beverly Hills Hotel" << "The Plaza" << "Taj Mahal" << "Kimpenski" << "Ritz Paris" << "Caesars Palace" << "Claridge" << "Hotel Del Cornado" << "Raffles Hotel Singapore";



     m_hotels << "Claridge" << "Atlantis The Palm" << "Beverly Hills Hotel" << "Caesars Palace" << "The Plaza" << "Ritz Paris" << "Burj Al Arab" << "Taj Mahal" << "Hotel Del Cornado" << "Raffles Hotel" << "Kimpenski" << "J.W. Marriott";
     m_years << "2011" << "2012" << "2013" << "2014" << "2015" << "2016" << "2017" << "2018";

     m_hotels.removeDuplicates();
     m_years.removeDuplicates();

     m_yearAxis->setRange(m_minval,m_maxval);


 //Sets up the bar graph
    MainWindow::resetHotelData(m_primarySeries,m_secondarySeries);

    bars->removeSeries(m_primarySeries);
    bars->addSeries(m_primarySeries);  //adding in seperate row
//    bars->addSeries(m_secondarySeries);
    if(!deal)
     container = QWidget::createWindowContainer(bars);

    //ui->tab_2 = container;


    ui->verticalLayout_6->addWidget(container,1);

    //bars->show();
}


void MainWindow::resetHotelData(QBar3DSeries *primary,QBar3DSeries *secondary)
{
        // [5]
        // Set up data
#define dataBase {
    //FIRST MONTH
int UAE[8][12] = {
    {18, 2, 20, 6, 5, 20, 20, 10, 13, 14, 9, 15},
    {10, 10, 0, 20, 20, 1, 3, 4, 16, 0, 10, 13},
    {15, 3, 18, 12, 15, 8, 11, 11, 18, 4, 7, 5},
    {19, 17, 6, 3, 2, 0, 20, 17, 17, 3, 11, 8},
    {12, 8, 13, 3, 17, 5, 11, 17, 7, 16, 11, 12},
    {0, 0, 0, 15, 10, 4, 1, 17, 12, 10, 3, 18},
    {11, 16, 6, 14, 16, 11, 15, 15, 3, 2, 19, 3},
    {19, 3, 8, 18, 2, 16, 16, 5, 18, 11, 16, 5}
};

int USA[8][12] = {
    {16, 20, 6, 4, 2, 13, 18, 7, 17, 15, 2, 0},
    {13, 13, 5, 16, 13, 16, 5, 1, 3, 17, 13, 9},
    {1, 8, 11, 7, 13, 8, 10, 8, 2, 9, 19, 17},
    {18, 2, 18, 18, 5, 7, 16, 19, 15, 5, 6, 3},
    {7, 7, 8, 19, 0, 15, 15, 17, 16, 2, 0, 14},
    {13, 12, 12, 12, 20, 18, 6, 7, 14, 20, 8, 11},
    {10, 18, 18, 3, 16, 8, 9, 18, 2, 9, 20, 18},
    {4, 3, 8, 19, 11, 18, 15, 0, 4, 12, 2, 4}

};


//! SECOND MONTH

     int USA1[8][12]={
         {5, 16, 11, 11, 12, 16, 16, 9, 9, 8, 15, 13},
         {6, 8, 1, 14, 11, 3, 2, 20, 2, 4, 9, 16},
         {8, 15, 15, 20, 18, 16, 2, 11, 5, 0, 2, 4},
         {13, 11, 2, 20, 9, 5, 17, 9, 11, 16, 14, 13},
         {20, 7, 8, 0, 13, 9, 18, 12, 7, 16, 20, 6},
         {10, 12, 11, 6, 1, 13, 5, 15, 14, 2, 16, 3},
         {20, 16, 1, 8, 13, 5, 9, 17, 17, 0, 14, 5},
         {0, 0, 5, 14, 0, 8, 8, 11, 1, 10, 10, 4}
};

     //MONTH2
     int USA2[8][12] = {
         {11, 0, 12, 11, 12, 13, 0, 12, 10, 17, 1, 9},
         {13, 8, 6, 9, 14, 3, 4, 20, 2, 12, 17, 0},
         {16, 15, 0, 14, 1, 16, 14, 0, 4, 2, 8, 20},
         {16, 9, 8, 10, 6, 12, 17, 19, 6, 19, 2, 9},
         {14, 18, 3, 9, 9, 0, 20, 14, 13, 2, 2, 17},
         {8, 20, 14, 20, 2, 14, 17, 0, 16, 1, 20, 3},
         {16, 18, 20, 0, 20, 11, 9, 17, 15, 17, 15, 8},
         {7, 3, 14, 6, 12, 17, 9, 18, 19, 8, 12, 6}
     };

     //MONTH3
     int USA3[8][12] = {
         {9, 1, 9, 19, 14, 11, 5, 20, 20, 15, 17, 7},
         {6, 4, 8, 9, 19, 6, 12, 10, 13, 6, 0, 6},
         {19, 11, 17, 0, 18, 1, 1, 11, 16, 7, 15, 9},
         {19, 11, 4, 6, 0, 20, 4, 11, 15, 10, 15, 6},
         {19, 2, 9, 16, 11, 20, 2, 16, 19, 8, 6, 12},
         {15, 13, 14, 20, 4, 5, 4, 12, 14, 12, 6, 17},
         {20, 11, 19, 16, 19, 1, 13, 15, 16, 12, 14, 17},
         {9, 0, 16, 12, 2, 12, 20, 7, 5, 4, 18, 9}

     };

     //MONTH4
     int USA4[8][12] = {
         {6, 20, 11, 15, 11, 15, 20, 7, 4, 10, 8, 6},
         {9, 4, 15, 20, 7, 11, 6, 2, 8, 16, 11, 1},
         {12, 1, 5, 1, 11, 14, 4, 16, 7, 10, 1, 11},
         {0, 1, 0, 6, 3, 20, 16, 0, 5, 15, 10, 8},
         {2, 2, 11, 18, 10, 9, 8, 16, 6, 2, 2, 16},
         {7, 14, 9, 18, 9, 4, 12, 5, 20, 16, 2, 20},
         {14, 11, 10, 18, 20, 16, 6, 14, 11, 17, 6, 20},
         {13, 3, 16, 10, 17, 20, 5, 3, 4, 18, 6, 7}
     };

     //MONTH5
     int USA5[8][12] = {
         {0, 14, 17, 8, 19, 12, 0, 20, 19, 8, 2, 14},
         {7, 2, 11, 18, 5, 19, 5, 10, 19, 6, 9, 13},
         {20, 7, 6, 13, 7, 2, 5, 1, 12, 20, 19, 10},
         {17, 2, 4, 5, 2, 5, 10, 6, 17, 20, 7, 12},
         {20, 9, 3, 6, 9, 19, 4, 15, 5, 16, 4, 17},
         {11, 20, 2, 17, 17, 11, 11, 11, 1, 6, 15, 11},
         {11, 9, 20, 17, 18, 16, 14, 18, 20, 6, 19, 2},
         {0, 19, 16, 18, 13, 3, 11, 7, 13, 0, 1, 7}

     };

     //MONTH6
     int USA6[8][12] = {
         {10, 0, 7, 18, 19, 3, 0, 3, 2, 2, 9, 12},
         {10, 4, 3, 13, 6, 14, 15, 13, 14, 4, 11, 16},
         {16, 5, 1, 17, 8, 5, 16, 6, 18, 0, 12, 4},
         {13, 3, 16, 8, 17, 19, 1, 6, 11, 5, 15, 3},
         {1, 20, 17, 10, 18, 0, 14, 12, 20, 8, 5, 5},
         {10, 15, 8, 3, 18, 20, 13, 11, 2, 0, 12, 7},
         {10, 16, 20, 17, 12, 14, 8, 19, 11, 15, 17, 3},
         {16, 3, 3, 8, 20, 0, 12, 16, 1, 8, 14, 11}

     };

     //MONTH7
     int USA7[8][12] = {
         {15, 20, 1, 19, 15, 1, 15, 8, 5, 16, 5, 4},
         {17, 20, 20, 7, 3, 12, 2, 4, 5, 5, 0, 10},
         {20, 0, 0, 10, 13, 3, 4, 10, 15, 9, 15, 17},
         {13, 6, 17, 20, 0, 9, 2, 7, 20, 7, 6, 7},
         {14, 0, 16, 18, 16, 3, 17, 13, 11, 7, 12, 3},
         {9, 16, 2, 15, 8, 14, 12, 20, 2, 10, 3, 6},
         {2, 0, 7, 18, 6, 12, 5, 12, 19, 3, 6, 4},
         {15, 7, 12, 4, 13, 11, 13, 18, 16, 12, 12, 4}

     };

     //MONTH8
     int USA8[8][12] = {
         {2, 9, 1, 12, 2, 7, 11, 9, 2, 15, 5, 4},
         {0, 15, 4, 14, 7, 5, 5, 9, 3, 6, 9, 15},
         {13, 4, 4, 6, 6, 16, 19, 3, 0, 13, 8, 19},
         {15, 11, 20, 4, 11, 4, 0, 16, 9, 15, 9, 17},
         {6, 0, 13, 14, 18, 2, 18, 11, 11, 13, 17, 9},
         {7, 0, 20, 3, 8, 18, 20, 1, 8, 2, 19, 16},
         {0, 16, 1, 17, 16, 3, 1, 15, 18, 15, 19, 15},
         {3, 4, 4, 20, 12, 3, 20, 3, 16, 4, 6, 1}

     };

     //MONTH9
     int USA9[8][12] = {
         {13, 7, 16, 4, 12, 3, 15, 18, 5, 0, 2, 17},
         {5, 3, 17, 17, 11, 1, 4, 20, 0, 13, 19, 15},
         {18, 17, 2, 11, 18, 19, 20, 4, 10, 3, 2, 11},
         {6, 7, 3, 16, 2, 5, 17, 0, 1, 2, 18, 11},
         {10, 7, 8, 13, 18, 13, 8, 7, 1, 15, 13, 11},
         {7, 16, 4, 18, 0, 18, 9, 19, 0, 10, 8, 18},
         {5, 0, 16, 3, 9, 13, 6, 15, 20, 5, 0, 4},
         {6, 3, 12, 2, 18, 19, 20, 10, 3, 19, 18, 0}
     };

     //MONTH10
     int USA10[8][12] = {
         {6, 8, 5, 15, 6, 20, 0, 5, 14, 3, 11, 8},
         {1, 2, 20, 2, 6, 0, 13, 0, 4, 19, 1, 20},
         {10, 2, 2, 10, 3, 8, 11, 11, 13, 20, 8, 8},
         {15, 4, 20, 14, 13, 11, 3, 11, 18, 14, 3, 8},
         {15, 6, 17, 14, 1, 15, 0, 12, 11, 6, 4, 17},
         {3, 0, 4, 20, 9, 6, 1, 0, 19, 12, 3, 3},
         {2, 0, 19, 0, 17, 4, 6, 16, 5, 10, 20, 5},
         {5, 5, 1, 14, 9, 2, 3, 15, 4, 14, 14, 9}


     };

     //MONTH11
     int USA11[8][12] = {
         {3, 12, 8, 0, 16, 17, 19, 14, 9, 13, 15, 3},
         {1, 4, 12, 13, 20, 2, 11, 17, 4, 0, 0, 20},
         {12, 10, 7, 15, 15, 18, 3, 8, 7, 17, 18, 5},
         {20, 7, 11, 1, 13, 3, 16, 9, 20, 6, 2, 1},
         {8, 11, 20, 9, 16, 11, 19, 16, 4, 20, 12, 10},
         {6, 9, 11, 0, 16, 4, 19, 4, 2, 18, 0, 15},
         {12, 17, 4, 2, 1, 15, 14, 18, 20, 2, 16, 6},
         {17, 3, 17, 10, 0, 5, 5, 2, 5, 9, 15, 12}

     };


#define dataBaseEnd }



        // Create data arrays
        QBarDataArray *dataSet = new QBarDataArray;
        QBarDataArray *dataSet2 = new QBarDataArray;
        QBarDataRow *dataRow;
        QBarDataRow *dataRow2;


            dataSet->reserve(m_years.size());



            for (int year = 0; year < m_years.size(); year++) {
                // Create a data row
                dataRow = new QBarDataRow(m_hotels.size());
                dataRow2 = new QBarDataRow(m_hotels.size());

                for (int month = 0; month < m_hotels.size(); month++) {
                    // Add data to the row

                    switch (monthFin) {
                    case 1: (*dataRow)[month].setValue(USA[year][month]);
                            (*dataRow2)[month].setValue(UAE[year][month]);ui->label_3->setText("January"); break;
                    case 2: (*dataRow)[month].setValue(USA1[year][month]);
                            (*dataRow2)[month].setValue(UAE[year][month]);ui->label_3->setText("Febuary");break;
                    case 3:(*dataRow)[month].setValue(USA2[year][month]);ui->label_3->setText("March");break;
                    case 4:(*dataRow)[month].setValue(USA3[year][month]);ui->label_3->setText("April");break;
                    case 5:(*dataRow)[month].setValue(USA4[year][month]);ui->label_3->setText("May");break;
                    case 6:(*dataRow)[month].setValue(USA5[year][month]);ui->label_3->setText("June");break;
                    case 7:(*dataRow)[month].setValue(USA6[year][month]);ui->label_3->setText("July");break;
                    case 8:(*dataRow)[month].setValue(USA7[year][month]);ui->label_3->setText("August");break;
                    case 9:(*dataRow)[month].setValue(USA8[year][month]);ui->label_3->setText("September");break;
                    case 10:(*dataRow)[month].setValue(USA9[year][month]);ui->label_3->setText("October");break;
                    case 11:(*dataRow)[month].setValue(USA10[year][month]);ui->label_3->setText("November");break;
                    case 12:(*dataRow)[month].setValue(USA11[year][month]);ui->label_3->setText("December");break;
                    default:break;

                    }

                }

                // Add the row to the set

                dataSet->append(dataRow);
                dataSet2->append(dataRow2);
            }


            // Add data to the data proxy (the data proxy assumes ownership of it)

            primary->dataProxy()->resetArray(dataSet, m_years, m_hotels);
            secondary->dataProxy()->resetArray(dataSet2, m_years, m_hotels);



        //! [5]

    }




void MainWindow::on_checkBox_stateChanged(int arg1)
{
    vis = !vis;
    m_secondarySeries->setVisible(vis);
}


void MainWindow::on_yearBox_currentIndexChanged(int index)
{

    if(index == 0)
        m_yearAxis->setRange(0,m_years.count()-1);
    else
        m_yearAxis->setRange(index-1,index-1);


}
#define BarGraphEnd }


bool arrow = false;
void MainWindow::on_playButton_clicked()
{
    arrow = false;

    while(monthFin<=monLimE && arrow==false){
        delay();
        resetHotelData(m_primarySeries,m_secondarySeries);
        monthFin++;
    }
    arrow = true;
}


void MainWindow::on_pushRight_clicked()
{
    arrow = true;
    if(monthFin!=monLimE)
    monthFin++;
    resetHotelData(m_primarySeries,m_secondarySeries);
}

void MainWindow::on_pushLeft_clicked()
{
    arrow = true;
    if(monthFin!=monLimS)
    monthFin--;
    resetHotelData(m_primarySeries,m_secondarySeries);
}

void MainWindow::on_playButton_2_clicked()
{
    arrow = true;
}

QString MainWindow::pls(){
    return endd();
}
void MainWindow::setpls(QString &pls){

}
